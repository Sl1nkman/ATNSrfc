{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/route.guard.ts","webpack:///./src/app/models/app-routing.module.ts","webpack:///./src/app/pages/admin-dashboard/admin-dashboard.component.css","webpack:///./src/app/pages/admin-dashboard/admin-dashboard.component.html","webpack:///./src/app/pages/admin-dashboard/admin-dashboard.component.ts","webpack:///./src/app/pages/current-rfcs/current-rfcs.component.css","webpack:///./src/app/pages/current-rfcs/current-rfcs.component.html","webpack:///./src/app/pages/current-rfcs/current-rfcs.component.ts","webpack:///./src/app/pages/forgot-password/forgot-password.component.css","webpack:///./src/app/pages/forgot-password/forgot-password.component.html","webpack:///./src/app/pages/forgot-password/forgot-password.component.ts","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/login/login.component.css","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/my-rfcs/my-rfcs.component.html","webpack:///./src/app/pages/my-rfcs/my-rfcs.component.scss","webpack:///./src/app/pages/my-rfcs/my-rfcs.component.ts","webpack:///./src/app/pages/phase1/phase1.component.css","webpack:///./src/app/pages/phase1/phase1.component.html","webpack:///./src/app/pages/phase1/phase1.component.ts","webpack:///./src/app/pages/phase2/phase2.component.css","webpack:///./src/app/pages/phase2/phase2.component.html","webpack:///./src/app/pages/phase2/phase2.component.ts","webpack:///./src/app/pages/phase3/phase3.component.css","webpack:///./src/app/pages/phase3/phase3.component.html","webpack:///./src/app/pages/phase3/phase3.component.ts","webpack:///./src/app/pages/registration/registration.component.css","webpack:///./src/app/pages/registration/registration.component.html","webpack:///./src/app/pages/registration/registration.component.ts","webpack:///./src/app/pages/rfcsignoff/rfcsignoff.component.css","webpack:///./src/app/pages/rfcsignoff/rfcsignoff.component.html","webpack:///./src/app/pages/rfcsignoff/rfcsignoff.component.ts","webpack:///./src/app/services/MyRfcs.service.ts","webpack:///./src/app/services/adminDashboard.service.ts","webpack:///./src/app/services/app.service.ts","webpack:///./src/app/services/ccr-http-interceptor.ts","webpack:///./src/app/services/current-ccrs.service.ts","webpack:///./src/app/services/oath.service.ts","webpack:///./src/app/services/phase1.service.ts","webpack:///./src/app/services/phase2.service.ts","webpack:///./src/app/services/phase3.service.ts","webpack:///./src/app/services/registration.service.ts","webpack:///./src/app/services/route-authorisation.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper default-theme\\\" >\\n  <main>\\n    <div class=\\\"pages container-fluid pt-4 pr-4 \\\">\\n      <router-outlet></router-outlet>\\n      <hr>\\n    </div>\\n  </main>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ATNSrfc';\n  constructor() {}\n}\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule  } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n// imports for bootstrap forms\r\nimport { HttpClientModule , HTTP_INTERCEPTORS  } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PasswordStrengthMeterModule } from 'angular-password-strength-meter';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\r\n// ngx imports\r\nimport { BsDatepickerModule } from 'ngx-bootstrap';\r\nimport { NgxFileDropModule } from 'ngx-file-drop';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { SelectDropDownModule } from 'ngx-select-dropdown';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\n// Application components\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegistrationComponent } from './pages/registration/registration.component';\r\nimport { MyRFCSComponent } from './pages/my-rfcs/my-rfcs.component';\r\nimport { CurrentRFCSComponent } from './pages/current-rfcs/current-rfcs.component';\r\nimport { Phase1Component } from './pages/phase1/phase1.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { RFCsignoffComponent } from './pages/rfcsignoff/rfcsignoff.component';\r\nimport { Phase2Component } from './pages/phase2/phase2.component';\r\nimport { Phase3Component } from './pages/phase3/phase3.component';\r\n// Routing guards, module and auth service\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { RouteGuard } from './guards/route.guard';\r\nimport { AppRoutingModule } from './models/app-routing.module';\r\nimport { RouteAuthorisationService } from './services/route-authorisation.service';\r\nimport { CcrHttpInterceptor } from './services/ccr-http-interceptor';\r\nimport { AdminDashboardComponent } from './pages/admin-dashboard/admin-dashboard.component';\nimport { ForgotPasswordComponent } from './pages/forgot-password/forgot-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegistrationComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    SidebarComponent,\r\n    MyRFCSComponent,\r\n    Phase1Component,\r\n    HomeComponent,\r\n    CurrentRFCSComponent,\r\n    RFCsignoffComponent,\r\n    Phase2Component,\r\n    Phase3Component,\r\n    AdminDashboardComponent,\r\n    ForgotPasswordComponent,\r\n\r\n  ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        SweetAlert2Module.forRoot(),\r\n        PasswordStrengthMeterModule,\r\n        CollapseModule.forRoot(),\r\n        AppRoutingModule,\r\n        CommonModule,\r\n        BsDatepickerModule.forRoot(),\r\n        NgxFileDropModule,\r\n        NgbPopoverModule,\r\n        SelectDropDownModule,\r\n    ],\r\n  providers: [AuthGuard , CookieService , RouteAuthorisationService , RouteGuard ,\r\n      { provide: HTTP_INTERCEPTORS, useClass: CcrHttpInterceptor, multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\n<!-- Student number: 27455211-->\\n<nav class=\\\"navbar navbar-expand-md fixed-top navbar-dark bg-dark flex-fill\\\" >\\n  <!-- sidebar toggler -->\\n  <!-- <button class=\\\"sidebar-toggler ml-4\\\" type=\\\"button\\\">\\n    <i class=\\\"fa fa-navicon\\\"></i>\\n  </button> -->\\n  <div class=\\\"sidebar-toggler ml-4\\\">\\n    <a class=\\\"btn nav-link\\\" (click)=\\\"toggleSidebar()\\\"><i class=\\\"fa fa-navicon\\\"></i></a>\\n  </div>\\n  <!-- header -->\\n  <div class=\\\"navbar-header pl-2 pr-2 text-center\\\">\\n    <a class=\\\"navbar-brand m-0 text-uppercase w-100\\\" href=\\\"#\\\">\\n      <!-- <i class=\\\"fa fa-flash mr-1\\\"></i> -->\\n      <span class=\\\"ml-1\\\">ATNS CCR System</span>\\n    </a>\\n  </div>\\n  <!-- left box -->\\n  <ul class=\\\"navbar-nav flex-fill mt-1 align-items-center left-nav\\\">\\n    <li class=\\\"nav-item navicon\\\">\\n      <a class=\\\"btn nav-link\\\" (click)=\\\"toggleSidebarPin()\\\"><i class=\\\"fa fa-navicon\\\"></i></a>\\n    </li>\\n<!--    <li class=\\\"nav-item flex-fill\\\">-->\\n<!--      <input class=\\\"form-control navbar-search\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">-->\\n<!--    </li>-->\\n  </ul>\\n  <!-- right menu toggler -->\\n<!--  <div class=\\\"nav-toggler-right mr-4 d-md-none\\\">-->\\n<!--    <button class=\\\"\\\" type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseBasic\\\">-->\\n<!--      &lt;!&ndash; <span class=\\\"navbar-toggler-icon\\\"></span> &ndash;&gt;-->\\n<!--      <img src=\\\"../../../assets/images/user.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">-->\\n<!--    </button>-->\\n<!--    <span class=\\\"nav-alert bg-danger\\\"></span>-->\\n<!--  </div>-->\\n  <!-- right menu -->\\n  <div class=\\\"collapse navbar-collapse right-nav\\\" id=\\\"collapseBasic\\\" [collapse]=\\\"isCollapsed\\\">\\n    <ul class=\\\"navbar-nav \\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn nav-link\\\">\\n          <i class=\\\"fa fa-bell-o\\\"></i>\\n          <span class=\\\"link-text\\\">Alerts</span>\\n          <!-- <span class=\\\"badge badge-pill ba dge-danger\\\">3</span> -->\\n          <span class=\\\"nav-alert bg-danger\\\"></span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn nav-link\\\">\\n          <i class=\\\"fa fa-envelope-o\\\"></i>\\n          <span class=\\\"link-text\\\">Messages</span>\\n          <!-- <span class=\\\"badge badge-pill badge-success\\\">5</span> -->\\n          <span class=\\\"nav-alert bg-success\\\"></span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn nav-link\\\">\\n          <i class=\\\"fa fa-user-o\\\"></i>\\n          <span class=\\\"link-text\\\">Profile</span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn nav-link\\\">\\n          <i class=\\\"fa fa-gears\\\"></i>\\n          <span class=\\\"link-text\\\">Setting</span>\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n\\n\\n</nav>\\n\"","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { AppService } from './../../services/app.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  constructor(private appService: AppService) { }\n  isCollapsed = true;\n  ngOnInit() {\n  }\n\n  toggleSidebarPin() {\n    this.appService.toggleSidebarPin();\n  }\n  toggleSidebar() {\n    this.appService.toggleSidebar();\n  }\n}\n\n","module.exports = \"\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\r\\n<!-- Student number: 27455211-->\\r\\n<aside class=\\\"sidebar shadow\\\">\\r\\n  <div class=\\\"sidebar-profile d-flex flex-column justify-content-center pt-5 pb-3\\\">\\r\\n<!--    <div class=\\\"picture-wrapper mb-3\\\">-->\\r\\n<!--      <div class=\\\"logo-container m-auto\\\">-->\\r\\n<!--        <img src=\\\"../../../assets/images/atns_logo.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">-->\\r\\n<!--      </div>-->\\r\\n<!--    </div>-->\\r\\n    <div class=\\\"profile-details text-center pb-4\\\">\\r\\n      <p class=\\\"mb-0 text-uppercase name\\\">{{this.username}}</p>\\r\\n      <small class=\\\"text-uppercase role\\\">{{this.roles}}</small>\\r\\n    </div>\\r\\n  </div>\\r\\n  <nav class=\\\"sidebar-menu pt-3 pb-3\\\">\\r\\n    <ul>\\r\\n      <li class=\\\"active\\\">\\r\\n        <a  routerLink=\\\"/home/createRFC\\\" routerLinkActive=\\\"active\\\">\\r\\n          <i class=\\\"fa fa-plus-circle \\\"></i>\\r\\n          <span>Initiate CCR</span>\\r\\n          <span class=\\\"badge badge-danger rounded-0 ml-auto text-light\\\">New</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"active\\\">\\r\\n        <a  routerLink=\\\"/home/myRFCS\\\" routerLinkActive=\\\"active\\\" >\\r\\n          <i class=\\\"fa fa-list\\\"></i>\\r\\n          <span>My CCR'S</span>\\r\\n        </a>\\r\\n      </li>\\r\\n        <!--<a href=\\\"#\\\" routerLink=\\\"/maps\\\">-->\\r\\n          <!--<i class=\\\"fa fa-globe\\\"></i>-->\\r\\n          <!--<span>Maps</span>-->\\r\\n        <!--</a>-->\\r\\n      <!--</li>-->\\r\\n      <!--<li>-->\\r\\n        <!--<a href=\\\"#\\\" routerLink=\\\"/notifications\\\">-->\\r\\n          <!--<i class=\\\"fa fa-bell-o\\\"></i>-->\\r\\n          <!--<span>Notifications</span>-->\\r\\n        <!--</a>-->\\r\\n      <!--</li>-->\\r\\n    </ul>\\r\\n  </nav>\\r\\n  <nav class=\\\"sidebar-menu pt-3 pb-3\\\">\\r\\n    <ul>\\r\\n      <li class=\\\"active\\\">\\r\\n        <a  routerLink=\\\"/home/currentrfcs\\\" routerLinkActive=\\\"active\\\">\\r\\n          <i class=\\\"fa fa-eye\\\"></i>\\r\\n          <span>CCR's Dashboard</span>\\r\\n          <!--<span class=\\\"badge badge-danger rounded-0 ml-auto text-light\\\">New</span>-->\\r\\n        </a>\\r\\n      </li>\\r\\n<!--      <li class=\\\"active\\\">-->\\r\\n<!--        <a  routerLink=\\\"/home/rfcsignoff\\\" routerLinkActive=\\\"active\\\">-->\\r\\n<!--          <i class=\\\"fa fa-leaf\\\"></i>-->\\r\\n<!--          <span>CCR Sign Off</span>-->\\r\\n<!--        </a>-->\\r\\n<!--      </li>-->\\r\\n      <li class=\\\"active\\\">\\r\\n        <a routerLink=\\\"/home/adminDashboard\\\" routerLinkActive=\\\"active\\\">\\r\\n          <i class=\\\"fa fa-diamond\\\"></i>\\r\\n          <span>Admin Dashboard</span>\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n</aside>\\r\\n\"","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport decode from 'jwt-decode';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  private username ;\r\n  private roles = '' ;\r\n  constructor(private cookieService: CookieService) { }\r\n\r\n  ngOnInit() {\r\n    const jwt  = this.cookieService.get('jwt');\r\n    const decodedToken = decode(jwt);\r\n    this.username = decodedToken.data.username;\r\n    if (decodedToken.data.roles.length === 0 ) {\r\n      this.roles = decodedToken.data.roles;\r\n    } else {\r\n      for (let i = 0 ; i < decodedToken.data.roles.length; i++) {\r\n         if (i === decodedToken.data.roles.length - 1 ) {\r\n           this.roles += decodedToken.data.roles[i] ;\r\n        } else {\r\n           this.roles += decodedToken.data.roles[i] + '/' ;\r\n         }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { OathService } from '../services/oath.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { map } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n  constructor(private oath: OathService , private router: Router , private user: UserService ) {\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.oath.isLoggedIn) {\r\n      return true;\r\n\r\n    }\r\n    return this.user.isLoggedIn().pipe( map(res => {\r\n      if (res.status) {\r\n        this.oath.setLoggedIn(true);\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['login']);\r\n        return false;\r\n      }\r\n    }));\r\n  }\r\n}\r\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n  CanActivateChild} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {RouteAuthorisationService} from '../services/route-authorisation.service';\r\nimport swal from 'sweetalert2';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteGuard implements CanActivate , CanActivateChild {\r\n\r\n  constructor(\r\n      private routeAuthorisationService: RouteAuthorisationService,\r\n  ) {}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const allowedRoles = next.data.allowedRoles;\r\n    const isAuthorized = this.routeAuthorisationService.isAuthorized(allowedRoles);\r\n\r\n    if (!isAuthorized) {\r\n      swal('Unauthorised', 'Please contact your administrator', 'error');\r\n    }\r\n    return isAuthorized;\r\n  }\r\n  canActivateChild(\r\n      childRoute: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const allowedPermission = childRoute.data.allowedPermission;\r\n    const isAuthorized = this.routeAuthorisationService.isAuthorized(allowedPermission);\r\n    if (!isAuthorized) {\r\n      // if not authorized, show access denied message\r\n      swal('Unauthorised', 'Please contact your administrator', 'error');\r\n    }\r\n    return isAuthorized;\r\n  }\r\n}\r\n\r\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegistrationComponent } from '../pages/registration/registration.component';\r\nimport { LoginComponent } from '../pages/login/login.component';\r\nimport { MyRFCSComponent } from '../pages/my-rfcs/my-rfcs.component';\r\nimport { Phase1Component } from '../pages/phase1/phase1.component';\r\nimport { HomeComponent } from '../pages/home/home.component';\r\nimport { CurrentRFCSComponent } from '../pages/current-rfcs/current-rfcs.component';\r\nimport { RFCsignoffComponent } from '../pages/rfcsignoff/rfcsignoff.component';\r\nimport { Phase2Component } from '../pages/phase2/phase2.component';\r\nimport { RouteGuard } from '../guards/route.guard';\r\nimport { AuthGuard } from '../guards/auth.guard';\r\nimport { Phase3Component } from '../pages/phase3/phase3.component';\r\nimport {AdminDashboardComponent} from '../pages/admin-dashboard/admin-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login',        component: LoginComponent },\r\n  { path: 'register', component: RegistrationComponent },\r\n  { path: 'phase1' ,      component: Phase2Component},\r\n  { path: 'phase3' ,      component: Phase3Component},\r\n  { path: 'home' ,        component: HomeComponent,\r\n    canActivate: [AuthGuard] ,\r\n    canActivateChild: [RouteGuard],\r\n    runGuardsAndResolvers: 'always',\r\n    children: [\r\n      { path: 'createRFC' ,   component: Phase1Component ,      data: { allowedPermission: '1' } , runGuardsAndResolvers: 'always' },\r\n      { path: 'myRFCS' ,      component: MyRFCSComponent ,      data: { allowedPermission: '2' }, runGuardsAndResolvers: 'always'},\r\n      { path: 'rfcsignoff' ,  component: RFCsignoffComponent ,  data: { allowedPermission: '4' }, runGuardsAndResolvers: 'always'},\r\n      { path: 'currentrfcs' , component: CurrentRFCSComponent , data: { allowedPermission: '3' }, runGuardsAndResolvers: 'always' ,\r\n        children: [\r\n          { path: 'phase2' ,      component: Phase2Component ,      data: { allowedPermission: '4' }, runGuardsAndResolvers: 'always'},\r\n          { path: 'phase3' ,      component: Phase3Component ,      data: { allowedPermission: '5' }, runGuardsAndResolvers: 'always'},\r\n        ]},\r\n        // change permission level for admin dashboard to higher security level\r\n      {path: 'adminDashboard', component: AdminDashboardComponent, data:{allowedPermission: '5'}, runGuardsAndResolvers: 'always'}\r\n      ]},\r\n  { path: '**',           component: LoginComponent },\r\n  {path: 'phase3' , component: Phase3Component},\r\n  {path: 'CurrentRFCsComponent', component: CurrentRFCSComponent},\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes , { onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n","module.exports = \"\\r\\n\"","module.exports = \"<!--Created By Blaine Viljoen-->\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!this.showSpecialist && !this.edit && !this.displayCCR\\\" >\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <h2 class=\\\"px-3 text-secondary\\\">Initiated requests:</h2><br>\\r\\n        <div *ngFor=\\\"let rfc of initiatedRFC; index as i\\\">\\r\\n\\r\\n            <div class=\\\"shadow card bg-light mx-auto\\\" style=\\\"height: 250px;\\\" >\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h2 class=\\\"px-3 pt-1 text-primary card-title\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"this.showCCR(i)\\\">CCR ID: {{rfc.ID}}</h2>\\r\\n                <p class=\\\"px-3 pt-2 card-text\\\">\\r\\n                  Request: {{rfc.requested_change}}<br>\\r\\n                  Reason: {{rfc.description}}\\r\\n                </p>\\r\\n                <button class=\\\"btn btn-outline-info btn-rounded w-40  waves-effect z-depth-0\\\" id=\\\"reassignSpec\\\" (click)=\\\"revealSpecialist(i)\\\">Reassign Specialist</button><button class=\\\"ml-2 btn btn-outline-info btn-rounded w-40  waves-effect z-depth-0\\\" id=\\\"editCCR\\\" (click)=\\\"this.editCCR(i, 'Phase1')\\\">Edit CCR</button>\\r\\n              </div>\\r\\n            </div><br>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n          <h2 class=\\\"px-3 text-secondary\\\">CCR's in Phase 2:</h2>\\r\\n          <div *ngFor=\\\"let rfc of phase2RFCs; index as i\\\">\\r\\n              <br><div class=\\\"shadow card bg-light\\\" style=\\\"height: 250px;\\\" *ngIf=\\\"rfc.ID === 0\\\">\\r\\n                  <div class=\\\"px-3 pt-2 card-body\\\">\\r\\n                      <p>Phase 2 has not yet been processed</p>\\r\\n                  </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"shadow card bg-light mx-auto\\\" style=\\\"height: 250px;\\\" *ngIf=\\\"rfc.ID !== 0\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <h2 class=\\\"px-3 pt-1 text-primary card-title\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"this.showCCR(i)\\\">CCR ID: {{rfc.ID}}</h2>\\r\\n                      <p class=\\\"px-3 pt-2 card-text\\\">\\r\\n                          Phase 1 ID: {{rfc.phase1_ID}}<br>\\r\\n                          Specialist ID: {{rfc.spec_ID}}<br>\\r\\n                          EOS ID: {{rfc.eos_ID}}\\r\\n                      </p>\\r\\n                      <button class=\\\"btn btn-outline-info btn-rounded w-40  waves-effect z-depth-0\\\" (click)=\\\"revealSpecialist(this.phase2RFCs[i])\\\">Reassign Specialist</button><button class=\\\"ml-2 btn btn-outline-info btn-rounded w-40  waves-effect z-depth-0\\\" (click)=\\\"this.editCCR(i, 'Phase2')\\\">Edit CCR</button>\\r\\n                  </div>\\r\\n              </div>\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n          <h2 class=\\\"px-3 text-secondary\\\">CCR's in Phase 3:</h2>\\r\\n          <div *ngFor=\\\"let rfc of this.phase3RFCS; index as i\\\">\\r\\n\\r\\n              <br><div class=\\\"shadow card bg-light\\\" style=\\\"height: 250px;\\\" *ngIf=\\\"rfc.ID===0\\\">\\r\\n                    <div class=\\\"px-3 pt-2 card-body\\\">\\r\\n                        <p>Phase 3 has not yet been processed</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n              <div class=\\\"shadow card bg-light mx-auto\\\" style=\\\"height: 250px;\\\" *ngIf=\\\"rfc.ID!==0\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <h2 class=\\\"px-3 pt-1 text-primary card-title\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"this.showCCR(i)\\\">CCR ID: {{rfc.ID}}</h2>\\r\\n                      <p class=\\\"px-3 pt-2 card-text\\\">\\r\\n                          CCR_ID: {{rfc.CCR_ID}}\\r\\n                      </p>\\r\\n                      <button class=\\\"btn btn-outline-info btn-rounded w-40  waves-effect z-depth-0\\\" (click)=\\\"revealSpecialist(i)\\\">Reassign Specialist</button><button class=\\\"ml-2 btn btn-outline-info btn-rounded w-40  waves-effect z-depth-0\\\" (click)=\\\"this.editCCR(i, 'Phase3')\\\">Edit CCR</button>\\r\\n                  </div>\\r\\n              </div>\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"shadow card bg-light mx-auto\\\" *ngIf=\\\"this.displayCCR\\\">\\r\\n    <h1 class=\\\"px-3 text-primary\\\">CCR:</h1>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"px-3 text-secondary\\\">Phase 1: </h2><br>\\r\\n        <p class=\\\"px-3\\\">\\r\\n            ID: {{this.initiatedRFC[this.selectedIndex].ID}}<br>\\r\\n            User: {{this.selectedUser}}<br>\\r\\n            Request: {{this.initiatedRFC[this.selectedIndex].requested_change}}<br>\\r\\n            Description: {{this.initiatedRFC[this.selectedIndex].description}}<br>\\r\\n            Start Time: {{this.initiatedRFC[this.selectedIndex].start_time}}<br>\\r\\n        </p><br>\\r\\n        <h2 class=\\\"px-3 text-secondary\\\" *ngIf=\\\"this.phase2RFCs[this.selectedIndex].ID !== 0\\\">Phase 2:</h2>\\r\\n        <p class=\\\"px-3\\\" *ngIf=\\\"this.phase2RFCs[this.selectedIndex].ID !== 0\\\">\\r\\n            Phase 2 ID: {{this.phase2RFCs[this.selectedIndex].ID}}<br>\\r\\n            Specialist: {{this.specialist}}<br>\\r\\n            TCB ID: {{this.phase2RFCs[this.selectedIndex].tcb_crf_ID}}<br>\\r\\n            Configuration description: {{this.phase2RFCs[this.selectedIndex].configurationDescr}}\\r\\n        </p>\\r\\n        <button class=\\\"btn btn-outline-info btn-rounded w-40 waves-effect z-depth-0\\\" (click)=\\\"this.hideCCR()\\\">Back</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    <div *ngIf=\\\"this.showSpecialist\\\">\\r\\n        <div class=\\\"shadow card bg-light mx-auto\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h2 class=\\\"px-3 pt-1 text-primary card-title\\\">Select the new specialist</h2>\\r\\n                <select class=\\\"px-3 pt-2 card-text rounded w-100 form-control\\\" name=\\\"selectedSpecialist\\\" id=\\\"selectedSpecialist\\\" (click)=\\\"this.selectedSpecialist($event)\\\"\\r\\n                >\\r\\n                    <option *ngFor=\\\"let specialist of this.specialists, index as i\\\" value=\\\"{{specialist[0]}}\\\">{{specialist[2]}} ({{specialist[1]}})</option>\\r\\n                </select><br>\\r\\n\\r\\n                <button class=\\\"btn btn-outline-info btn-rounded w-40  waves-effect z-depth-0\\\" (click)=\\\"this.setSpecialist()\\\">Reassign Specialist</button><button class=\\\"ml-2 btn btn-outline-info btn-rounded w-40 waves-effect z-depth-0\\\" (click)=\\\"this.hideSpecialist()\\\">Back</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<div class=\\\"form-group\\\" *ngIf=\\\"this.edit\\\" style=\\\"background-color: #ffffff;\\\">\\r\\n    <app-create-rfcs *ngIf=\\\"this.selectedPhase === 'Phase1'\\\"></app-create-rfcs><br>\\r\\n    <app-phase2 *ngIf=\\\"this.selectedPhase === 'Phase2'\\\"></app-phase2><br>\\r\\n    <app-phase3 *ngIf=\\\"this.selectedPhase === 'Phase3'\\\"></app-phase3><br>\\r\\n    <button *ngIf=\\\"this.edit\\\" class=\\\"mb-2 ml-2 btn btn-outline-info btn-rounded w-40 waves-effect z-depth-0\\\" (click)=\\\"this.back()\\\">Back</button><br>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--Created By Blaine Viljoen-->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {AdminDashboardService} from '../../services/adminDashboard.service';\r\nimport {Data, Router} from '@angular/router';\r\nimport {Phase1Service} from '../../services/phase1.service';\r\nimport {Phase2Service} from '../../services/phase2.service';\r\nimport {Phase3Service} from '../../services/phase3.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.css']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  private rfcs = [\r\n    {id: 1, request: 'something', reason: 'Cause I said so ...', site: 'FABL'},\r\n    {id: 2, request: 'something else', reason: 'Same as the last one ...', site: 'FABL'},\r\n    {id: 3, request: 'one last thing', reason: 'Just do it ...', site: 'FABL'}\r\n  ];\r\n\r\n  private selectedIndex = 0;\r\n\r\n  private initiatedRFC = [];\r\n  private phase2RFCs = [];\r\n  private phase3RFCS = [];\r\n  private sites = [];\r\n  private users = [];\r\n  private selectedUser;\r\n  private displayCCR = false;\r\n\r\n  private Token: null;\r\n  private showSpecialist = false;\r\n  private edit = false;\r\n  private selectedPhase: String = '';\r\n  private selectedCCR;\r\n  private specialists = ['Liam McCabe'];\r\n  private specialist = '';\r\n\r\n  constructor(private adminDashboardService: AdminDashboardService, private router: Router, private phase1: Phase1Service, private phase2: Phase2Service, private phase3: Phase3Service) {}\r\n\r\n  showCCR(index) {\r\n    this.displayCCR = true;\r\n    this.selectedIndex = index;\r\n    this.specialist = '';\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.users[i].ID === this.initiatedRFC[index].user_ID) {\r\n        this.selectedUser = this.users[i].name;\r\n      }\r\n    }\r\n    if (this.phase2RFCs[index].ID !== 0) {\r\n      for (let i = 0; i < this.users.length; i++) {\r\n        if (this.users[i].ID === this.phase2RFCs[index].spec_ID) {\r\n          this.specialist = this.users[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  hideCCR() {\r\n    this.displayCCR = false;\r\n  }\r\n\r\n  selectedSpecialist(event) {\r\n    this.specialist = event.target.value;\r\n  }\r\n\r\n  revealSpecialist(i) {\r\n    console.log(i);\r\n    if (this.phase2RFCs[i].ID !== 0) {\r\n      this.showSpecialist = true;\r\n      this.selectedCCR = this.phase2RFCs[i].ID;\r\n    } else {\r\n      swal('Failure' , 'A specialist has not yet processed this CCR' , 'error' );\r\n    }\r\n  }\r\n\r\n  hideSpecialist() {\r\n    this.showSpecialist = false;\r\n  }\r\n\r\n  setSpecialist() {\r\n    this.showSpecialist = false;\r\n    this.adminDashboardService.setNewSpecialist(this.selectedCCR, this.specialist).subscribe((data: Data) => {\r\n      if (data.success) {\r\n        swal('Success' , data.message , 'success' );\r\n      } else {\r\n        swal('Failure' , data.message , 'error' );\r\n      }\r\n    });\r\n  }\r\n\r\n  editCCR(index, phase) {\r\n    this.selectedPhase = phase;\r\n    this.selectedCCR = this.initiatedRFC[index];\r\n    this.edit = true;\r\n    let siteID = 0;\r\n\r\n    if (this.selectedPhase === 'Phase1') {\r\n      for (let i = 0; i < this.sites.length; i++) {\r\n        if (this.initiatedRFC[i].user_ID === this.sites[i].user_ID) {\r\n          siteID = this.sites[i].site_ID;\r\n        }\r\n      }\r\n      this.phase1.setobj(this.initiatedRFC[index], siteID);\r\n    } else if (this.selectedPhase === 'Phase2') {\r\n      let user = '';\r\n      for (let i = 0; i < this.users.length; i++) {\r\n        if (this.initiatedRFC[index].user_ID === this.users[i].ID) {\r\n          user = this.users[i].name;\r\n        }\r\n      }\r\n      for (let i = 0; i < this.sites.length; i++) {\r\n        if (this.initiatedRFC[i].user_ID === this.sites[i].user_ID) {\r\n          siteID = this.sites[i].site_ID;\r\n        }\r\n      }\r\n      this.phase2.setObj(this.phase2RFCs[index], this.initiatedRFC[index], user);\r\n    } else if (this.selectedPhase === 'Phase3') {\r\n      this.phase3.setObj(this.initiatedRFC[index]);\r\n    }\r\n\r\n    console.log(this.initiatedRFC);\r\n    console.log(this.phase2RFCs);\r\n    console.log(this.phase3RFCS);\r\n\r\n  }\r\n\r\n  back() {\r\n    this.selectedPhase = '';\r\n    this.edit = false;\r\n    this.phase1.setobj(null, 0);\r\n    this.phase2.setObj(null, null, null);\r\n    this.phase3.setObj(null);\r\n\r\n    this.setUp();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.adminDashboardService.getCSRFToken().subscribe( (data: Data) => {\r\n      this.Token = data.tokenValue ;\r\n    });\r\n\r\n    this.adminDashboardService.getSpecialistData().subscribe((data: Data) => {\r\n      this.specialists = data[0];\r\n    });\r\n\r\n    this.setUp();\r\n\r\n  }\r\n\r\n  setUp() {\r\n    this.adminDashboardService.getPageData().toPromise().then(data => {\r\n      this.initiatedRFC = data[0];\r\n      this.phase2RFCs = data[1];\r\n      this.phase3RFCS = data[2];\r\n      this.sites = data[3];\r\n      this.users = data[4];\r\n\r\n      for (let i = 0; i < this.initiatedRFC.length; i++) {\r\n        if (this.phase2RFCs.length !== this.initiatedRFC.length) {\r\n          this.phase2RFCs.push({ID: 0, phase1_ID: 0});\r\n        }\r\n        if (this.phase3RFCS.length !== this.initiatedRFC.length) {\r\n          this.phase3RFCS.push({ID: 0, phase1_ID: 0});\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < this.initiatedRFC.length; i++) {\r\n        for (let x = 0; x < this.phase2RFCs.length; x++) {\r\n          if (this.initiatedRFC[i].ID === this.phase2RFCs[x].phase1_ID) {\r\n            this.phase2RFCs.splice(i, 0, this.phase2RFCs.splice(x, 1)[0]);\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < this.initiatedRFC.length; i++) {\r\n        for (let x = 0; x < this.phase3RFCS.length; x++) {\r\n          if (this.initiatedRFC[i].ID === this.phase3RFCS[x].CCR_ID) {\r\n            this.phase3RFCS.splice(i, 0, this.phase3RFCS.splice(x, 1)[0]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n// Created by Blaine Viljoen\r\n","module.exports = \"\"","module.exports = \"<!-- Page Features -->\\r\\n<div *ngIf=\\\"!this.displayPhase3 && !this.displayPhase2\\\">\\r\\n    <div class=\\\"row text-center\\\">\\r\\n        <div class=\\\"col mb-4\\\">\\r\\n            <h2 class=\\\"px-3 text-secondary\\\">Initiated requests:</h2><br>\\r\\n        </div>\\r\\n        <div class=\\\"col mb-4\\\">\\r\\n            <h2 class=\\\"px-3 text-secondary\\\">CCR's in Phase 2:</h2>\\r\\n        </div>\\r\\n        <div class=\\\"col mb-4\\\">\\r\\n            <h2 class=\\\"px-3 text-secondary\\\">CCR's in Phase 3:</h2>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row text-center\\\" *ngFor=\\\"let ccr of myCCRs\\\" >\\r\\n        <div class=\\\"col mb-4\\\">\\r\\n            <div class=\\\"card h-100\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title\\\">{{ccr[0][0].ID}}</h4>\\r\\n                    <label>CCR Initiated: </label>\\r\\n                    <p class=\\\"card-text\\\"> {{ccr[0][0].start_time}}</p>\\r\\n                    <label>User ID</label>\\r\\n                    <p class=\\\"card-text\\\">{{ccr[0][0].user_ID}}</p>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!ccr[1][0]\\\" (click)=\\\"configureCCR(ccr[0][0])\\\">Configure CCR</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col mb-4\\\">\\r\\n            <div class=\\\"card h-100\\\" *ngIf=\\\"ccr[1][0]\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title\\\">{{ccr[1][0].ID}}</h4>\\r\\n                    <p class=\\\"card-text\\\">TCB CRF ID: {{ccr[1][0].tcb_crf_ID}}</p>\\r\\n                    <p class=\\\"card-text\\\">Started: {{ccr[1][0].startDate}}</p>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\"  *ngIf=\\\" !ccr[2][0]\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"implementCCR(ccr)\\\">Implement CCR</button>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\"  *ngIf=\\\"ccr[2][0]\\\">\\r\\n<!--                    <button class=\\\"btn btn-primary\\\" *ngIf=\\\"ccr[2][0]\\\" (click)=\\\"implementCCR(ccr)\\\">Implement CCR</button>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col mb-4\\\">\\r\\n            <div class=\\\"card h-100\\\" *ngIf=\\\"ccr[2][0]\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title\\\">{{ccr[2][0].ID}}</h4>\\r\\n                    <p class=\\\"card-text\\\" *ngIf=\\\"ccr[2][0].start_tcb_evaluation_date !== '0000-00-00'\\\">\\r\\n                        <label>TCB evaluation start date: </label>\\r\\n                        {{ccr[2][0].start_tcb_evaluation_date}}\\r\\n                    </p>\\r\\n                    <p class=\\\"card-text\\\" *ngIf=\\\"ccr[2][0].close_out_confirmed === '1'\\\">This CCR has been closed out </p>\\r\\n                    <p class=\\\"card-text\\\" *ngIf=\\\"ccr[2][0].close_out_confirmed === '0'\\\">This CCR has not been closed out </p>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" *ngIf=\\\"ccr[2][0].close_out_confirmed === '0'\\\" (click)=\\\"implementCCR(ccr)\\\">Implement CCR</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    <app-phase2 *ngIf=\\\"this.displayPhase2\\\"></app-phase2><br>\\r\\n    <app-phase3 *ngIf=\\\"this.displayPhase3\\\"></app-phase3><br>\\r\\n\\r\\n\"","// Created by Blaine Viljoen\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {CurrentCcrsService} from '../../services/current-ccrs.service';\r\nimport {Data} from '@angular/router';\r\nimport {Phase2Service} from '../../services/phase2.service';\r\nimport {Phase3Service} from '../../services/phase3.service';\r\n\r\n@Component({\r\n  selector: 'app-current-rfcs',\r\n  templateUrl: './current-rfcs.component.html',\r\n  styleUrls: ['./current-rfcs.component.css']\r\n})\r\nexport class CurrentRFCSComponent implements OnInit {\r\n  private myCCRs ;\r\n\r\n  constructor(private currentccrsService: CurrentCcrsService, private  phase2service: Phase2Service , private phase3service: Phase3Service) { }\r\n  private displayPhase2: boolean;\r\n  private displayPhase3: boolean;\r\n\r\n  configureCCR(ccr) {\r\n    this.phase2service.setObj(null , ccr , null);\r\n    this.displayPhase2 = true;\r\n  }\r\n\r\n  implementCCR(ccr) {\r\n    this.phase3service.setphases(ccr);\r\n    this.displayPhase3 = true;\r\n  }\r\n  ngOnInit() {\r\n    this.currentccrsService.getMyCCRs().subscribe( (data: Data) => {\r\n      this.myCCRs = data;\r\n      console.log(this.myCCRs);\r\n        }\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  forgot-password works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\n<!-- Student number: 27455211-->\\n\\n<div class=\\\"wrapper default-theme\\\" [ngClass]=\\\"getClasses()\\\">\\n  <!--  <app-login></app-login>-->\\n  <app-navbar></app-navbar>\\n  <main>\\n    <app-sidebar></app-sidebar>\\n    <div class=\\\"pages container-fluid pb-4 pl-4 pr-4 \\\">\\n      <router-outlet></router-outlet>\\n      <hr>\\n    </div>\\n    <div class=\\\"overlay\\\" (click)=\\\"toggleSidebar()\\\"></div>\\n  </main>\\n</div>\\n\\n\"","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\n\r\nimport {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '../../services/app.service';\r\nimport {Router, NavigationEnd, RouterEvent} from '@angular/router';\r\nimport {Subject} from 'rxjs';\r\nimport {filter, takeUntil} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit , OnDestroy {\r\n\r\n  public destroyed = new Subject<any>();\r\n  constructor(private appService: AppService , private router: Router) {\r\n  }\r\n\r\n  getClasses() {\r\n    const classes = {\r\n      'pinned-sidebar': this.appService.getSidebarStat().isSidebarPinned,\r\n      'toggeled-sidebar': this.appService.getSidebarStat().isSidebarToggeled\r\n    };\r\n    return classes;\r\n  }\r\n  toggleSidebar() {\r\n    this.appService.toggleSidebar();\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.router.events.pipe(\r\n        filter((event: RouterEvent) => event instanceof NavigationEnd),\r\n        takeUntil(this.destroyed)\r\n    ).subscribe(() => {\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\n<!-- Student number: 27455211-->\\n<div class=\\\"card mx-auto\\\" style=\\\"width: 45rem;\\\">\\n\\n  <h5 class=\\\"card-header info-color white-text text-center py-4\\\">\\n    <strong>Sign in</strong>\\n  </h5>\\n\\n  <div class=\\\"card-body px-lg-5 pt-0\\\">\\n    <form class=\\\"md-form\\\" style=\\\"color: #757575;\\\">\\n      <label for=\\\"username\\\">User Name</label>\\n      <input type=\\\"email\\\" id=\\\"username\\\"  name=\\\"username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user\\\" (input)=\\\"setUsername(user)\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"pass\\\"  (input)=\\\"setPassword(pass)\\\">\\n      <div class=\\\"d-flex align-items-center justify-content-between\\\">\\n        <div>\\n          <a href=\\\"\\\">Forgot password?</a>\\n        </div>\\n      </div>\\n\\n      <button class=\\\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\\\" type=\\\"submit\\\"  (click)=\\\"onLogin($event)\\\">Sign in</button>\\n\\n      <div class=\\\"text-center\\\">\\n        <p>Not a member?\\n          <a href=\\\"#\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\n        </p>\\n\\n      </div>\\n      <input type=\\\"hidden\\\"  value=\\\"{{this.Token}}\\\">\\n    </form>\\n  </div>\\n</div>\\n\"","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {OAuth} from '../../models/OAuth';\r\nimport swal from 'sweetalert2'; // Sweet Alerts import\r\nimport {OathService} from '../../services/oath.service';\r\nimport {Data, Router } from '@angular/router';\r\nimport {CookieService} from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private OAuthService: OathService ,\r\n              private router: Router ,  private cookieService: CookieService) { }\r\n  user: String = '';\r\n  pass: String = '';\r\n  OAuth: OAuth = {\r\n    username: undefined,\r\n    password: undefined\r\n  };\r\n  Token = null ;\r\n\r\n  setUsername(user) {\r\n    this.user = user;\r\n  }\r\n  setPassword(pass) {\r\n    this.pass = pass;\r\n  }\r\n  onLogin(event) {\r\n    const target = event.target;\r\n      this.OAuth.username = this.user;\r\n      this.OAuth.password = this.pass ;\r\n\r\n      this.OAuthService.getUserDetails(this.OAuth.username, this.OAuth.password , this.Token ).subscribe((data: Data) => {\r\n        if (data.success) {\r\n          this.OAuthService.setLoggedIn(true);\r\n          this.cookieService.set( 'jwt', data.jwt );\r\n\r\n          this.router.navigate(['home']  );\r\n          // swal('Logged In' , data.message , 'success' );\r\n          swal({\r\n            type: 'success',\r\n            title: 'Logged In',\r\n            text: data.message ,\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n        } else {\r\n          this.OAuthService.getCSRFToken().subscribe( ( data1: Data) => {\r\n            this.Token = data1.tokenValue ;\r\n          });\r\n          swal('Failure', data.message , 'error');\r\n        }\r\n      });\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.OAuthService.getCSRFToken().subscribe( (data: Data) => {\r\n      this.Token = data.tokenValue ;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--Created by Blaine Viljoen(28023374)-->\\r\\n\\r\\n<form>\\r\\n  <div *ngFor=\\\"let rfc of rfcs; index as i\\\">\\r\\n    <div class=\\\"shadow card bg-light mx-auto\\\" (click)=\\\"onClick(i)\\\" style=\\\"cursor: pointer;\\\">\\r\\n      <div class=\\\"form group\\\">\\r\\n        <h2 class=\\\"px-3 pt-1 text-primary\\\">CCR ID: {{rfc[0]}}</h2><br>\\r\\n        <h3 class=\\\"px-3 text-secondary\\\">Request: {{rfc[1]}}</h3>\\r\\n        <h3 class=\\\"px-3 text-secondary\\\">Reason: {{rfc[2]}}</h3>\\r\\n        <h3 class=\\\"px-3 text-secondary\\\">Files:</h3>\\r\\n        <div *ngFor=\\\"let link of links\\\">\\r\\n          <a class=\\\"px-3\\\" href=\\\"{{link}}\\\">{{link}}</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n  </div>\\r\\n\\r\\n  <h3 id=\\\"test\\\" class=\\\"pt-3 px-3 text-primary\\\"></h3>\\r\\n</form>\\r\\n\\r\\n<!--Created by Blaine Viljoen(28023374)-->\\r\\n\"","module.exports = \"\"","// Created by Blaine Viljoen\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {MyRfcsService} from '../../services/MyRfcs.service';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {Data} from '@angular/router';\r\nimport decode from 'jwt-decode';\r\n\r\n@Component({\r\n  selector: 'app-my-rfcs',\r\n  templateUrl: './my-rfcs.component.html',\r\n  styleUrls: ['./my-rfcs.component.scss']\r\n})\r\nexport class MyRFCSComponent implements OnInit {\r\n\r\n  private userID: string;\r\n  private links = [];\r\n\r\n  Token = null;\r\n\r\n  rfcs = [\r\n    {id: 1, request: 'something', reason: 'Cause I said so ...'},\r\n    {id: 2, request: 'something else', reason: 'Same as the last one ...'},\r\n    {id: 3, request: 'one last thing', reason: 'Just do it ...'}\r\n  ];\r\n\r\n  onClick(index) {\r\n    document.getElementById('test').innerHTML = 'You selected the card with id: ' + this.rfcs[index][0];\r\n  }\r\n\r\n  constructor(private myRfcsService: MyRfcsService, private cookieService: CookieService) { }\r\n\r\n  ngOnInit() {\r\n    const jwt  = this.cookieService.get('jwt');\r\n    const decodedToken = decode(jwt);\r\n    this.userID = decodedToken.data.id;\r\n\r\n\r\n    this.myRfcsService.getCSRFToken().subscribe( (data: Data) => {\r\n      this.Token = data.tokenValue ;\r\n    });\r\n    this.myRfcsService.getPageData(this.userID.toString()).subscribe((data:Data) => {\r\n      this.rfcs = data[0];\r\n    });\r\n\r\n    this.myRfcsService.getFiles().subscribe((data:Data) => {\r\n      this.links = data[0];\r\n    });\r\n  }\r\n\r\n}\r\n// Created by Blaine Viljoen\r\n","module.exports = \"\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\r\\n<!-- Student number: 27455211-->\\r\\n  <form class=\\\"card mx-auto secondary-color\\\">\\r\\n    <div class=\\\"form-group px-3 pt-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\"> <label for= \\\"site\\\">Select your site</label></div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <select ngbPopover=\\\"Select from the drop down list The site you want to make your request within\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom\\\" popoverTitle=\\\"SELECT SITE\\\"\\r\\n                  class=\\\"rounded w-100 form-control\\\"\\r\\n                  name=\\\"site\\\"\\r\\n                  id=\\\"site\\\"\\r\\n                  (change)=\\\"onSelectSite($event)\\\" >\\r\\n            <option id=\\\"default\\\" selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n            <option *ngFor=\\\"let site of usersSites\\\"  [value]=\\\"site[0]\\\" [selected]=\\\"this.RFC.site_ID == site[0]\\\" >{{site[1]}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group px-3 pt-3\\\" *ngIf=\\\"this.displayNotifyManager\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\"> <label>Would you like to notify a manager?</label></div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <Label class=\\\"radio-inline px-3\\\">\\r\\n            <input type=\\\"radio\\\"\\r\\n                   name=\\\"notifyManager\\\"\\r\\n                   value=\\\"yes\\\"\\r\\n                   (click)=\\\"onSelectNotifyManager($event)\\\">\\r\\n            Yes\\r\\n          </Label>\\r\\n          <Label class=\\\"radio-inline px-3\\\">\\r\\n            <input type=\\\"radio\\\"\\r\\n                   name=\\\"notifyManager\\\"\\r\\n                   value=\\\"no\\\"\\r\\n                   (click)=\\\"onSelectNotifyManager($event)\\\" >\\r\\n            No\\r\\n          </Label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group px-3 pt-3\\\" *ngIf=\\\"this.displayNoManagers\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\"> <label for= \\\"managerSelect\\\">How many Managers?</label></div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <select ngbPopover=\\\"Select from the drop down list The site you want to make your request within\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom\\\" popoverTitle=\\\"SELECT SITE\\\"\\r\\n                  class=\\\"rounded w-100 form-control\\\"\\r\\n                  name=\\\"managerSelect\\\"\\r\\n                  id=\\\"managerSelect\\\"\\r\\n                  (change)=\\\"onSelectNoManagers($event)\\\" >\\r\\n            <option  selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n            <option *ngFor=\\\"let noManager of noManagers\\\"  [value]=\\\"noManager\\\"  >{{noManager}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group px-3 pt-3\\\"*ngIf=\\\"this.displayManagerSelect1\\\" >\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\"> <label for= \\\"manager1\\\">Select a Manager to notify</label></div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <select ngbPopover=\\\"Select from the drop down list The site you want to make your request within\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom\\\" popoverTitle=\\\"SELECT SITE\\\"\\r\\n                  class=\\\"rounded w-100 form-control\\\"\\r\\n                  name=\\\"manager1\\\"\\r\\n                  id=\\\"manager1\\\"\\r\\n                  (change)=\\\"onSelectManager1($event)\\\" >\\r\\n            <option  selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n            <option *ngFor=\\\"let manager of managers\\\"  [value]=\\\"manager[0]\\\"  >{{manager[1] + ' ' + manager[2]}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group px-3 pt-3\\\" *ngIf=\\\"this.displayManagerSelect2\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\"> <label for= \\\"manager2\\\">Select a Manager to notify</label></div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <select ngbPopover=\\\"Select from the drop down list The site you want to make your request within\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom\\\" popoverTitle=\\\"SELECT SITE\\\"\\r\\n                  class=\\\"rounded w-100 form-control\\\"\\r\\n                  name=\\\"manager2\\\"\\r\\n                  id=\\\"manager2\\\"\\r\\n                  (change)=\\\"onSelectManager2($event)\\\" >\\r\\n            <option  selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n            <option *ngFor=\\\"let manager of managers\\\"  [value]=\\\"manager[0]\\\"  >{{manager[1] + ' ' + manager[2]}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group px-3 pt-3\\\" *ngIf=\\\"this.displayManagerSelect3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\"> <label for= \\\"manager3\\\">Select a Manager to notify</label></div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <select ngbPopover=\\\"Select from the drop down list The site you want to make your request within\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom\\\" popoverTitle=\\\"SELECT SITE\\\"\\r\\n                  class=\\\"rounded w-100 form-control\\\"\\r\\n                  name=\\\"manager3\\\"\\r\\n                  id=\\\"manager3\\\"\\r\\n                  (change)=\\\"onSelectManager3($event)\\\" >\\r\\n            <option  selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n            <option *ngFor=\\\"let manager of managers\\\"  [value]=\\\"manager[0]\\\"  >{{manager[1] + ' ' + manager[2]}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group px-3 pt-3\\\" *ngIf=\\\"this.displayRequestDescription\\\">\\r\\n      <label for= \\\"requestedChange\\\">Change Request Description</label>\\r\\n      <textarea rows=\\\"8\\\"\\r\\n                class=\\\"form-control rounded\\\"\\r\\n                type=\\\"text\\\"\\r\\n                name=\\\"requestedChange\\\"\\r\\n                id=\\\"requestedChange\\\"\\r\\n                maxlength=\\\"255\\\"\\r\\n                (input)=\\\"requestedChange()\\\"\\r\\n                [(ngModel)]=\\\"RFC.requestDescription\\\">\\r\\n      </textarea>\\r\\n    </div>\\r\\n    <div class=\\\"form-group px-3\\\" *ngIf=\\\"this.displayReasonForRequest\\\">\\r\\n      <label for=\\\"description\\\">Reason For Request</label>\\r\\n      <textarea rows=\\\"8\\\"\\r\\n                class=\\\"form-control rounded\\\"\\r\\n                type=\\\"text\\\"\\r\\n                name=\\\"description\\\"\\r\\n                id=\\\"description\\\"\\r\\n                maxlength=\\\"255\\\"\\r\\n                (input)=\\\"description()\\\"\\r\\n                [(ngModel)]=\\\"RFC.reasonForRequest\\\"\\r\\n      ></textarea>\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"row px-3\\\">\\r\\n      <div class=\\\"col\\\"></div>\\r\\n      <div class=\\\"col\\\">\\r\\n        <button\\r\\n                type=\\\"cancel\\\"\\r\\n                id=\\\"cancel\\\"\\r\\n                class=\\\"btn btn-outline-danger btn-rounded w-100 mx-auto   my-4 waves-effect z-depth-0\\\" (click)=\\\"onCancel()\\\"\\r\\n        >Cancel</button>\\r\\n      </div>\\r\\n      <div class=\\\"col\\\"></div>\\r\\n      <div class=\\\"col\\\">\\r\\n        <button\\r\\n                type=\\\"submit\\\"\\r\\n                id=\\\"submit\\\"\\r\\n                class=\\\"btn btn-outline-info btn-rounded w-100 mx-auto my-4 waves-effect z-depth-0 disabled\\\" [disabled]=\\\"!this.enableSubmitButton\\\" (click)=\\\"onSubmit()\\\"\\r\\n        >Submit</button>\\r\\n      </div>\\r\\n      <div class=\\\"col\\\"></div>\\r\\n    </div>\\r\\n  </form>\\r\\n\"","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RFC } from '../../models/RFC';\r\nimport {Phase1Service} from '../../services/phase1.service';\r\nimport {Data, Router} from '@angular/router';\r\nimport swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-rfcs',\r\n  templateUrl: './phase1.component.html',\r\n  styleUrls: ['./phase1.component.css']\r\n})\r\nexport class Phase1Component implements OnInit {\r\n  private usersSites ;\r\n  private managers;\r\n  private localOBJ;\r\n  private enableSubmitButton: boolean;\r\n  private displayNotifyManager: boolean;\r\n  private displayRequestDescription: boolean;\r\n  private displayReasonForRequest: boolean;\r\n  private displayNoManagers: boolean;\r\n  private noManagers: number [] = [1, 2, 3];\r\n  private displayManagerSelect1: boolean;\r\n  private displayManagerSelect2: boolean;\r\n  private displayManagerSelect3: boolean;\r\n  constructor(private phase1Service: Phase1Service ,  private router: Router) { }\r\n  private RFC: RFC  = {\r\n    dateRequested: undefined,\r\n    requestDescription: undefined,\r\n    reasonForRequest: undefined,\r\n    CSRF_token: undefined,\r\n    site_ID: undefined\r\n  };\r\n\r\n  public onSelectSite($event) {\r\n    this.RFC.site_ID = $event.target.value;\r\n    console.log($event.target.value);\r\n    localStorage.setItem('site' , $event.target.value);\r\n    this.displayNotifyManager = true;\r\n  }\r\n  onSelectNotifyManager($event) {\r\n    switch ($event.target.value) {\r\n      case 'yes':\r\n        this.displayNoManagers = true;\r\n        break;\r\n      case 'no' :\r\n        this.displayRequestDescription = true;\r\n    }\r\n  }\r\n  public onSelectNoManagers($event) {\r\n    switch ($event.target.value) {\r\n      case '1'  :\r\n        this.displayManagerSelect1 = true;\r\n        this.displayManagerSelect2 = false;\r\n        this.displayManagerSelect3 = false;\r\n        break;\r\n      case '2' :\r\n        this.displayManagerSelect1 = true;\r\n        this.displayManagerSelect2 = true;\r\n        this.displayManagerSelect3 = false;\r\n        break;\r\n      case '3' :\r\n        this.displayManagerSelect1 = true;\r\n        this.displayManagerSelect2 = true;\r\n        this.displayManagerSelect3 = true;\r\n        break;\r\n    }\r\n  }\r\n  onSelectManager1($event) {\r\n    this.displayRequestDescription = true;\r\n  }\r\n\r\n  onSelectManager2($event) {\r\n    this.displayRequestDescription = true;\r\n  }\r\n  onSelectManager3($event) {\r\n    this.displayRequestDescription = true;\r\n  }\r\n\r\n\r\n  public  requestedChange() {\r\n    this.displayReasonForRequest = true;\r\n    localStorage.setItem('request' , this.RFC.requestDescription);\r\n  }\r\n  public description() {\r\n    localStorage.setItem('description' , this.RFC.reasonForRequest);\r\n      const submitButton = document.getElementById('submit');\r\n      if (this.RFC.requestDescription !== undefined && this.RFC.reasonForRequest !== undefined && this.RFC.site_ID !== undefined) {\r\n        submitButton.classList.remove('disabled');\r\n        this.enableSubmitButton = true;\r\n      }\r\n  }\r\n  public onCancel() {\r\n\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'You will lose this data',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'No',\r\n      confirmButtonColor: '#5bc0de',\r\n      cancelButtonColor: '#d9534f' ,\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        localStorage.removeItem('request');\r\n        localStorage.removeItem('description');\r\n        localStorage.removeItem('site');\r\n        this.router.navigate(['home/myRFCS']);\r\n      } else if (\r\n          result.dismiss === swal.DismissReason.cancel\r\n      ) {\r\n        swal({\r\n          title: 'Cancelled',\r\n          text: 'Your may continue to make changes',\r\n          type: 'error',\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        });\r\n      }\r\n    });\r\n  }\r\n  public onSubmit() {\r\n\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'You won\\'t be able make changes to your submission',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Submit',\r\n      cancelButtonText: 'Cancel',\r\n      confirmButtonColor: '#5bc0de',\r\n      cancelButtonColor: '#d9534f' ,\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (this.localOBJ !== null) {\r\n          this.phase1Service.updateRequest(this.RFC, this.localOBJ.ID).subscribe((data: Data) => {\r\n            if (data.success) {\r\n              this.localOBJ = null;\r\n              localStorage.removeItem('request');\r\n              localStorage.removeItem('description');\r\n              localStorage.removeItem('site');\r\n              swal('Success' , data.message , 'success' );\r\n            } else {\r\n              swal('Failure' , data.message , 'error' );\r\n            }\r\n          });\r\n        } else {\r\n          this.phase1Service.submitRequest( this.RFC ).subscribe( (data: Data) => {\r\n            if (data.success) {\r\n              localStorage.removeItem('request');\r\n              localStorage.removeItem('description');\r\n              localStorage.removeItem('site');\r\n              this.router.navigate(['home']);\r\n              swal('Success' , data.message , 'success' );\r\n            } else {\r\n              swal('Failure' , data.message , 'error' );\r\n              if (data.message === 'Session expired') {\r\n                this.router.navigate(['login']);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      } else if (\r\n          /* Read more about handling dismissals below */\r\n          result.dismiss === swal.DismissReason.cancel\r\n      ) {\r\n        swal({\r\n          title: 'Cancelled',\r\n          text: 'Your may continue to make changes',\r\n          type: 'error',\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        });\r\n      }\r\n    });\r\n  }\r\n  ngOnInit() {\r\n\r\n    this.phase1Service.getCSRFToken().subscribe( (data: Data) => {\r\n      this.RFC.CSRF_token = data.tokenValue ;\r\n    });\r\n    this.phase1Service.getPageData().subscribe((data: Data) => {\r\n      this.usersSites = data[0];\r\n      this.managers = data[1];\r\n    });\r\n\r\n    this.localOBJ = this.phase1Service.getobj();\r\n\r\n    if (this.localOBJ !== null) {\r\n      localStorage.setItem('request', this.localOBJ.requested_change);\r\n      localStorage.setItem('description', this.localOBJ.description);\r\n      localStorage.setItem('site', this.phase1Service.getSite().toString());\r\n      this.enableSubmitButton = true;\r\n      const submitButton = document.getElementById('submit');\r\n      submitButton.classList.remove('disabled');\r\n      document.getElementById('cancel').classList.add('invisible');\r\n    } else {\r\n      this.RFC.requestDescription = localStorage.getItem('request');\r\n      this.RFC.reasonForRequest = localStorage.getItem('description');\r\n      this.RFC.site_ID = localStorage.getItem('site');\r\n      if ( this.RFC.site_ID !== null || undefined) {\r\n        this.displayNotifyManager = true;\r\n      }\r\n      if (this.RFC.requestDescription !== null || undefined) {\r\n        this.displayRequestDescription = true;\r\n      }\r\n      if (this.RFC.reasonForRequest !== null || undefined) {\r\n        this.displayReasonForRequest = true;\r\n        this.enableSubmitButton = true;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"import\\r\\n.special {\\r\\n    font-weight: bold !important;\\r\\n    color: #fff !important;\\r\\n    background: #bc0000 !important;\\r\\n    text-transform: uppercase;\\r\\n}\\r\\n\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\r\\n<!-- Student number: 27455211-->\\r\\n<form>\\r\\n    <div class=\\\"card secondary-color\\\">\\r\\n        <h3 class=\\\"px-3 text-primary\\\">Request for Change</h3>\\r\\n        <div>\\r\\n            <label class=\\\"px-3 d-inline-block\\\">Name of Initiator: {{this.user}}</label>\\r\\n            <p class=\\\" px-3 d-inline-block\\\"></p>\\r\\n            <label class=\\\"px-3 d-inline-block\\\">Date Requested: {{this.RFC.dateRequested}}</label>\\r\\n            <p class=\\\"px-3 d-inline-block\\\"></p>\\r\\n        </div>\\r\\n        <label class=\\\"px-3 \\\">Requested Change Description: </label>\\r\\n        <p class=\\\"px-3\\\">{{this.RFC.requestDescription}}</p>\\r\\n        <label class=\\\"px-3\\\">Reason for request: </label>\\r\\n        <p class=\\\"px-3\\\">{{this.RFC.reasonForRequest}}</p>\\r\\n    </div>\\r\\n    <div id=\\\"phase2\\\" style=\\\"\\\" class=\\\"shadow card bg-light mx-auto\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <h3 class=\\\"px-3 text-primary\\\"> CCR specialist phase 1</h3>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\" for=\\\"priority\\\">Request Priority</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <select ngbPopover=\\\"Select from the drop down list whether the change request is an EMERGENCY or NON-EMERGENCY (NORMAL).\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"CHANGE REQUEST PRIORITY\\\"\\r\\n                            class=\\\"rounded w-100 form-control\\\"\\r\\n                            name=\\\"priority\\\"\\r\\n                            id=\\\"priority\\\"\\r\\n                            (change)=\\\"onSelectPriority($event)\\\" >\\r\\n                        <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                        <option *ngFor=\\\"let priority of availablePriorities\\\"  [value]=\\\"priority[0]\\\" [selected]=\\\"this.phase2.requestPriority === priority[0]\\\">{{priority[1]}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div *ngIf=\\\"this.displayPredictedRisks\\\">\\r\\n                        <label class=\\\"px-3\\\"  for=\\\"predictedImpact\\\"> Predicted Risk/s </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div *ngIf=\\\"this.displayPredictedRisks\\\">\\r\\n                        <select ngbPopover=\\\"Select the appropriate option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"PREDICTED RISK\\\"\\r\\n                                class=\\\"rounded w-100 form-control\\\"\\r\\n                                name=\\\"predictedImpact\\\"\\r\\n                                id=\\\"predictedImpact\\\"\\r\\n                                (change)=\\\"onSelectImpact($event)\\\" >\\r\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                            <option *ngFor=\\\"let impacts of availableImpacts\\\" [selected]=\\\"this.phase2.predictedImpact === impacts[0]\\\"  [value]=\\\"impacts[0]\\\" >{{impacts[1]}}</option>\\r\\n                        </select>\\r\\n<!--                        <ngx-select-dropdown-->\\r\\n<!--                                ngbPopover=\\\"Select the appropriate option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"PREDICTED RISK\\\"-->\\r\\n<!--                                id=\\\"predictedImpact\\\"-->\\r\\n<!--                                name=\\\"predictedImpact\\\"-->\\r\\n<!--                                (change)=\\\"onSelectImpact($event)\\\"-->\\r\\n<!--                                [multiple]=\\\"true\\\"-->\\r\\n<!--                                [(ngModel)]=\\\"this.phase2.predictedImpact\\\"-->\\r\\n<!--                                [options]=\\\"availableImpacts\\\">-->\\r\\n<!--                        </ngx-select-dropdown>-->\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm \\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayChangePeriod\\\">\\r\\n            <div class=\\\"row\\\" >\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div *ngIf=\\\"this.displayChangePeriod\\\">\\r\\n                        <label class=\\\"px-3\\\" for=\\\"changePeriod\\\" >Change Period</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div *ngIf=\\\"this.displayChangePeriod\\\">\\r\\n                        <select ngbPopover=\\\"Specify whether the requested change will be permanent or just temporary by selecting an option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"CHANGE PERIOD\\\"\\r\\n                                class=\\\"rounded w-100 form-control\\\"\\r\\n                                name=\\\"changePeriod\\\"\\r\\n                                id=\\\"changePeriod\\\"\\r\\n                                (change)=\\\"onSelectChangePeriod($event)\\\">\\r\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                            <option *ngFor=\\\"let period of availablePeriods\\\"  [value]=\\\"period[0]\\\" [selected]=\\\"this.phase2.changePeriod === period[0]\\\">{{period[1]}}</option>\\r\\n                        </select>\\r\\n                     </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div  *ngIf=\\\"this.displaySelectTemporaryAmountOfDays\\\">\\r\\n                        <label class=\\\"px-3\\\" for=\\\"changePeriod\\\" >Temporary period number of days</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div  *ngIf=\\\"displaySelectTemporaryAmountOfDays\\\">\\r\\n                        <select ngbPopover=\\\"Select the appropriate option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"PREDICTED RISK\\\"\\r\\n                                class=\\\"rounded w-100 form-control\\\"\\r\\n                                name=\\\"temporaryNoDays\\\"\\r\\n                                id=\\\"temporaryNoDays\\\"\\r\\n                                (change)=\\\"onSelectNumberOfTemporaryDays($event)\\\" >\\r\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select no. of days</option>\\r\\n                            <option  *ngFor=\\\"let day of availableNumberOfTemporaryDays\\\" [selected]=\\\"this.phase2.temporaryPeriodNumberOfDays ===  day\\\" value=\\\"{{day}}\\\">{{day}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"displayTemporaryDateSelection\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\" for=\\\"temporaryStartPeriod\\\" >Temporary period start date:</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm \\\">\\r\\n                    <input class=\\\"rounded w-100 form-control\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           id=\\\"temporaryStartPeriod\\\"\\r\\n                           name=\\\"temporaryStartPeriod\\\"\\r\\n                           autocomplete=\\\"off\\\"\\r\\n                           bsDatepicker\\r\\n                           [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                           [(ngModel)]=\\\"this.phase2.temporaryPeriodStartDate\\\"\\r\\n                           (ngModelChange)=\\\"onSelectTemporaryStartDate($event)\\\"\\r\\n                           >\\r\\n                </div>\\r\\n                <div class=\\\"col-sm \\\"> <label class=\\\"px-3\\\" for=\\\"temporaryEndPeriod\\\" >Temporary period end date:</label></div>\\r\\n                <div class=\\\"col-sm \\\">\\r\\n                    <input  class=\\\"rounded w-100 form-control\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            id=\\\"temporaryEndPeriod\\\"\\r\\n                            name=\\\"temporaryEndPeriod\\\"\\r\\n                            autocomplete=\\\"off\\\"\\r\\n                            bsDatepicker\\r\\n                            [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                            [(ngModel)]=\\\"this.phase2.temporaryPeriodEndDate\\\"\\r\\n                            disabled\\r\\n                            readonly>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm \\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayNatureOfChange\\\">\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"this.displayNatureOfChange\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div *ngIf=\\\"this.displayNatureOfChange\\\">\\r\\n                        <label class=\\\"px-3\\\" for=\\\"natureOfChange\\\">Nature of the change</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div *ngIf=\\\"this.displayNatureOfChange\\\">\\r\\n                        <select popoverTitle=\\\"SELECT NATURE OF CHANGE\\\" ngbPopover=\\\"Select an option from the drop down list. National = Change affects both Northern and Southern regions. Regional = Either Northern or Southern is affected, but not both. Local = any ATCC or TCU or RT\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                                class=\\\"rounded w-100 form-control\\\"\\r\\n                                name=\\\"natureOfChange\\\"\\r\\n                                id=\\\"natureOfChange\\\"\\r\\n                                (change)=\\\"onSelectNatureOfChange($event)\\\"\\r\\n                                [(ngModel)]=\\\"this.phase2.natureOfChange\\\">\\r\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                            <option *ngFor=\\\"let change of availableNatureOfChange\\\"  [value]=\\\"change[0]\\\" [selected]=\\\"this.phase2.natureOfChange === change[0]\\\">{{change[1]}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div *ngIf=\\\"this.displayEOSystem\\\">\\r\\n                        <label class=\\\"px-3\\\"  for=\\\"eosSystem\\\">EOS system</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div *ngIf=\\\"this.displayEOSystem\\\">\\r\\n                        <select popoverTitle=\\\"SELECT EOS SYSTEM\\\" ngbPopover=\\\"Please select from the drop down list the Essential Operational System (EOS) to which the Trusted Computing Base (TCB) change will be applied.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                                class=\\\"w-100 rounded form-control\\\"\\r\\n                                name=\\\"eosSystem\\\"\\r\\n                                id=\\\"eosSystem\\\"\\r\\n                                (change)=\\\"onSelectEosSystem($event)\\\" >\\r\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                            <option *ngFor=\\\"let eos of availableEosSystems\\\"  [value]=\\\"eos[0]\\\" [selected]=\\\"this.phase2.eosSystem === eos[0]\\\" >{{eos[1]}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm \\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n<!--</div>-->\\r\\n<!--    <div class=\\\"card\\\">-->\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayTCB_CRF_ID\\\">\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"this.displayTCB_CRF_ID\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\" for=\\\"tcbID\\\">TCB-CRF ID:</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <input popoverTitle=\\\"CHANGE REQUEST IDENTIFICATION\\\" ngbPopover=\\\"The TCB-CRF ID is an unique number relative to an EOS system issued by the TCB-CRF Administrator for every change request submitted for approval and implementation.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                           class=\\\"rounded form-control\\\"\\r\\n                           id=\\\"tcbID\\\"\\r\\n                           name=\\\"tcbID\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           disabled\\r\\n                           [(ngModel)]=\\\"this.phase2.TCB_CRF_ID\\\"  >\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\"></div>\\r\\n                <div class=\\\"col-sm\\\"></div>\\r\\n                <div class=\\\"col-sm\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayConfigurationItems\\\">\\r\\n            <div *ngIf=\\\"this.displayConfigurationItems\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <label class=\\\"px-3\\\" for=\\\"configurationItems\\\">Configuration Items: </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"px-3\\\">\\r\\n                    <input  popoverTitle=\\\"ENTER ALL CONFIGURATION ITEMS\\\" ngbPopover=\\\"TECH: Enter any sub system or system component that will be subject to the change e.g. EXTRA HDD, SW VERS., RADAR FEED, DATASET- ANY CHANGE TO THE TCB NEEDS TO BE APPROVED. OPS: Enter short description of the request.  Maximum 250 characters allowed\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                            maxlength=\\\"250\\\"\\r\\n                            class=\\\"rounded w-75 form-control\\\"\\r\\n                            id=\\\"configurationItems\\\"\\r\\n                            name=\\\"configurationItems\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            (input)=\\\"this.displayChangeType = true\\\"\\r\\n                            [(ngModel)]=\\\"this.phase2.configurationItems\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <div *ngIf=\\\"this.displayChangeType\\\">\\r\\n                        <label class=\\\"px-3\\\">Change Type: </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"\\r\\n                     popoverTitle=\\\"CHANGE TYPE\\\" ngbPopover=\\\"Select the type of change. Hardware (HW), Software (SW) or Firmware (FW). One or more of these options must be ticked if affected by the change.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                >\\r\\n                    <div *ngIf=\\\"this.displayChangeType\\\">\\r\\n                        <label class=\\\"checkbox-inline px-3\\\">\\r\\n                            <input type=\\\"checkbox\\\"\\r\\n                                   value=\\\"HW\\\"\\r\\n                                   (click)=\\\"onSelectChangeTypeHW($event)\\\" [checked]=\\\"this.phase2.change.hardware\\\">\\r\\n                            Hardware\\r\\n                        </label>\\r\\n                        <label class=\\\"checkbox-inline px-3\\\">\\r\\n                            <input type=\\\"checkbox\\\"\\r\\n                                   value=\\\"SW\\\"\\r\\n                                   (click)=\\\"onSelectChangeTypeSW($event)\\\" [checked]=\\\"this.phase2.change.software\\\">\\r\\n                            Software\\r\\n                        </label>\\r\\n                        <label class=\\\"checkbox-inline px-3\\\">\\r\\n                            <input type=\\\"checkbox\\\"\\r\\n                                   value=\\\"FW\\\"\\r\\n                                   (click)=\\\"onSelectChangeTypeFW($event)\\\" [checked]=\\\"this.phase2.change.firmware\\\">\\r\\n                            Firmware\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div *ngIf=\\\"this.displayAdditionalAttachedDocuments\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <label class=\\\"px-3 \\\">Additional attached Documents: </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"\\r\\n                     popoverTitle=\\\"ADDITIONAL DOCUMENTS ATTACHED\\\" ngbPopover=\\\"Tick the box next to the appropriate answer whether additional documents are attached for Phase-1. Normally there should be documents attached explaining why the change is requested and what pre-testing and evaluation has been done. \\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                    >\\r\\n                        <Label class=\\\"radio-inline px-3\\\">\\r\\n                            <input type=\\\"radio\\\"\\r\\n                                   name=\\\"additionalDocs\\\"\\r\\n                                   value=\\\"yes\\\"\\r\\n                                   (click)=\\\"onSelectAdditionalDocuments($event)\\\">\\r\\n                            Yes\\r\\n                        </Label>\\r\\n                        <Label class=\\\"radio-inline px-3\\\">\\r\\n                            <input type=\\\"radio\\\"\\r\\n                                   name=\\\"additionalDocs\\\"\\r\\n                                   value=\\\"no\\\"\\r\\n                                   (click)=\\\"onSelectAdditionalDocuments($event)\\\" >\\r\\n                            No\\r\\n                        </Label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.phase2.additionalDocuments === true\\\">\\r\\n            <div class=\\\"row pb-3\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label class=\\\"px-3\\\" for=\\\"numberOfPages\\\">Number of Pages (Documents): </label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <input class=\\\"px-3 form-control rounded\\\"\\r\\n                           disabled=\\\"true\\\"\\r\\n                           type=\\\"number\\\"\\r\\n                           name=\\\"numberOfPages\\\"\\r\\n                           id=\\\"numberOfPages\\\"\\r\\n                           [(ngModel)]=\\\"this.filesForUpload.length\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"px-3\\\">\\r\\n                <ngx-file-drop multiple=\\\"true\\\" dropZoneLabel=\\\"Drop files here\\\" (onFileDrop)=\\\"dropped($event)\\\"\\r\\n                               (onFileOver)=\\\"fileOver($event)\\\" (onFileLeave)=\\\"fileLeave($event)\\\">\\r\\n                    <ng-template  ngx-file-drop-content-tmp let-openFileSelector=\\\"openFileSelector\\\">\\r\\n                        Please drag and drop your additional files here\\r\\n                        <button type=\\\"button\\\" (click)=\\\"openFileSelector()\\\">Browse Files</button>\\r\\n                    </ng-template>\\r\\n                </ngx-file-drop>\\r\\n                <div class=\\\"upload-table px-3\\\">\\r\\n                    <table class=\\\"table\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th>Name:</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody class=\\\"upload-name-style\\\">\\r\\n                        <tr *ngFor=\\\"let item of filesForUpload, index as i\\\">\\r\\n                            <td><strong>{{ item.name }}</strong></td>\\r\\n                            <td class=\\\"px-3\\\" (click)=\\\"removeFile(i)\\\" style=\\\"cursor: pointer;\\\">&#10005;</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayEstimatedImpact\\\">\\r\\n            <label class=\\\"px-3\\\">Estimated Impact: </label>\\r\\n            <div class=\\\"px-3\\\">\\r\\n                <div *ngIf=\\\"this.displayEstimatedImpactOps\\\">\\r\\n                    <label for=\\\"operationsImpact\\\" class=\\\"\\\">Operations: </label>\\r\\n                    <br>\\r\\n                    <input popoverTitle=\\\"IMPACT=FUNCTIONAL/PROCEDURAL/etc\\\" ngbPopover=\\\"Operations: e.g. NORM mode will be down, Redundency lost, No new FPLs, Operator Handbooks\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                           class=\\\"w-75 rounded form-control\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           id=\\\"operationsImpact\\\"\\r\\n                           name=\\\"operationsImpact\\\"\\r\\n                           (input)=\\\"estimatedImpact($event)\\\"\\r\\n                           [(ngModel)]=\\\"this.phase2.estimatedImpacts.operations\\\">\\r\\n                </div>\\r\\n                <div *ngIf=\\\"this.displayEstimatedImpactClients\\\">\\r\\n                    <label for=\\\"clientsImpact\\\" class=\\\"\\\">Clients: </label>\\r\\n                    <br>\\r\\n                    <input popoverTitle=\\\"IMPACT=FUNCTIONAL/PROCEDURAL/etc\\\" ngbPopover=\\\"Clients: External and Internal - loss of service such as slot information, procedural changes, etc.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                           class=\\\" w-75 rounded form-control\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           id=\\\"clientsImpact\\\"\\r\\n                           name=\\\"clientsImpact\\\"\\r\\n                           (input)=\\\"estimatedImpact($event)\\\"\\r\\n                           [(ngModel)]=\\\"this.phase2.estimatedImpacts.clients\\\">\\r\\n                </div>\\r\\n                <div *ngIf=\\\"this.displayEstimatedImpactTech\\\">\\r\\n                    <label for=\\\"technicalImpact\\\" class=\\\"\\\">Technical: </label>\\r\\n                    <br>\\r\\n                    <input popoverTitle=\\\"IMPACT=FUNCTIONAL/PROCEDURAL/etc\\\" ngbPopover=\\\"Technical: Node Down, LAN switch down, Documents\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                           class=\\\" w-75 rounded form-control\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           id=\\\"technicalImpact\\\"\\r\\n                           name=\\\"technicalImpact\\\"\\r\\n                           (input)=\\\"estimatedImpact($event)\\\"\\r\\n                           [(ngModel)]=\\\"this.phase2.estimatedImpacts.technical\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayProblemReportRaised && this.displayEstimatedImpact\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label class=\\\"px-3\\\">Problem Report raised with Contractor?</label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"\\r\\n                     popoverTitle=\\\"PROBLEM REPORT RAISED?\\\" ngbPopover=\\\"Specify yes or no whether a problem request or report has been raised with the contractor by selecting the appropriate check box with a left-mouse-button click.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                >\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"reportRaised\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectReportRaised($event)\\\" [checked]=\\\"this.phase2.problemReportRaised\\\">\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"reportRaised\\\"\\r\\n                               value=\\\"no\\\"\\r\\n                               (click)=\\\"onSelectReportRaised($event)\\\" [checked]=\\\"!this.phase2.problemReportRaised\\\">\\r\\n                        No\\r\\n                    </Label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"this.phase2.problemReportRaised\\\" >\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <label for=\\\"problemReportRef\\\" class=\\\"px-3\\\">Problem Report Reference Number: </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <input popoverTitle=\\\"PROBLEM REPORT REFERENCE\\\" ngbPopover=\\\"Enter the problem report reference number here. The problem report refers to a report that was sent to the contractor to improve a functionality or solve a problem on the system. Can be a PR, ECR, PCR, CR, etc.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                               class=\\\"w-100 rounded form-control\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               name=\\\"problemReportRef\\\"\\r\\n                               id=\\\"problemReportRef\\\"\\r\\n                               (input)=\\\"onInputProblemReportRef()\\\"\\r\\n                               [(ngModel)]=\\\"this.phase2.problemReportRef\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayChangePreTested\\\">\\r\\n            <div *ngIf=\\\"this.displayChangePreTested\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <label class=\\\"px-3\\\">Change successfully pre-tested ?</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"\\r\\n                         popoverTitle=\\\"CHANGE SUCCESSFULLY PRE-TESTED ?\\\" ngbPopover=\\\"Specify whether pre-tests or validations concerning the change were successful by selecting a check box accordingly with the left-mouse button.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                    >\\r\\n                        <Label class=\\\"radio-inline px-3\\\">\\r\\n                            <input type=\\\"radio\\\"\\r\\n                                   name=\\\"preTested\\\"\\r\\n                                   value=\\\"yes\\\"\\r\\n                                   (click)=\\\"onSelectPreTested($event)\\\" [checked]=\\\"this.phase2.changeSuccessfullyTested === 'yes'\\\">\\r\\n                            Yes\\r\\n                        </Label>\\r\\n                        <Label class=\\\"radio-inline px-3\\\">\\r\\n                            <input type=\\\"radio\\\"\\r\\n                                   name=\\\"preTested\\\"\\r\\n                                   value=\\\"no\\\"\\r\\n                                   (click)=\\\"onSelectPreTested($event)\\\" [checked]=\\\"this.phase2.changeSuccessfullyTested === 'no'\\\">\\r\\n                            No\\r\\n                        </Label>\\r\\n                        <Label class=\\\"radio-inline px-3\\\">\\r\\n                            <input type=\\\"radio\\\"\\r\\n                                   name=\\\"preTested\\\"\\r\\n                                   value=\\\"na\\\"\\r\\n                                   (click)=\\\"onSelectPreTested($event)\\\" [checked]=\\\"this.phase2.changeSuccessfullyTested === 'na'\\\">\\r\\n                            N/A\\r\\n                        </Label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"px-3\\\" *ngIf=\\\"this.displayChangeNotSuccessfullyTestedReason\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <label for=\\\"changeNotSuccessfullyTestedReason\\\" class=\\\"\\\">Reason for unsuccessful test: </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <input popoverTitle=\\\"Reason for unsuccessful testing\\\" ngbPopover=\\\"If the tests were unsuccessful please provide the reason here\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                                   class=\\\"w-75 rounded form-control\\\"\\r\\n                                   type=\\\"text\\\"\\r\\n                                   id=\\\"changeNotSuccessfullyTestedReason\\\"\\r\\n                                   name=\\\"changeNotSuccessfullyTestedReason\\\"\\r\\n                                   (input)=\\\"onUnsuccessfulTestReason()\\\"\\r\\n                                   [(ngModel)]=\\\"this.phase2.changeNotSuccessfullyTestedReason\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n<!--        <div class=\\\"form-group\\\">-->\\r\\n<!--            <div class=\\\"row\\\">-->\\r\\n<!--                <div class=\\\"col\\\">-->\\r\\n<!--                    <label class=\\\"px-3\\\">Request submitted to all concerned parties ?</label>-->\\r\\n<!--                </div>-->\\r\\n<!--                <div class=\\\"col\\\">-->\\r\\n<!--                    <Label class=\\\"radio-inline px-3\\\"><input type=\\\"radio\\\" name=\\\"submittedToAll\\\" value=\\\"yes\\\"  (click)=\\\"onSelectSubmittedToAllConcerned($event)\\\">Yes</Label>-->\\r\\n<!--                    <Label class=\\\"radio-inline px-3\\\"><input type=\\\"radio\\\" name=\\\"submittedToAll\\\" value=\\\"no\\\"   (click)=\\\"onSelectSubmittedToAllConcerned($event)\\\" >No</Label>-->\\r\\n<!--                </div>-->\\r\\n<!--                <div class=\\\"col\\\"></div>-->\\r\\n<!--            </div>-->\\r\\n\\r\\n<!--            <div  class=\\\"px-3\\\" *ngIf=\\\"!this.phase2.submittedToAllParties\\\">-->\\r\\n<!--                <div class=\\\"row\\\">-->\\r\\n<!--                    <div class=\\\"col\\\">-->\\r\\n<!--                        <label class=\\\"\\\">Reason why not submitted to all concerned parties?</label>-->\\r\\n<!--                    </div>-->\\r\\n<!--                </div>-->\\r\\n<!--                <div class=\\\"row\\\">-->\\r\\n<!--                    <div class=\\\"col\\\">-->\\r\\n<!--                        <input class=\\\" w-75 rounded form-control\\\" type=\\\"text\\\" name=\\\"requestNotSubmittedToAllParties\\\" [(ngModel)]=\\\"this.phase2.notSubmittedToAllPartiesReason\\\">-->\\r\\n<!--                    </div>-->\\r\\n<!--                </div>-->\\r\\n<!--            </div>-->\\r\\n<!--        </div>-->\\r\\n\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displaySpecialistComments\\\">\\r\\n            <div class=\\\"px-3\\\" >\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"this.displaySpecialistComments\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <label for=\\\"specialistComments\\\" >Specialist comments</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"this.displaySpecialistComments\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <input\\r\\n                                class=\\\"px-3 w-75 rounded form-control\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                name=\\\"specialistComments\\\"\\r\\n                                id=\\\"specialistComments\\\"\\r\\n                                (input)=\\\"onInputSpecialistComment()\\\"\\r\\n                                [(ngModel)]=\\\"this.phase2.specialistComment\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\"  *ngIf=\\\"this.displaySpecialistComments && !this.displaySelectTemporaryAmountOfDays\\\" >\\r\\n            <div class=\\\"py-3\\\">\\r\\n                <div class=\\\"row\\\" >\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <label class=\\\"px-3\\\" for=\\\"proposedDate\\\">Proposed Implementation Date: </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <input class=\\\" px-3 rounded w-75 form-control\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               id=\\\"proposedDate\\\"\\r\\n                               name=\\\"proposedDate\\\"\\r\\n                               autocomplete=\\\"off\\\"\\r\\n                               bsDatepicker\\r\\n                               [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                               (click)=\\\"onSelectProposedImplementationDate()\\\"\\r\\n                               [(ngModel)]=\\\"this.phase2.proposedImplementationDate\\\"  >\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayRecommendOrOppose || this.emergencySelected\\\">\\r\\n            <div class=\\\"row\\\" >\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label class=\\\"px-3\\\" for=\\\"recommend/oppose\\\">Recommend Or Oppose change:</label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n\\r\\n                    <select class=\\\"px-3 rounded w-75 form-control\\\"\\r\\n                            id=\\\"recommend/oppose\\\"\\r\\n                            name=\\\"recommend/oppose\\\"\\r\\n                            (change)=\\\"onSelectRecommendOrOppose($event)\\\" >\\r\\n                        <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                        <option [disabled]=\\\"this.phase2.changeSuccessfullyTested === 'no'\\\" value=\\\"Recommend\\\" >Recommend</option>\\r\\n                        <option [disabled]=\\\"this.phase2.changeSuccessfullyTested === 'no'\\\" value=\\\"Oppose\\\">Oppose</option>\\r\\n                        <<option value=\\\"re-test\\\">Re-Test</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div  class=\\\"row px-3\\\">\\r\\n                <div class=\\\"col\\\"></div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <button class=\\\"btn btn-outline-danger btn-rounded w-100  my-4 waves-effect z-depth-0\\\"\\r\\n                            id=\\\"cancel\\\"\\r\\n                            (click)=\\\"onCancel()\\\"> Cancel\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n                <div class=\\\"col\\\" >\\r\\n                    <button [disabled]=\\\"!this.activateSubmitButton\\\"\\r\\n                            class=\\\"btn btn-outline-info btn-rounded w-100 my-4  waves-effect z-depth-0 disabled\\\"\\r\\n                            id=\\\"submit\\\"\\r\\n                            (click)=\\\"onSubmit()\\\"> Submit\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {CCRPhase2} from '../../models/CCR-Phase2';\r\nimport {RFC} from '../../models/RFC';\r\nimport { NgxFileDropEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from 'ngx-file-drop';\r\nimport {BsDatepickerConfig} from 'ngx-bootstrap/datepicker';\r\nimport swal from 'sweetalert2';\r\nimport {Data, Router} from '@angular/router';\r\nimport {Phase2Service} from '../../services/phase2.service';\r\n\r\n@Component({\r\n    selector: 'app-phase2',\r\n    templateUrl: './phase2.component.html',\r\n    styleUrls: ['./phase2.component.css']\r\n})\r\nexport class Phase2Component implements OnInit {\r\n\r\n    private phase1;\r\n    private localObj;\r\n    private formData = new FormData();\r\n    private datepickerConfig: Partial<BsDatepickerConfig>;\r\n    private files: NgxFileDropEntry[] [] = [];\r\n    private filesForUpload = [];\r\n    private user ;\r\n\r\n\r\n    private availableNumberOfTemporaryDays: number [] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\r\n        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\r\n    private availablePriorities: String [] = ['EMERGENCY', 'Urgent', 'Safety', 'Improvement', 'Other'];\r\n    private availablePeriods: String [] = ['Permanent', 'Temporary', 'Trial'];\r\n    private availableImpacts: String [] = ['CLIENTS', 'OPERATIONS', 'TECHNICAL'];\r\n    private availableNatureOfChange: String [] = ['National', 'Local', 'Regional'];\r\n    private availableEosSystems: String [] = ['AFTN', 'AMHS', 'ANAIS', 'A-SMGCS', 'ATIS', 'AWOS', 'CAD', 'CAMU', 'DAID', 'DATIS', 'DIESEL BACKUP',\r\n        'DITTEL', 'DME', 'FRS', 'FWD RELAY', 'ILS', 'IVSAT', 'MLAT', 'NDB', 'OTN', 'OTN', 'RADAR', 'SATELLITE', 'SMR', 'SQUIB', 'TERNS',\r\n        'TITAN', 'TOPSKY', 'UPS', 'VCCS', 'VHF', 'VOR', 'VPN'];\r\n\r\n    // Form display boolean values\r\n    private emergencySelected: boolean;\r\n    private displayPredictedRisks: boolean;\r\n    private displayChangePeriod: boolean;\r\n    private displayNatureOfChange: boolean;\r\n    private displayEOSystem: boolean;\r\n    private displayTCB_CRF_ID: boolean;\r\n    private displayConfigurationItems: boolean;\r\n    private displayChangeType: boolean;\r\n    private displaySelectTemporaryAmountOfDays: boolean;\r\n    private displayTemporaryDateSelection: boolean;\r\n    private displayAdditionalAttachedDocuments: boolean;\r\n    private displayEstimatedImpact: boolean;\r\n    private displayEstimatedImpactOps: boolean;\r\n    private displayEstimatedImpactClients: boolean;\r\n    private displayEstimatedImpactTech: boolean;\r\n    private displayProblemReportRaised: boolean;\r\n    private displayChangePreTested: boolean;\r\n    private displayChangeNotSuccessfullyTestedReason: boolean;\r\n    private displaySpecialistComments: boolean;\r\n    private displayProposedImplementationDate: boolean;\r\n    private displayRecommendOrOppose: boolean;\r\n    private activateSubmitButton: boolean;\r\n\r\n    private RFC: RFC = {\r\n        dateRequested: undefined,\r\n        requestDescription: undefined,\r\n        reasonForRequest: undefined,\r\n        CSRF_token: undefined,\r\n        site_ID: undefined\r\n    };\r\n    private phase2: CCRPhase2 = {\r\n        CCR_ID: undefined,\r\n        TCB_CRF_ID: undefined,\r\n        requestPriority: undefined,\r\n        predictedImpact: undefined,\r\n        changePeriod: undefined,\r\n        temporaryPeriodStartDate: undefined,\r\n        temporaryPeriodNumberOfDays: undefined,\r\n        temporaryPeriodEndDate: undefined,\r\n        natureOfChange: undefined,\r\n        eosSystem: undefined,\r\n        configurationItems: undefined,\r\n        change: {\r\n            hardware: false,\r\n            software: false,\r\n            firmware: false\r\n        },\r\n        additionalDocuments: false,\r\n        documentIds: undefined,\r\n        numberOfPages: undefined,\r\n        estimatedImpacts: {\r\n            operations: undefined,\r\n            clients: undefined,\r\n            technical: undefined\r\n        },\r\n        problemReportRaised: false,\r\n        problemReportRef: undefined,\r\n        changeSuccessfullyTested: undefined,\r\n        changeNotSuccessfullyTestedReason: undefined,\r\n        specialistComment: undefined,\r\n        proposedImplementationDate: undefined,\r\n        recommend_oppose: undefined,\r\n        CSRF_token: undefined\r\n    };\r\n\r\n    constructor(private phase2service: Phase2Service, private router: Router) {\r\n        const minDate = new Date();\r\n\r\n        this.datepickerConfig = Object.assign({},\r\n            {containerClass: 'theme-dark-blue'},\r\n            {dateInputFormat: 'YYYY-MM-DD'},\r\n            {showWeekNumbers: false},\r\n            {minDate: minDate});\r\n\r\n    }\r\n\r\n\r\n    public onSelectPriority($event) {\r\n        const prioritySelect = document.getElementById('priority');\r\n        if ($event.target.value === '1') {\r\n            prioritySelect.classList.add('text-danger');\r\n            this.emergencySelected = true;\r\n            this.displaySpecialistComments = true;\r\n            this.displayPredictedRisks = false;\r\n            this.displayPredictedRisks = false;\r\n            this.displayChangePeriod = false;\r\n            this.displayNatureOfChange = false;\r\n            this.displayEOSystem = false;\r\n            this.displayTCB_CRF_ID = false;\r\n            this.displayConfigurationItems = false;\r\n            this.displayChangeType = false;\r\n            this.displayTemporaryDateSelection = false;\r\n            this.displayAdditionalAttachedDocuments = false;\r\n            this.displayEstimatedImpact = false;\r\n            this.displayEstimatedImpactOps = false;\r\n            this.displayEstimatedImpactClients = false;\r\n            this.displayEstimatedImpactTech = false;\r\n            this.displayProblemReportRaised = false;\r\n            this.displayChangePreTested = false;\r\n            this.displayChangeNotSuccessfullyTestedReason = false;\r\n            this.displayProposedImplementationDate = false;\r\n        } else if (prioritySelect.classList.contains('text-danger') && $event.target.value !== 'Emergency') {\r\n            this.displayPredictedRisks = true;\r\n            this.displaySpecialistComments = false;\r\n            this.emergencySelected = false;\r\n            prioritySelect.classList.remove('text-danger');\r\n        } else {\r\n            this.displayPredictedRisks = true;\r\n            this.displaySpecialistComments = false;\r\n            this.emergencySelected = false;\r\n        }\r\n        this.phase2.requestPriority = $event.target.value;\r\n    }\r\n\r\n    public onSelectChangePeriod($event) {\r\n        switch ($event.target.value) {\r\n            case '1' :\r\n                this.displayNatureOfChange = true;\r\n                this.displaySelectTemporaryAmountOfDays = false;\r\n                break;\r\n            case '2' :\r\n                this.displaySelectTemporaryAmountOfDays = true;\r\n                this.displayNatureOfChange = false;\r\n                break;\r\n            case '3':\r\n\r\n                this.displayNatureOfChange = false;\r\n                this.displaySelectTemporaryAmountOfDays = true;\r\n                break;\r\n        }\r\n        this.phase2.changePeriod = $event.target.value;\r\n    }\r\n\r\n    public onSelectNumberOfTemporaryDays($event) {\r\n        this.phase2.temporaryPeriodNumberOfDays = $event.target.value;\r\n        this.displayTemporaryDateSelection = true;\r\n    }\r\n\r\n    public onSelectTemporaryStartDate($event) {\r\n        const maxDate = new Date();\r\n        maxDate.setDate($event.getDate() + parseInt('' + this.phase2.temporaryPeriodNumberOfDays, 10));\r\n        this.phase2.temporaryPeriodEndDate = maxDate;\r\n        this.displayNatureOfChange = true;\r\n\r\n    }\r\n\r\n    public onSelectImpact($event) {\r\n        this.phase2.predictedImpact = $event.target.value;\r\n        if (this.phase2.predictedImpact !== undefined) {\r\n            this.displayChangePeriod = true;\r\n            switch (this.phase2.predictedImpact) {\r\n                case '1':\r\n                    this.displayProblemReportRaised = false;\r\n                    this.displayEstimatedImpactClients = true;\r\n                    this.displayEstimatedImpactTech = false;\r\n                    this.displayEstimatedImpactOps = false;\r\n                    this.phase2.estimatedImpacts.technical = undefined;\r\n                    this.phase2.estimatedImpacts.operations = undefined;\r\n                    break;\r\n                case '2':\r\n                    this.displayProblemReportRaised = true;\r\n                    this.displayEstimatedImpactClients = false;\r\n                    this.displayEstimatedImpactTech = false;\r\n                    this.displayEstimatedImpactOps = false;\r\n                    this.phase2.estimatedImpacts.clients = undefined;\r\n                    this.phase2.estimatedImpacts.technical = undefined;\r\n                    this.phase2.estimatedImpacts.operations = undefined;\r\n                    break;\r\n                case '3':\r\n                    this.displayProblemReportRaised = false;\r\n                    this.displayEstimatedImpactClients = false;\r\n                    this.displayEstimatedImpactTech = false;\r\n                    this.displayEstimatedImpactOps = true;\r\n                    this.phase2.estimatedImpacts.clients = undefined;\r\n                    this.phase2.estimatedImpacts.technical = undefined;\r\n                    break;\r\n                case '4':\r\n                    this.displayProblemReportRaised = false;\r\n                    this.displayEstimatedImpactClients = true;\r\n                    this.displayEstimatedImpactTech = false;\r\n                    this.displayEstimatedImpactOps = true;\r\n                    this.phase2.estimatedImpacts.technical = undefined;\r\n                    break;\r\n                case '5':\r\n                    this.displayProblemReportRaised = false;\r\n                    this.displayEstimatedImpactClients = false;\r\n                    this.displayEstimatedImpactTech = true;\r\n                    this.displayEstimatedImpactOps = true;\r\n                    this.phase2.estimatedImpacts.clients = undefined;\r\n                    break;\r\n                case '6':\r\n                    this.displayProblemReportRaised = false;\r\n                    this.displayEstimatedImpactClients = true;\r\n                    this.displayEstimatedImpactTech = true;\r\n                    this.displayEstimatedImpactOps = true;\r\n                    break;\r\n                case '7':\r\n                    this.displayProblemReportRaised = false;\r\n                    this.displayEstimatedImpactClients = true;\r\n                    this.displayEstimatedImpactTech = true;\r\n                    this.displayEstimatedImpactOps = false;\r\n                    this.phase2.estimatedImpacts.operations = undefined;\r\n                    break;\r\n                case '8':\r\n                    this.displayProblemReportRaised = false;\r\n                    this.displayEstimatedImpactClients = false;\r\n                    this.displayEstimatedImpactTech = true;\r\n                    this.displayEstimatedImpactOps = false;\r\n                    this.phase2.estimatedImpacts.clients = undefined;\r\n                    this.phase2.estimatedImpacts.operations = undefined;\r\n                    break;\r\n            }\r\n\r\n        } else {\r\n            this.displayChangePeriod = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public onSelectNatureOfChange($event) {\r\n\r\n        if (this.phase2.natureOfChange !== undefined) {\r\n            this.displayEOSystem = true;\r\n        } else {\r\n            this.displayEOSystem = false;\r\n        }\r\n    }\r\n\r\n    public onSelectEosSystem($event) {\r\n        this.phase2.eosSystem = $event.target.value;\r\n        this.phase2service.getEOSTCBNumber(this.phase2.eosSystem).subscribe( (data: Data) => {\r\n            let tcb = parseInt(data.latest_TCB_number , 10);\r\n            tcb += 1;\r\n            for (let eos of this.availableEosSystems) {\r\n                if (eos[0] === $event.target.value ) {\r\n                    this.phase2.TCB_CRF_ID = eos[1] + tcb;\r\n                }\r\n            }\r\n        });\r\n\r\n         // database reference to eos tcb number + 1\r\n        this.displayTCB_CRF_ID = true;\r\n        this.displayConfigurationItems = true;\r\n    }\r\n\r\n    public onSelectChangeTypeHW(e) {\r\n\r\n        if (e.target.checked) {\r\n            this.phase2.change.hardware = true;\r\n        } else {\r\n            this.phase2.change.hardware = false;\r\n        }\r\n        if (this.phase2.change.firmware || this.phase2.change.software || this.phase2.change.hardware) {\r\n            this.displayAdditionalAttachedDocuments = true;\r\n        } else {\r\n            this.displayAdditionalAttachedDocuments = false;\r\n        }\r\n    }\r\n\r\n    public onSelectChangeTypeSW(e) {\r\n        if (e.target.checked) {\r\n            this.phase2.change.software = true;\r\n        } else {\r\n            this.phase2.change.software = false;\r\n        }\r\n        if (this.phase2.change.firmware || this.phase2.change.software || this.phase2.change.hardware) {\r\n            this.displayAdditionalAttachedDocuments = true;\r\n        } else {\r\n            this.displayAdditionalAttachedDocuments = false;\r\n        }\r\n    }\r\n\r\n    public onSelectChangeTypeFW(e) {\r\n        if (e.target.checked) {\r\n            this.phase2.change.firmware = true;\r\n        } else {\r\n            this.phase2.change.firmware = false;\r\n        }\r\n        if (this.phase2.change.firmware || this.phase2.change.software || this.phase2.change.hardware) {\r\n            this.displayAdditionalAttachedDocuments = true;\r\n        } else {\r\n            this.displayAdditionalAttachedDocuments = false;\r\n        }\r\n    }\r\n\r\n    public onSelectAdditionalDocuments(e) {\r\n        if (e.target.value === 'yes') {\r\n            this.phase2.additionalDocuments = true;\r\n            this.displayEstimatedImpact = false;\r\n        } else if (e.target.value === 'no') {\r\n            // this.files = [];\r\n            this.phase2.additionalDocuments = false;\r\n            this.phase2.numberOfPages = undefined;\r\n            this.displayEstimatedImpact = true;\r\n        }\r\n    }\r\n\r\n    // first file uploader start\r\n    public dropped(files: NgxFileDropEntry[]) {\r\n        this.displayEstimatedImpact = true;\r\n        // this.files = files;\r\n\r\n        this.files.push(files);\r\n        for (const droppedFile of files) {\r\n            // Is it a file?\r\n            if (droppedFile.fileEntry.isFile) {\r\n                const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n                fileEntry.file((file: File) => {\r\n                    this.filesForUpload.push(file);\r\n                });\r\n            } else {\r\n                // It was a directory (empty directories are added, otherwise only files)\r\n                const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\r\n            }\r\n        }\r\n    }\r\n\r\n    public fileOver(event) {\r\n    }\r\n\r\n    private populateForm() {\r\n        for (let i = 0; i < this.filesForUpload.length; i++) {\r\n            this.formData.append('file[]', this.filesForUpload[i], this.filesForUpload[i].name);\r\n        }\r\n    }\r\n\r\n    removeFile(index) {\r\n        this.filesForUpload.splice(index, 1);\r\n    }\r\n\r\n    public fileLeave(event) {\r\n    }\r\n\r\n    // first file uploader end\r\n    public estimatedImpact($event) {\r\n        if (this.phase2.estimatedImpacts.technical !== undefined ||\r\n            this.phase2.estimatedImpacts.clients !== undefined ||\r\n            this.phase2.estimatedImpacts.operations !== undefined) {\r\n            this.displayProblemReportRaised = true;\r\n        } else {\r\n            this.displayProblemReportRaised = false;\r\n        }\r\n    }\r\n\r\n    public onSelectReportRaised(e) {\r\n        if (e.target.value === 'yes') {\r\n            this.displayChangePreTested = false;\r\n            this.phase2.problemReportRaised = true;\r\n        } else if (e.target.value === 'no') {\r\n            this.displayChangePreTested = true;\r\n            this.phase2.problemReportRef = undefined;\r\n            this.phase2.problemReportRaised = false;\r\n        }\r\n    }\r\n\r\n    public onInputProblemReportRef() {\r\n        this.displayChangePreTested = true;\r\n    }\r\n\r\n    public onSelectPreTested(e) {\r\n        if (e.target.value === 'yes') {\r\n            this.phase2.changeSuccessfullyTested = 'yes';\r\n            this.displayChangeNotSuccessfullyTestedReason = false;\r\n            this.displaySpecialistComments = true;\r\n            this.phase2.changeNotSuccessfullyTestedReason = undefined;\r\n            if (this.displaySelectTemporaryAmountOfDays) {\r\n                this.displayRecommendOrOppose = true;\r\n            }\r\n        } else if (e.target.value === 'no') {\r\n            this.phase2.changeNotSuccessfullyTestedReason = undefined;\r\n            this.phase2.changeSuccessfullyTested = 'no';\r\n            this.displayChangeNotSuccessfullyTestedReason = true;\r\n            this.displaySpecialistComments = false;\r\n            this.displayRecommendOrOppose = false;\r\n        } else if (e.target.value === 'na') {\r\n            this.phase2.changeSuccessfullyTested = 'na';\r\n            this.displayChangeNotSuccessfullyTestedReason = false;\r\n            this.displaySpecialistComments = true;\r\n            this.phase2.changeNotSuccessfullyTestedReason = undefined;\r\n            if (this.displaySelectTemporaryAmountOfDays) {\r\n                this.displayRecommendOrOppose = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    public onUnsuccessfulTestReason() {\r\n        this.displaySpecialistComments = true;\r\n        if (this.displaySelectTemporaryAmountOfDays) {\r\n            this.displayRecommendOrOppose = true;\r\n        }\r\n    }\r\n\r\n    public onInputSpecialistComment() {\r\n        this.displayProposedImplementationDate = true;\r\n    }\r\n\r\n    public onSelectProposedImplementationDate() {\r\n        this.displayRecommendOrOppose = true;\r\n    }\r\n\r\n    public onSelectRecommendOrOppose($event) {\r\n        this.phase2.recommend_oppose = $event.target.value;\r\n        const submitButton = document.getElementById('submit');\r\n        submitButton.classList.remove('disabled');\r\n        this.activateSubmitButton = true;\r\n    }\r\n\r\n    public onCancel() {\r\n        swal({\r\n            title: 'Are you sure?',\r\n            text: 'You will lose all progress on this form',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Confirm',\r\n            cancelButtonText: 'Cancel',\r\n            confirmButtonColor: '#5bc0de',\r\n            cancelButtonColor: '#d9534f',\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.router.navigate(['home']);\r\n            } else if (\r\n                result.dismiss === swal.DismissReason.cancel\r\n            ) {\r\n                swal({\r\n                    title: 'Cancelled',\r\n                    text: 'Your may continue to make changes',\r\n                    type: 'error',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    public onSubmit() {\r\n        swal({\r\n            title: 'Are you sure?',\r\n            text: 'You won\\'t be able make changes to your submission',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Submit',\r\n            cancelButtonText: 'Cancel',\r\n            confirmButtonColor: '#5bc0de',\r\n            cancelButtonColor: '#d9534f',\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.phase2service.submitPhase2(this.phase2).subscribe((data1: Data) => {\r\n                    if (data1.success) {\r\n                        if (this.phase2.additionalDocuments === true) {\r\n                            this.populateForm();\r\n                            this.phase2service.upload(this.formData).subscribe((data: Data) => {\r\n                                if (data.success) {\r\n                                    swal({\r\n                                        title: 'Received',\r\n                                        text: 'Your files have been received',\r\n                                        type: 'success',\r\n                                        showConfirmButton: false,\r\n                                        timer: 1500\r\n                                    });\r\n\r\n                                } else {\r\n                                    swal({\r\n                                        title: 'Files not uploaded',\r\n                                        text: data.message,\r\n                                        type: 'error',\r\n                                        showConfirmButton: false,\r\n                                        timer: 1500\r\n                                    });\r\n                                }\r\n                            });\r\n                        } else {\r\n                            swal({\r\n                                title: 'Received',\r\n                                text: 'Thank you for your Upload all relevant personal have been updated',\r\n                                type: 'success',\r\n                                showConfirmButton: false,\r\n                                timer: 1500\r\n                            });\r\n                            this.router.navigate(['home']);\r\n                        }\r\n\r\n                    } else {\r\n                        swal({\r\n                            title: 'Failed',\r\n                            text: data1.message,\r\n                            type: 'error',\r\n                            showConfirmButton: false,\r\n                            timer: 1500\r\n                        });\r\n                    }\r\n                });\r\n            } else if (\r\n                result.dismiss === swal.DismissReason.cancel\r\n            ) {\r\n                swal({\r\n                    title: 'Cancelled',\r\n                    text: 'Your may continue to make changes',\r\n                    type: 'error',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.phase2service.getCSRFToken().subscribe((data: Data) => {\r\n            this.phase2.CSRF_token = data.tokenValue;\r\n        });\r\n        this.phase2service.getPageData().subscribe((data: Data) => {\r\n            this.availablePriorities = data[0];\r\n            this.availableImpacts = data[1];\r\n            this.availablePeriods = data[2];\r\n            this.availableNatureOfChange = data[3];\r\n            this.availableEosSystems = data[4];\r\n\r\n        });\r\n\r\n        this.phase1 = this.phase2service.getPhase1();\r\n        if (this.user == null) {\r\n            this.phase2service.getUserByID(this.phase1.user_ID).subscribe( (data: Data) => {\r\n                this.user = data.firstName + ' ' + data.lastName;\r\n            });\r\n        }\r\n        this.localObj = this.phase2service.getObj();\r\n        if (this.phase1 != null) {\r\n            this.RFC.requestDescription = this.phase1.requested_change;\r\n            this.RFC.reasonForRequest = this.phase1.description;\r\n            this.RFC.dateRequested = this.phase1.start_time;\r\n            this.phase2.CCR_ID = this.phase1.ID\r\n            this.user = this.phase2service.getUser();\r\n\r\n        }\r\n        if (this.localObj !== null) {\r\n            this.phase2.TCB_CRF_ID = this.localObj.tcb_crf_id;\r\n            this.phase2.requestPriority = this.localObj.requestPriority_ID;\r\n            if (this.phase2.requestPriority === '1') {\r\n                document.getElementById('priority').classList.add('text-danger');\r\n                this.emergencySelected = true;\r\n                this.displaySpecialistComments = true;\r\n                this.displayPredictedRisks = false;\r\n                this.displayPredictedRisks = false;\r\n                this.displayChangePeriod = false;\r\n                this.displayNatureOfChange = false;\r\n                this.displayEOSystem = false;\r\n                this.displayTCB_CRF_ID = false;\r\n                this.displayConfigurationItems = false;\r\n                this.displayChangeType = false;\r\n                this.displayTemporaryDateSelection = false;\r\n                this.displayAdditionalAttachedDocuments = false;\r\n                this.displayEstimatedImpact = false;\r\n                this.displayEstimatedImpactOps = false;\r\n                this.displayEstimatedImpactClients = false;\r\n                this.displayEstimatedImpactTech = false;\r\n                this.displayProblemReportRaised = false;\r\n                this.displayChangePreTested = false;\r\n                this.displayChangeNotSuccessfullyTestedReason = false;\r\n                this.displayProposedImplementationDate = false;\r\n            } else if (document.getElementById('priority').classList.contains('text-danger') && this.phase2.requestPriority !== 'Emergency') {\r\n                this.displayPredictedRisks = true;\r\n                this.displaySpecialistComments = false;\r\n                this.emergencySelected = false;\r\n                document.getElementById('priority').classList.remove('text-danger');\r\n            } else {\r\n                this.displayPredictedRisks = true;\r\n                this.displaySpecialistComments = false;\r\n                this.emergencySelected = false;\r\n            }\r\n\r\n            this.phase2.predictedImpact = this.localObj.impactRisks_ID;\r\n            if (this.phase2.predictedImpact !== undefined) {\r\n                this.displayChangePeriod = true;\r\n                switch (this.phase2.predictedImpact) {\r\n                    case '1':\r\n                        this.displayProblemReportRaised = false;\r\n                        this.displayEstimatedImpactClients = true;\r\n                        this.displayEstimatedImpactTech = false;\r\n                        this.displayEstimatedImpactOps = false;\r\n                        this.phase2.estimatedImpacts.technical = undefined;\r\n                        this.phase2.estimatedImpacts.operations = undefined;\r\n                        break;\r\n                    case '2':\r\n                        this.displayProblemReportRaised = true;\r\n                        this.displayEstimatedImpactClients = false;\r\n                        this.displayEstimatedImpactTech = false;\r\n                        this.displayEstimatedImpactOps = false;\r\n                        this.phase2.estimatedImpacts.clients = undefined;\r\n                        this.phase2.estimatedImpacts.technical = undefined;\r\n                        this.phase2.estimatedImpacts.operations = undefined;\r\n                        break;\r\n                    case '3':\r\n                        this.displayProblemReportRaised = false;\r\n                        this.displayEstimatedImpactClients = false;\r\n                        this.displayEstimatedImpactTech = false;\r\n                        this.displayEstimatedImpactOps = true;\r\n                        this.phase2.estimatedImpacts.clients = undefined;\r\n                        this.phase2.estimatedImpacts.technical = undefined;\r\n                        break;\r\n                    case '4':\r\n                        this.displayProblemReportRaised = false;\r\n                        this.displayEstimatedImpactClients = true;\r\n                        this.displayEstimatedImpactTech = false;\r\n                        this.displayEstimatedImpactOps = true;\r\n                        this.phase2.estimatedImpacts.technical = undefined;\r\n                        break;\r\n                    case '5':\r\n                        this.displayProblemReportRaised = false;\r\n                        this.displayEstimatedImpactClients = false;\r\n                        this.displayEstimatedImpactTech = true;\r\n                        this.displayEstimatedImpactOps = true;\r\n                        this.phase2.estimatedImpacts.clients = undefined;\r\n                        break;\r\n                    case '6':\r\n                        this.displayProblemReportRaised = false;\r\n                        this.displayEstimatedImpactClients = true;\r\n                        this.displayEstimatedImpactTech = true;\r\n                        this.displayEstimatedImpactOps = true;\r\n                        break;\r\n                    case '7':\r\n                        this.displayProblemReportRaised = false;\r\n                        this.displayEstimatedImpactClients = true;\r\n                        this.displayEstimatedImpactTech = true;\r\n                        this.displayEstimatedImpactOps = false;\r\n                        this.phase2.estimatedImpacts.operations = undefined;\r\n                        break;\r\n                    case '8':\r\n                        this.displayProblemReportRaised = false;\r\n                        this.displayEstimatedImpactClients = false;\r\n                        this.displayEstimatedImpactTech = true;\r\n                        this.displayEstimatedImpactOps = false;\r\n                        this.phase2.estimatedImpacts.clients = undefined;\r\n                        this.phase2.estimatedImpacts.operations = undefined;\r\n                        break;\r\n                }\r\n            }\r\n\r\n                this.phase2.changePeriod = this.localObj.changePeriod_ID;\r\n                switch (this.phase2.changePeriod) {\r\n                    case '1' :\r\n                        this.displayNatureOfChange = true;\r\n                        this.displaySelectTemporaryAmountOfDays = false;\r\n                        break;\r\n                    case '2' :\r\n                        this.displaySelectTemporaryAmountOfDays = true;\r\n                        this.displayNatureOfChange = false;\r\n                        break;\r\n                    case '3':\r\n\r\n                        this.displayNatureOfChange = false;\r\n                        this.displaySelectTemporaryAmountOfDays = true;\r\n                        break;\r\n                }\r\n\r\n                if (this.localObj.temporaryStartDate !== null && this.localObj.temporaryEndDate !== null && this.localObj.temporaryNoOfDays !== null) {\r\n                    this.phase2.temporaryPeriodStartDate = this.localObj.temporaryStartDate;\r\n                    this.phase2.temporaryPeriodEndDate = this.localObj.temporaryEndDate;\r\n                    this.phase2.temporaryPeriodNumberOfDays = parseInt(this.localObj.temporaryNoOfDays , 10);\r\n                    console.log(this.localObj.temporaryNoOfDays);\r\n                    this.displayTemporaryDateSelection = true;\r\n                    this.displayNatureOfChange = true;\r\n                }\r\n\r\n                this.phase2.natureOfChange = this.localObj.natureChange_ID;\r\n                if (this.phase2.natureOfChange !== undefined) {\r\n                    this.displayEOSystem = true;\r\n                } else {\r\n                    this.displayEOSystem = false;\r\n                }\r\n\r\n                this.phase2.eosSystem = this.localObj.eos_ID;\r\n                this.phase2.TCB_CRF_ID = this.localObj.tcb_crf_ID;\r\n                this.displayTCB_CRF_ID = true;\r\n                this.displayConfigurationItems = true;\r\n                this.phase2.configurationItems = this.localObj.configurationDescr;\r\n\r\n                if (this.localObj.changeTypeHW === '1') {\r\n                    this.displayChangeType = true;\r\n                    this.phase2.change.hardware = true;\r\n                } else {\r\n                    this.phase2.change.hardware = false;\r\n                }\r\n                if (this.localObj.changeTypeSW === '1') {\r\n                    this.displayChangeType = true;\r\n                    this.phase2.change.software = true;\r\n                } else {\r\n                    this.phase2.change.software = false;\r\n                }\r\n                if (this.localObj.changeTypeFW === '1') {\r\n                    this.displayChangeType = true;\r\n                    this.phase2.change.firmware = true;\r\n                } else {\r\n                    this.phase2.change.firmware = false;\r\n                }\r\n                if (this.phase2.change.firmware || this.phase2.change.software || this.phase2.change.hardware) {\r\n                    this.displayAdditionalAttachedDocuments = true;\r\n                } else {\r\n                    this.displayAdditionalAttachedDocuments = false;\r\n                }\r\n\r\n                if (this.localObj.impactRisks_ID !== '2') {\r\n                    this.displayEstimatedImpact = true;\r\n                }\r\n\r\n                if (this.localObj.impactOnClients !== null) {\r\n                    this.displayEstimatedImpact = true;\r\n                    this.phase2.estimatedImpacts.clients = this.localObj.impactOnClients;\r\n                }\r\n                if (this.localObj.impactOnOperations !== null) {\r\n                    this.displayEstimatedImpact = true;\r\n                    this.phase2.estimatedImpacts.operations = this.localObj.impactOnOperations;\r\n                }\r\n                if (this.localObj.impactonTech !== null) {\r\n                    this.displayEstimatedImpact = true;\r\n                    this.phase2.estimatedImpacts.technical = this.localObj.impactonTech;\r\n                }\r\n\r\n                if (this.phase2.estimatedImpacts.technical !== undefined ||\r\n                    this.phase2.estimatedImpacts.clients !== undefined ||\r\n                    this.phase2.estimatedImpacts.operations !== undefined) {\r\n                    this.displayProblemReportRaised = true;\r\n                } else {\r\n                    this.displayProblemReportRaised = false;\r\n                }\r\n\r\n                if (this.localObj.reportRaisedContractor === '1') {\r\n                    this.phase2.problemReportRaised = true;\r\n                } else {\r\n                    this.phase2.problemReportRaised = false;\r\n                }\r\n\r\n                if (this.phase2.problemReportRaised) {\r\n                    this.displayChangePreTested = false;\r\n                } else if (!this.phase2.problemReportRaised) {\r\n                    this.displayChangePreTested = true;\r\n                    this.phase2.problemReportRef = undefined;\r\n                }\r\n\r\n                if (this.localObj.preTestSuccess) {\r\n                    this.phase2.changeSuccessfullyTested = 'yes';\r\n                } else if (this.localObj.preTestSuccess) {\r\n                    this.phase2.changeSuccessfullyTested = 'no';\r\n                } else {\r\n                    this.phase2.changeSuccessfullyTested = 'na';\r\n                }\r\n                if (this.phase2.changeSuccessfullyTested === 'yes') {\r\n                    this.displayChangeNotSuccessfullyTestedReason = false;\r\n                    this.displaySpecialistComments = true;\r\n                    this.phase2.changeNotSuccessfullyTestedReason = undefined;\r\n                    if (this.displaySelectTemporaryAmountOfDays) {\r\n                        this.displayRecommendOrOppose = true;\r\n                    }\r\n                } else if (this.phase2.changeSuccessfullyTested === 'no') {\r\n                    this.phase2.changeNotSuccessfullyTestedReason = this.localObj.reasonUnsucesTest;\r\n                    this.displayChangeNotSuccessfullyTestedReason = true;\r\n                    this.displaySpecialistComments = false;\r\n                    this.displayRecommendOrOppose = false;\r\n                } else if (this.phase2.changeSuccessfullyTested === 'na') {\r\n                    this.displayChangeNotSuccessfullyTestedReason = false;\r\n                    this.displaySpecialistComments = true;\r\n                    this.phase2.changeNotSuccessfullyTestedReason = undefined;\r\n                    if (this.displaySelectTemporaryAmountOfDays) {\r\n                        this.displayRecommendOrOppose = true;\r\n                    }\r\n                }\r\n\r\n                this.activateSubmitButton = true;\r\n                const submitButton = document.getElementById('submit');\r\n                submitButton.classList.remove('disabled');\r\n                document.getElementById('cancel').classList.add('invisible');\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n","module.exports = \"#drop-area {\\r\\n    border: 2px dashed #ccc;\\r\\n    border-radius: 20px;\\r\\n    width: 480px;\\r\\n    font-family: sans-serif;\\r\\n    margin: 100px auto;\\r\\n    padding: 20px;\\r\\n}\\r\\n#drop-area.highlight {\\r\\n    border-color: purple;\\r\\n}\\r\\np {\\r\\n    margin-top: 0;\\r\\n}\\r\\n.my-form {\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n#gallery {\\r\\n    margin-top: 10px;\\r\\n}\\r\\n#gallery img {\\r\\n    width: 150px;\\r\\n    margin-bottom: 10px;\\r\\n    margin-right: 10px;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n.button {\\r\\n    display: inline-block;\\r\\n    padding: 10px;\\r\\n    background: #ccc;\\r\\n    cursor: pointer;\\r\\n    border-radius: 5px;\\r\\n    border: 1px solid #ccc;\\r\\n}\\r\\n.button:hover {\\r\\n    background: #ddd;\\r\\n}\\r\\n#fileElem {\\r\\n    display: none;\\r\\n}\\r\\n\"","module.exports = \"<!--Created by Blaine Viljoen(28023374)-->\\r\\n\\r\\n<form>\\r\\n    <div class=\\\"card secondary-color\\\">\\r\\n        <h3 class=\\\"px-3 text-primary\\\">Request for Change</h3>\\r\\n        <div>\\r\\n            <label class=\\\"px-3 d-inline-block\\\">Name of Initiator: {{this.user}}</label>\\r\\n            <p class=\\\" px-3 d-inline-block\\\"></p>\\r\\n            <label class=\\\"px-3 d-inline-block\\\">Date Requested: {{this.phase3Service.phaseData[0][0].start_time}}</label>\\r\\n            <p class=\\\"px-3 d-inline-block\\\"></p>\\r\\n        </div>\\r\\n        <label class=\\\"px-3 \\\">Requested Change Description: </label>\\r\\n        <p class=\\\"px-3\\\">{{this.phase3Service.phaseData[0][0].requested_change}}</p>\\r\\n        <label class=\\\"px-3\\\">Reason for request: </label>\\r\\n        <p class=\\\"px-3\\\">{{this.phase3Service.phaseData[0][0].description}}</p>\\r\\n    </div>\\r\\n        <div id=\\\"phase2\\\" style=\\\"\\\" class=\\\"shadow card bg-light mx-auto\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <h3 class=\\\"px-3 text-primary\\\">Configuration Data</h3>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <label class=\\\"px-3\\\" for=\\\"priority\\\">Request Priority</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <select ngbPopover=\\\"Select from the drop down list whether the change request is an EMERGENCY or NON-EMERGENCY (NORMAL).\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"CHANGE REQUEST PRIORITY\\\"\\r\\n                                class=\\\"rounded w-100 form-control\\\"\\r\\n                                name=\\\"priority\\\"\\r\\n                                id=\\\"priority\\\"\\r\\n                                disabled>\\r\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                            <option *ngFor=\\\"let priority of availablePriorities\\\"  [value]=\\\"priority[0]\\\" [selected]=\\\"this.phase2.requestPriority === priority[0]\\\">{{priority[1]}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div>\\r\\n                            <label class=\\\"px-3\\\"  for=\\\"predictedImpact\\\"> Predicted Risk/s </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div>\\r\\n                            <select ngbPopover=\\\"Select the appropriate option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"PREDICTED RISK\\\"\\r\\n                                    class=\\\"rounded w-100 form-control\\\"\\r\\n                                    name=\\\"predictedImpact\\\"\\r\\n                                    id=\\\"predictedImpact\\\"\\r\\n                                    disabled >\\r\\n                                <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                                <option *ngFor=\\\"let impacts of availableImpacts\\\" [selected]=\\\"this.phase2.predictedImpact === impacts[0]\\\"  [value]=\\\"impacts[0]\\\" >{{impacts[1]}}</option>\\r\\n                            </select>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm \\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row\\\" >\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div >\\r\\n                            <label class=\\\"px-3\\\" for=\\\"changePeriod\\\" >Change Period</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div>\\r\\n                            <select ngbPopover=\\\"Specify whether the requested change will be permanent or just temporary by selecting an option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"CHANGE PERIOD\\\"\\r\\n                                    class=\\\"rounded w-100 form-control\\\"\\r\\n                                    name=\\\"changePeriod\\\"\\r\\n                                    id=\\\"changePeriod\\\"\\r\\n                                    disabled>\\r\\n                                <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                                <option *ngFor=\\\"let period of availablePeriods\\\"  [value]=\\\"period[0]\\\" [selected]=\\\"this.phase2.changePeriod === period[0]\\\">{{period[1]}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div >\\r\\n                            <label class=\\\"px-3\\\" for=\\\"changePeriod\\\" >Temporary period number of days</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div >\\r\\n                            <select ngbPopover=\\\"Select the appropriate option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"PREDICTED RISK\\\"\\r\\n                                    class=\\\"rounded w-100 form-control\\\"\\r\\n                                    name=\\\"temporaryNoDays\\\"\\r\\n                                    id=\\\"temporaryNoDays\\\"\\r\\n                                    disabled >\\r\\n                                <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select no. of days</option>\\r\\n                                <option  *ngFor=\\\"let day of availableNumberOfTemporaryDays\\\" [selected]=\\\"this.phase2.temporaryPeriodNumberOfDays ===  day\\\" value=\\\"{{day}}\\\">{{day}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"row pt-3\\\">\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <label class=\\\"px-3\\\" for=\\\"temporaryStartPeriod\\\" >Temporary period start date:</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm \\\">\\r\\n                        <input class=\\\"rounded w-100 form-control\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               id=\\\"temporaryStartPeriod\\\"\\r\\n                               name=\\\"temporaryStartPeriod\\\"\\r\\n                               autocomplete=\\\"off\\\"\\r\\n                               bsDatepicker\\r\\n                               [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                               [(ngModel)]=\\\"this.phase2.temporaryPeriodStartDate\\\"\\r\\n                               disabled\\r\\n                        >\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm \\\"> <label class=\\\"px-3\\\" for=\\\"temporaryEndPeriod\\\" >Temporary period end date:</label></div>\\r\\n                    <div class=\\\"col-sm \\\">\\r\\n                        <input  class=\\\"rounded w-100 form-control\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                id=\\\"temporaryEndPeriod\\\"\\r\\n                                name=\\\"temporaryEndPeriod\\\"\\r\\n                                autocomplete=\\\"off\\\"\\r\\n                                bsDatepicker\\r\\n                                [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                                [(ngModel)]=\\\"this.phase2.temporaryPeriodEndDate\\\"\\r\\n                                disabled\\r\\n                                readonly>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm \\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" >\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div>\\r\\n                            <label class=\\\"px-3\\\" for=\\\"natureOfChange\\\">Nature of the change</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div>\\r\\n                            <select popoverTitle=\\\"SELECT NATURE OF CHANGE\\\" ngbPopover=\\\"Select an option from the drop down list. National = Change affects both Northern and Southern regions. Regional = Either Northern or Southern is affected, but not both. Local = any ATCC or TCU or RT\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                                    class=\\\"rounded w-100 form-control\\\"\\r\\n                                    name=\\\"natureOfChange\\\"\\r\\n                                    id=\\\"natureOfChange\\\"\\r\\n                                    disabled\\r\\n                                    [(ngModel)]=\\\"this.phase2.natureOfChange\\\">\\r\\n                                <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                                <option *ngFor=\\\"let change of availableNatureOfChange\\\"  [value]=\\\"change[0]\\\" [selected]=\\\"this.phase2.natureOfChange === change[0]\\\">{{change[1]}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div >\\r\\n                            <label class=\\\"px-3\\\"  for=\\\"eosSystem\\\">EOS system</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div >\\r\\n                            <select popoverTitle=\\\"SELECT EOS SYSTEM\\\" ngbPopover=\\\"Please select from the drop down list the Essential Operational System (EOS) to which the Trusted Computing Base (TCB) change will be applied.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                                    class=\\\"w-100 rounded form-control\\\"\\r\\n                                    name=\\\"eosSystem\\\"\\r\\n                                    id=\\\"eosSystem\\\"\\r\\n                                    disabled >\\r\\n                                <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n                                <option *ngFor=\\\"let eos of availableEosSystems\\\"  [value]=\\\"eos[0]\\\" [selected]=\\\"this.phase2.eosSystem === eos[0]\\\" >{{eos[1]}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm \\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--</div>-->\\r\\n            <!--    <div class=\\\"card\\\">-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row\\\" >\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <label class=\\\"px-3\\\" for=\\\"tcbID\\\">TCB-CRF ID:</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <input popoverTitle=\\\"CHANGE REQUEST IDENTIFICATION\\\" ngbPopover=\\\"The TCB-CRF ID is an unique number relative to an EOS system issued by the TCB-CRF Administrator for every change request submitted for approval and implementation.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                               class=\\\"rounded form-control\\\"\\r\\n                               id=\\\"tcbID\\\"\\r\\n                               name=\\\"tcbID\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               disabled\\r\\n                               [(ngModel)]=\\\"this.phase2.TCB_CRF_ID\\\"  >\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\"></div>\\r\\n                    <div class=\\\"col-sm\\\"></div>\\r\\n                    <div class=\\\"col-sm\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" >\\r\\n                <div >\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm\\\">\\r\\n                            <label class=\\\"px-3\\\" for=\\\"configurationItems\\\">Configuration Items: </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"px-3\\\">\\r\\n                        <input  popoverTitle=\\\"ENTER ALL CONFIGURATION ITEMS\\\" ngbPopover=\\\"TECH: Enter any sub system or system component that will be subject to the change e.g. EXTRA HDD, SW VERS., RADAR FEED, DATASET- ANY CHANGE TO THE TCB NEEDS TO BE APPROVED. OPS: Enter short description of the request.  Maximum 250 characters allowed\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                                maxlength=\\\"250\\\"\\r\\n                                class=\\\"rounded w-75 form-control\\\"\\r\\n                                id=\\\"configurationItems\\\"\\r\\n                                name=\\\"configurationItems\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                disabled\\r\\n                                [(ngModel)]=\\\"this.phase2.configurationItems\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <div >\\r\\n                            <label class=\\\"px-3\\\">Change Type: </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"\\r\\n                         popoverTitle=\\\"CHANGE TYPE\\\" ngbPopover=\\\"Select the type of change. Hardware (HW), Software (SW) or Firmware (FW). One or more of these options must be ticked if affected by the change.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                    >\\r\\n                        <div>\\r\\n                            <label class=\\\"checkbox-inline px-3\\\">\\r\\n                                <input type=\\\"checkbox\\\"\\r\\n                                       value=\\\"HW\\\"\\r\\n                                       disabled\\r\\n                                       [checked]=\\\"this.phase2.change.hardware\\\">\\r\\n                                Hardware\\r\\n                            </label>\\r\\n                            <label class=\\\"checkbox-inline px-3\\\">\\r\\n                                <input type=\\\"checkbox\\\"\\r\\n                                       value=\\\"SW\\\"\\r\\n                                       disabled\\r\\n                                       [checked]=\\\"this.phase2.change.software\\\">\\r\\n                                Software\\r\\n                            </label>\\r\\n                            <label class=\\\"checkbox-inline px-3\\\">\\r\\n                                <input type=\\\"checkbox\\\"\\r\\n                                       value=\\\"FW\\\"\\r\\n                                       disabled\\r\\n                                       [checked]=\\\"this.phase2.change.firmware\\\">\\r\\n                                Firmware\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row pb-3\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <label class=\\\"px-3\\\" for=\\\"numberOfPages\\\">Number of Pages (Documents): </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <input class=\\\"px-3 form-control rounded\\\"\\r\\n                               disabled=\\\"true\\\"\\r\\n                               type=\\\"number\\\"\\r\\n                               name=\\\"numberOfPages\\\"\\r\\n                               id=\\\"numberOfPages\\\"\\r\\n                               [(ngModel)]=\\\"this.filesForUpload.length\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"px-3\\\">\\r\\n                    <div class=\\\"upload-table px-3\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th>Name:</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody class=\\\"upload-name-style\\\">\\r\\n                            <tr *ngFor=\\\"let item of filesForUpload, index as i\\\">\\r\\n                                <td><strong>{{ item.name }}</strong></td>\\r\\n                                <td class=\\\"px-3\\\" (click)=\\\"removeFile(i)\\\" style=\\\"cursor: pointer;\\\">&#10005;</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" >\\r\\n                <label class=\\\"px-3\\\">Estimated Impact: </label>\\r\\n                <div class=\\\"px-3\\\">\\r\\n                    <div>\\r\\n                        <label for=\\\"operationsImpact\\\" class=\\\"\\\">Operations: </label>\\r\\n                        <br>\\r\\n                        <input popoverTitle=\\\"IMPACT=FUNCTIONAL/PROCEDURAL/etc\\\" ngbPopover=\\\"Operations: e.g. NORM mode will be down, Redundency lost, No new FPLs, Operator Handbooks\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                               class=\\\"w-75 rounded form-control\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               id=\\\"operationsImpact\\\"\\r\\n                               name=\\\"operationsImpact\\\"\\r\\n                               disabled\\r\\n                               [(ngModel)]=\\\"this.phase2.estimatedImpacts.operations\\\">\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <label for=\\\"clientsImpact\\\" class=\\\"\\\">Clients: </label>\\r\\n                        <br>\\r\\n                        <input popoverTitle=\\\"IMPACT=FUNCTIONAL/PROCEDURAL/etc\\\" ngbPopover=\\\"Clients: External and Internal - loss of service such as slot information, procedural changes, etc.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                               class=\\\" w-75 rounded form-control\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               id=\\\"clientsImpact\\\"\\r\\n                               name=\\\"clientsImpact\\\"\\r\\n                               disabled\\r\\n                               [(ngModel)]=\\\"this.phase2.estimatedImpacts.clients\\\">\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <label for=\\\"technicalImpact\\\" class=\\\"\\\">Technical: </label>\\r\\n                        <br>\\r\\n                        <input popoverTitle=\\\"IMPACT=FUNCTIONAL/PROCEDURAL/etc\\\" ngbPopover=\\\"Technical: Node Down, LAN switch down, Documents\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                               class=\\\" w-75 rounded form-control\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               id=\\\"technicalImpact\\\"\\r\\n                               name=\\\"technicalImpact\\\"\\r\\n                               disabled\\r\\n                               [(ngModel)]=\\\"this.phase2.estimatedImpacts.technical\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <label class=\\\"px-3\\\">Problem Report raised with Contractor?</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"\\r\\n                         popoverTitle=\\\"PROBLEM REPORT RAISED?\\\" ngbPopover=\\\"Specify yes or no whether a problem request or report has been raised with the contractor by selecting the appropriate check box with a left-mouse-button click.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                    >\\r\\n                        <Label class=\\\"radio-inline px-3\\\">\\r\\n                            <input type=\\\"radio\\\"\\r\\n                                   name=\\\"reportRaised\\\"\\r\\n                                   value=\\\"yes\\\"\\r\\n                                   disabled\\r\\n                                   [checked]=\\\"this.phase2.problemReportRaised\\\">\\r\\n                            Yes\\r\\n                        </Label>\\r\\n                        <Label class=\\\"radio-inline px-3\\\">\\r\\n                            <input type=\\\"radio\\\"\\r\\n                                   name=\\\"reportRaised\\\"\\r\\n                                   value=\\\"no\\\"\\r\\n                                   disabled\\r\\n                                   [checked]=\\\"!this.phase2.problemReportRaised\\\">\\r\\n                            No\\r\\n                        </Label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"></div>\\r\\n                </div>\\r\\n                <div >\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <label for=\\\"problemReportRef\\\" class=\\\"px-3\\\">Problem Report Reference Number: </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <input popoverTitle=\\\"PROBLEM REPORT REFERENCE\\\" ngbPopover=\\\"Enter the problem report reference number here. The problem report refers to a report that was sent to the contractor to improve a functionality or solve a problem on the system. Can be a PR, ECR, PCR, CR, etc.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                                   class=\\\"w-100 rounded form-control\\\"\\r\\n                                   type=\\\"text\\\"\\r\\n                                   name=\\\"problemReportRef\\\"\\r\\n                                   id=\\\"problemReportRef\\\"\\r\\n                                   disabled\\r\\n                                   [(ngModel)]=\\\"this.phase2.problemReportRef\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" >\\r\\n                <div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <label class=\\\"px-3\\\">Change successfully pre-tested ?</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\"\\r\\n                             popoverTitle=\\\"CHANGE SUCCESSFULLY PRE-TESTED ?\\\" ngbPopover=\\\"Specify whether pre-tests or validations concerning the change were successful by selecting a check box accordingly with the left-mouse button.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                        >\\r\\n                            <Label class=\\\"radio-inline px-3\\\">\\r\\n                                <input type=\\\"radio\\\"\\r\\n                                       name=\\\"preTested\\\"\\r\\n                                       value=\\\"yes\\\"\\r\\n                                       disabled\\r\\n                                       [checked]=\\\"this.phase2.changeSuccessfullyTested === 'yes'\\\">\\r\\n                                Yes\\r\\n                            </Label>\\r\\n                            <Label class=\\\"radio-inline px-3\\\">\\r\\n                                <input type=\\\"radio\\\"\\r\\n                                       name=\\\"preTested\\\"\\r\\n                                       value=\\\"no\\\"\\r\\n                                       disabled\\r\\n                                       [checked]=\\\"this.phase2.changeSuccessfullyTested === 'no'\\\">\\r\\n                                No\\r\\n                            </Label>\\r\\n                            <Label class=\\\"radio-inline px-3\\\">\\r\\n                                <input type=\\\"radio\\\"\\r\\n                                       name=\\\"preTested\\\"\\r\\n                                       value=\\\"na\\\"\\r\\n                                       disabled\\r\\n                                       [checked]=\\\"this.phase2.changeSuccessfullyTested === 'na'\\\">\\r\\n                                N/A\\r\\n                            </Label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"px-3\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <label for=\\\"changeNotSuccessfullyTestedReason\\\" class=\\\"\\\">Reason for unsuccessful test: </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <input popoverTitle=\\\"Reason for unsuccessful testing\\\" ngbPopover=\\\"If the tests were unsuccessful please provide the reason here\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\r\\n                                       class=\\\"w-75 rounded form-control\\\"\\r\\n                                       type=\\\"text\\\"\\r\\n                                       id=\\\"changeNotSuccessfullyTestedReason\\\"\\r\\n                                       name=\\\"changeNotSuccessfullyTestedReason\\\"\\r\\n                                       disabled\\r\\n                                       [(ngModel)]=\\\"this.phase2.changeNotSuccessfullyTestedReason\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--        <div class=\\\"form-group\\\">-->\\r\\n            <!--            <div class=\\\"row\\\">-->\\r\\n            <!--                <div class=\\\"col\\\">-->\\r\\n            <!--                    <label class=\\\"px-3\\\">Request submitted to all concerned parties ?</label>-->\\r\\n            <!--                </div>-->\\r\\n            <!--                <div class=\\\"col\\\">-->\\r\\n            <!--                    <Label class=\\\"radio-inline px-3\\\"><input type=\\\"radio\\\" name=\\\"submittedToAll\\\" value=\\\"yes\\\"  (click)=\\\"onSelectSubmittedToAllConcerned($event)\\\">Yes</Label>-->\\r\\n            <!--                    <Label class=\\\"radio-inline px-3\\\"><input type=\\\"radio\\\" name=\\\"submittedToAll\\\" value=\\\"no\\\"   (click)=\\\"onSelectSubmittedToAllConcerned($event)\\\" >No</Label>-->\\r\\n            <!--                </div>-->\\r\\n            <!--                <div class=\\\"col\\\"></div>-->\\r\\n            <!--            </div>-->\\r\\n\\r\\n            <!--            <div  class=\\\"px-3\\\" *ngIf=\\\"!this.phase2.submittedToAllParties\\\">-->\\r\\n            <!--                <div class=\\\"row\\\">-->\\r\\n            <!--                    <div class=\\\"col\\\">-->\\r\\n            <!--                        <label class=\\\"\\\">Reason why not submitted to all concerned parties?</label>-->\\r\\n            <!--                    </div>-->\\r\\n            <!--                </div>-->\\r\\n            <!--                <div class=\\\"row\\\">-->\\r\\n            <!--                    <div class=\\\"col\\\">-->\\r\\n            <!--                        <input class=\\\" w-75 rounded form-control\\\" type=\\\"text\\\" name=\\\"requestNotSubmittedToAllParties\\\" [(ngModel)]=\\\"this.phase2.notSubmittedToAllPartiesReason\\\">-->\\r\\n            <!--                    </div>-->\\r\\n            <!--                </div>-->\\r\\n            <!--            </div>-->\\r\\n            <!--        </div>-->\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"px-3\\\" >\\r\\n                    <div class=\\\"row\\\" >\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <label for=\\\"specialistComments\\\" >Specialist comments</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\" >\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <input\\r\\n                                    class=\\\"px-3 w-75 rounded form-control\\\"\\r\\n                                    type=\\\"text\\\"\\r\\n                                    name=\\\"specialistComments\\\"\\r\\n                                    id=\\\"specialistComments\\\"\\r\\n                                    disabled\\r\\n                                    [(ngModel)]=\\\"this.phase2.specialistComment\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\"  >\\r\\n                <div class=\\\"py-3\\\">\\r\\n                    <div class=\\\"row\\\" >\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <label class=\\\"px-3\\\" for=\\\"proposedDate\\\">Proposed Implementation Date: </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <input class=\\\" px-3 rounded w-75 form-control\\\"\\r\\n                                   type=\\\"text\\\"\\r\\n                                   id=\\\"proposedDate\\\"\\r\\n                                   name=\\\"proposedDate\\\"\\r\\n                                   autocomplete=\\\"off\\\"\\r\\n                                   bsDatepicker\\r\\n                                   disabled\\r\\n                                   [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                                   [(ngModel)]=\\\"this.phase2.proposedImplementationDate\\\"  >\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    <div class=\\\"shadow card bg-light mx-auto\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <h3 class=\\\"pt-3 px-3 text-primary\\\">CCR Phase 3: Sign Off</h3>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\">Implementation successful?</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"Select 'Yes' or 'No' whether the change was successfully implemented or not. By left-mouse-button clicking on the appropriate check box the selection is made.\\\"\\r\\n                     triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                     placement=\\\"right\\\"\\r\\n                     popoverTitle=\\\"CHANGE REQUEST SUCCESSFUL IMPLEMENTATION\\\"\\r\\n                        class=\\\"col\\\">\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"implementationSuccess\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectImplementationSuccessful($event)\\\"\\r\\n                        >\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"implementationSuccess\\\"\\r\\n                               value=\\\"no\\\"\\r\\n                               (click)=\\\"onSelectImplementationSuccessful($event)\\\"\\r\\n                        >\\r\\n                        No\\r\\n                    </Label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-3 px-3\\\" *ngIf=\\\"!this.phase3.implementationSuccessful&&this.showImpChange\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <label for=\\\"abortRegress\\\">Select Aborted or Regressed: </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col pl-3\\\">\\r\\n                        <ngx-select-dropdown\\r\\n                                ngbPopover=\\\"Select from the drop down list whether the change request has either been Aborted or Regressed.\\\"\\r\\n                                triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                                placement=\\\"right\\\"\\r\\n                                popoverTitle=\\\"CHANGE REQUEST ABORT/REGRESS\\\"\\r\\n                                id=\\\"abortRegress\\\"\\r\\n                                name=\\\"abortRegress\\\"\\r\\n                                (change)=\\\"onSelectAbortRegress($event)\\\"\\r\\n                                [multiple]=\\\"false\\\"\\r\\n                                [(ngModel)]=\\\"this.phase3.abortRegress\\\"\\r\\n                                [options]=\\\"abortOrRegress\\\"\\r\\n                        ></ngx-select-dropdown>\\r\\n                    </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.abort||this.phase3.regress\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3 pt-2\\\" for=\\\"abortRegressReason\\\">Reason:</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"Please provide any relevant information as to why this change request was aborted/regressed.\\\"\\r\\n                     triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                     placement=\\\"right\\\"\\r\\n                     popoverTitle=\\\"CHANGE REQUEST ABORT/REGRESS REASON\\\"\\r\\n                        class=\\\"col-sm\\\">\\r\\n                    <textarea\\r\\n                            type=\\\"text\\\"\\r\\n                            id=\\\"abortRegressReason\\\"\\r\\n                            name=\\\"abortRegressReason\\\"\\r\\n                            class=\\\"px-3 rounded form-control\\\"\\r\\n                            rows=\\\"2\\\"\\r\\n                            [(ngModel)]=\\\"this.phase3.abortRegressReason\\\"\\r\\n                            (ngModelChange)=\\\"abortRegressReasonCheck()\\\"></textarea>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.regress\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\">Already Regressed?</label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"\\r\\n                     ngbPopover=\\\"Please select if regression has already occurred\\\"\\r\\n                     triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                     placement=\\\"right\\\"\\r\\n                     popoverTitle=\\\"CHANGE REQUEST ALREADY REGRESSED?\\\">\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"alreadyRegressed\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectAlreadyRegressed($event)\\\"\\r\\n                        >\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"alreadyRegressed\\\"\\r\\n                               value=\\\"no\\\"\\r\\n                               (click)=\\\"onSelectAlreadyRegressed($event)\\\"\\r\\n                        >\\r\\n                        No\\r\\n                    </Label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"!this.phase3.alreadyRegressed && this.showSched\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label class=\\\"pl-3\\\" for=\\\"schedRegressDate\\\">Scheduled Regression Date: </label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"If for some reason a regression was required after the change was implemented but could not take place for whatever reason, it will be required to schedule a regression as soon as possible. Please select a date for the regression of the change request.\\\"\\r\\n                     triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                     placement=\\\"right\\\"\\r\\n                     popoverTitle=\\\"CHANGE REQUEST REGRESSION DATE\\\"\\r\\n                     class=\\\"col\\\" >\\r\\n                    <input class=\\\"rounded w-100 form-control\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           id=\\\"schedRegressDate\\\"\\r\\n                           name=\\\"schedRegressDate\\\"\\r\\n                           autocomplete=\\\"off\\\"\\r\\n                           [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                           [(ngModel)]=\\\"this.phase3.schedRegressionDate\\\"\\r\\n                           bsDatepicker\\r\\n                           (ngModelChange)=\\\"schedRegressCheck()\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.implementationSuccessful&&this.showImpChange\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div >\\r\\n                        <label class=\\\"px-3\\\" for=\\\"NoDays\\\" >TCB number of days</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <div>\\r\\n                        <select ngbPopover=\\\"Select the appropriate option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"PREDICTED RISK\\\"\\r\\n                                class=\\\"rounded w-100 form-control\\\"\\r\\n                                name=\\\"NoDays\\\"\\r\\n                                id=\\\"NoDays\\\"\\r\\n                                (change)=\\\"onSelectTCBNumberOfDays($event)\\\" >\\r\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select no. of days</option>\\r\\n                            <option  *ngFor=\\\"let day of numberOfDays\\\" value=\\\"{{day}}\\\">{{day}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.implementationSuccessful&&this.showTCBdatepicker\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\" for=\\\"tcbEvalPeriod\\\" >TCB evaluation start date:</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"This field refers to an evaluation period required to validate the success of the change over a longer period of time. The TCBCP administrator must enter a start date and end date  not exceeding 31 days in total.\\\"\\r\\n                     triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                     placement=\\\"right\\\"\\r\\n                     popoverTitle=\\\"CHANGE REQUEST TCB EVALUATION PERIOD\\\"\\r\\n                     class=\\\"col-sm\\\" >\\r\\n                    <input class=\\\"rounded w-100 form-control\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           id=\\\"tcbEvalPeriod\\\"\\r\\n                           name=\\\"tcbEvalPeriod\\\"\\r\\n                           autocomplete=\\\"off\\\"\\r\\n                           bsDatepicker\\r\\n                           [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                           [(ngModel)]=\\\"this.dateRangePicker\\\"\\r\\n                           (ngModelChange)=\\\"onSelectTCBEval($event)\\\"\\r\\n                    >\\r\\n                </div>\\r\\n                <div class=\\\"col-sm \\\">\\r\\n                    <input  class=\\\"rounded w-100 form-control\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            id=\\\"TCBEndPeriod\\\"\\r\\n                            name=\\\"TCBEndPeriod\\\"\\r\\n                            autocomplete=\\\"off\\\"\\r\\n                            bsDatepicker\\r\\n                            [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                            [(ngModel)]=\\\"this.phase3.tcbEvalEnd\\\"\\r\\n                            disabled\\r\\n                            readonly>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.implementationSuccessful&&this.showTCBdatepicker\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\">Additional documents?</label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"additionalDocs\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectAdditionalDocs($event)\\\"\\r\\n                        >\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"additionalDocs\\\"\\r\\n                               value=\\\"no\\\"\\r\\n                               (click)=\\\"onSelectAdditionalDocs($event)\\\"\\r\\n                        >\\r\\n                        No\\r\\n                    </Label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.additionalDocs\\\">\\r\\n                <div class=\\\"px-3 w-100\\\"\\r\\n                     ngbPopover=\\\"Please drag and drop or select any relevant files that need to uploaded and linked with this respective change request\\\"\\r\\n                     triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                     placement=\\\"right\\\"\\r\\n                     popoverTitle=\\\"CHANGE REQUEST ADDITIONAL DOCUMENTS\\\">\\r\\n                    <ngx-file-drop multiple=\\\"true\\\" dropZoneLabel=\\\"Drop files here\\\" (onFileDrop)=\\\"dropped($event)\\\"\\r\\n                                   (onFileOver)=\\\"fileOver($event)\\\" (onFileLeave)=\\\"fileLeave($event)\\\">\\r\\n                        <ng-template  ngx-file-drop-content-tmp let-openFileSelector=\\\"openFileSelector\\\">\\r\\n                            Please drag and drop your additional files here\\r\\n                            <button type=\\\"button\\\" (click)=\\\"openFileSelector()\\\">Browse Files</button>\\r\\n                        </ng-template>\\r\\n                    </ngx-file-drop>\\r\\n                    <div class=\\\"upload-table px-3\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th>Name:</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody class=\\\"upload-name-style\\\">\\r\\n                            <tr *ngFor=\\\"let item of filesForUpload, index as i\\\">\\r\\n                                <td><strong>{{ item.name }}</strong></td>\\r\\n                                <td class=\\\"px-3\\\" (click)=\\\"removeFile(i)\\\" style=\\\"cursor: pointer;\\\">&#10005;</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.additionalDocs\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\">All Items Updated?</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"At the end of the update period select whether all update items were updated by selecting the 'Yes' check box with the left-mouse-button. It is important to adhere to the update period to achieve finalisation of the TCB-CRF.\\\"\\r\\n                     triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                     placement=\\\"right\\\"\\r\\n                     popoverTitle=\\\"CHANGE REQUEST UPDATED ITEMS\\\"\\r\\n                     class=\\\"col\\\">\\r\\n                    <Label class=\\\"checkbox-inline px-3\\\">\\r\\n                        <input type=\\\"checkbox\\\"\\r\\n                               name=\\\"itemsUpdated\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectItemsUpdated($event)\\\"\\r\\n                        >\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.itemsUpdated\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\">Evaluation successful?</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"Please confirm whether or not the change request validation was successful by selecting the corresponding 'Yes' or 'No' options.\\\"\\r\\n                     triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                     placement=\\\"right\\\"\\r\\n                     popoverTitle=\\\"CHANGE REQUEST SUCCESSFUL EVALUATION\\\"\\r\\n                        class=\\\"col\\\">\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"evalSuccess\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectEvalSuccess($event)\\\"\\r\\n                        >\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"evalSuccess\\\"\\r\\n                               value=\\\"no\\\"\\r\\n                               (click)=\\\"onSelectEvalSuccess($event)\\\"\\r\\n                        >\\r\\n                        No\\r\\n                    </Label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.evalSuccess\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label  class=\\\"px-3\\\">Confirm Close-out:</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"Please confirm or reject the current change request by selecting the corresponding 'Confirm' or 'Reject' options.\\\"\\r\\n                     triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                     placement=\\\"right\\\"\\r\\n                     popoverTitle=\\\"CHANGE REQUEST CONFIRMATION\\\"\\r\\n                     class=\\\"col\\\">\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"confirmChoice\\\"\\r\\n                               value=\\\"Confirm\\\"\\r\\n                               (click)=\\\"onSelectConfirm($event)\\\"\\r\\n                        >\\r\\n                        Confirm\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"confirmChoice\\\"\\r\\n                               value=\\\"Reject\\\"\\r\\n                               (click)=\\\"onSelectConfirm($event)\\\"\\r\\n                        >\\r\\n                        Reject\\r\\n                    </Label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-3 pr-3\\\" *ngIf=\\\"!this.phase3.evalSuccess&&this.showEvalChange\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3 pt-2\\\" for=\\\"evalFail\\\">Reason:</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"Please provide any relevant information as to why the evaluation of the change request was not successful.\\\"\\r\\n                     triggers=\\\"mouseenter:mouseleave\\\"\\r\\n                     placement=\\\"right\\\"\\r\\n                     popoverTitle=\\\"CHANGE REQUEST EVALUATION FAILURE REASON\\\"\\r\\n                     class=\\\"col-sm\\\">\\r\\n                    <textarea rows=\\\"2\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              id=\\\"evalFail\\\"\\r\\n                              name=\\\"evalFail\\\"\\r\\n                              class=\\\"form-control\\\"\\r\\n                              [(ngModel)]=\\\"this.phase3.evalFailure\\\"\\r\\n                              (ngModelChange)=\\\"evalReasonCheck()\\\"></textarea>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div  class=\\\"row px-3\\\">\\r\\n                <div class=\\\"col\\\"></div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <button class=\\\"btn btn-outline-danger btn-rounded w-100  my-4 waves-effect z-depth-0\\\"\\r\\n                            (click)=\\\"onCancel()\\\"> Cancel\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n                <div class=\\\"col\\\" >\\r\\n                    <button class=\\\"btn btn-outline-info btn-rounded w-100 my-4  waves-effect z-depth-0\\\"\\r\\n                            [disabled]=\\\"!this.disableSubmitButton\\\"\\r\\n                            id=\\\"submit\\\"\\r\\n                            (click)=\\\"onSubmit()\\\"> Submit\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n<!--Created by Blaine Viljoen(28023374)-->\\r\\n\"","// Created by Blaine Viljoen 28023374\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {BsDatepickerConfig} from 'ngx-bootstrap';\r\nimport {CCRPhase3} from '../../models/CCR-Phase3';\r\nimport {FileSystemDirectoryEntry, FileSystemFileEntry, NgxFileDropEntry} from 'ngx-file-drop';\r\nimport {Data, Router} from '@angular/router';\r\nimport {Phase3Service} from '../../services/phase3.service';\r\nimport swal from 'sweetalert2';\r\nimport {CCRPhase2} from '../../models/CCR-Phase2';\r\nimport {Phase2Service} from '../../services/phase2.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-phase3',\r\n  templateUrl: './phase3.component.html',\r\n  styleUrls: ['./phase3.component.css']\r\n})\r\nexport class Phase3Component implements OnInit {\r\n  private  formData = new FormData();\r\n\r\n  private localObj;\r\n\r\n  datepickerConfig: Partial<BsDatepickerConfig> ;\r\n  dateRangePicker: Date;\r\n  displayImpSuccess: boolean;\r\n  showImpChange: boolean;\r\n  showTCBdatepicker: boolean;\r\n  showEvalChange: boolean;\r\n  showSched: boolean;\r\n  disableSubmitButton: boolean;\r\n  private files: NgxFileDropEntry[] [] = []  ;\r\n  private filesForUpload = [];\r\n  private numberOfDays: number [] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 ];\r\n  private selectedNoDays: number;\r\n\r\n    private availableNumberOfTemporaryDays: number [] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\r\n        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\r\n    private availablePriorities: String [] = ['EMERGENCY', 'Urgent', 'Safety', 'Improvement', 'Other'];\r\n    private availablePeriods: String [] = ['Permanent', 'Temporary', 'Trial'];\r\n    private availableImpacts: String [] = ['CLIENTS', 'OPERATIONS', 'TECHNICAL'];\r\n    private availableNatureOfChange: String [] = ['National', 'Local', 'Regional'];\r\n    private availableEosSystems: String [] = ['AFTN', 'AMHS', 'ANAIS', 'A-SMGCS', 'ATIS', 'AWOS', 'CAD', 'CAMU', 'DAID', 'DATIS', 'DIESEL BACKUP',\r\n        'DITTEL', 'DME', 'FRS', 'FWD RELAY', 'ILS', 'IVSAT', 'MLAT', 'NDB', 'OTN', 'OTN', 'RADAR', 'SATELLITE', 'SMR', 'SQUIB', 'TERNS',\r\n        'TITAN', 'TOPSKY', 'UPS', 'VCCS', 'VHF', 'VOR', 'VPN'];\r\n\r\n\r\n    abortOrRegress: String[] = ['Abort', 'Regress'];\r\n    private phase2: CCRPhase2 = {\r\n        CCR_ID: undefined,\r\n        TCB_CRF_ID: undefined,\r\n        requestPriority: undefined,\r\n        predictedImpact: undefined,\r\n        changePeriod: undefined,\r\n        temporaryPeriodStartDate: undefined,\r\n        temporaryPeriodNumberOfDays: undefined,\r\n        temporaryPeriodEndDate: undefined,\r\n        natureOfChange: undefined,\r\n        eosSystem: undefined,\r\n        configurationItems: undefined,\r\n        change: {\r\n            hardware: false,\r\n            software: false,\r\n            firmware: false\r\n        },\r\n        additionalDocuments: false,\r\n        documentIds: undefined,\r\n        numberOfPages: undefined,\r\n        estimatedImpacts: {\r\n            operations: undefined,\r\n            clients: undefined,\r\n            technical: undefined\r\n        },\r\n        problemReportRaised: false,\r\n        problemReportRef: undefined,\r\n        changeSuccessfullyTested: undefined,\r\n        changeNotSuccessfullyTestedReason: undefined,\r\n        specialistComment: undefined,\r\n        proposedImplementationDate: undefined,\r\n        recommend_oppose: undefined,\r\n        CSRF_token: undefined\r\n    };\r\n\r\n  phase3: CCRPhase3 = {\r\n    CCR_ID: undefined,\r\n    schedRegressionDate: undefined,\r\n    tcbEvalStart: undefined,\r\n    tcbEvalEnd: undefined,\r\n    implementationSuccessful: true,\r\n    abort: false,\r\n    regress: false,\r\n    abortRegressReason: undefined,\r\n    abortRegress: undefined,\r\n    alreadyRegressed: true,\r\n    additionalDocs: false,\r\n    itemsUpdated: false,\r\n    evalSuccess: false,\r\n    ccrConfirmation: false,\r\n    evalFailure: undefined,\r\n    documentIds: undefined,\r\n    CSRF_token: undefined\r\n  };\r\n\r\n    user: String = '';\r\n    Token = null ;\r\n\r\n  constructor(private phase3Service: Phase3Service, private phsae2service: Phase2Service, private router: Router) {\r\n    this.datepickerConfig = Object.assign({},\r\n        {containerClass: 'theme-dark-blue'},\r\n        { dateInputFormat: 'YYYY-MM-DD'} ,\r\n        {showWeekNumbers: false},\r\n        {minDate: new Date()});\r\n  }\r\n\r\n  removeFile(index) {\r\n      this.filesForUpload.splice(index, 1);\r\n  }\r\n\r\n    onSelectTCBNumberOfDays($event) {\r\n      this.selectedNoDays = $event.target.value;\r\n      this.showTCBdatepicker = true;\r\n    }\r\n\r\n  onSelectTCBEval($event) {\r\n      const startDate = $event;\r\n      const maxDate = new Date();\r\n      maxDate.setDate($event.getDate() + parseInt( '' + this.selectedNoDays, 10));\r\n      this.phase3.tcbEvalStart = startDate;\r\n      this.phase3.tcbEvalEnd = maxDate;\r\n  }\r\n\r\n  onSelectAbortRegress($event) {\r\n    if (this.phase3.abortRegress !== undefined) {\r\n      if (this.phase3.abortRegress.includes('Abort')) {\r\n        this.phase3.abort = true;\r\n        this.phase3.regress = false;\r\n        this.phase3.abortRegressReason = undefined;\r\n        this.phase3.alreadyRegressed = false;\r\n        this.phase3.schedRegressionDate = undefined;\r\n      } else if (this.phase3.abortRegress.includes('Regress')) {\r\n        this.phase3.abort = false;\r\n        this.phase3.regress = true;\r\n        this.phase3.abortRegressReason = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  abortRegressReasonCheck() {\r\n      if (this.phase3.abortRegressReason !== undefined && this.phase3.abortRegress.includes('Abort')) {\r\n          const submitButton = document.getElementById('submit');\r\n          submitButton.classList.remove('disabled');\r\n          this.disableSubmitButton = true;\r\n      } else if (this.phase3.abortRegressReason !== undefined && this.phase3.alreadyRegressed) {\r\n          const submitButton = document.getElementById('submit');\r\n          submitButton.classList.remove('disabled');\r\n          this.disableSubmitButton = true;\r\n      }\r\n  }\r\n\r\n  schedRegressCheck() {\r\n      if (this.phase3.schedRegressionDate !== undefined) {\r\n          const submitButton = document.getElementById('submit');\r\n          submitButton.classList.remove('disabled');\r\n          this.disableSubmitButton = true;\r\n      }\r\n  }\r\n\r\n  onSelectImplementationSuccessful(e) {\r\n    if (e.target.value === 'yes') {\r\n      this.phase3.implementationSuccessful = true;\r\n      this.displayImpSuccess = false;\r\n      this.phase3.abort = false;\r\n      this.phase3.regress = false;\r\n      this.showImpChange = true;\r\n      this.phase3.schedRegressionDate = undefined;\r\n      this.phase3.abort = false;\r\n      this.phase3.regress = false;\r\n      this.phase3.abortRegressReason = undefined;\r\n      this.phase3.abortRegress = undefined;\r\n      this.phase3.alreadyRegressed = true;\r\n    } else {\r\n      this.phase3.implementationSuccessful = false;\r\n      this.displayImpSuccess = true;\r\n      this.showImpChange = true;\r\n      this.showEvalChange = false;\r\n      this.phase3.itemsUpdated = false;\r\n      this.phase3.additionalDocs = false;\r\n      this.phase3.tcbEvalStart = undefined;\r\n      this.phase3.tcbEvalEnd = undefined;\r\n      this.phase3.additionalDocs = false;\r\n      this.phase3.itemsUpdated = false;\r\n      this.phase3.evalSuccess = false;\r\n      this.phase3.ccrConfirmation = false;\r\n      this.phase3.evalFailure = undefined;\r\n      this.showEvalChange = false;\r\n    }\r\n  }\r\n  \r\n  onSelectAdditionalDocs(e) {\r\n      if (e.target.value === 'yes') {\r\n          this.phase3.additionalDocs = true;\r\n      } else {\r\n          this.phase3.additionalDocs = false;\r\n          this.phase3.itemsUpdated = true;\r\n      }\r\n  }\r\n\r\n  onSelectAlreadyRegressed(e) {\r\n      if (e.target.value === 'yes') {\r\n          this.phase3.alreadyRegressed = true;\r\n          this.showSched = false;\r\n      } else {\r\n          this.phase3.alreadyRegressed = false;\r\n          this.showSched = true;\r\n      }\r\n\r\n  }\r\n\r\n  onSelectItemsUpdated(e) {\r\n      if (e.target.value === 'yes') {\r\n          this.phase3.itemsUpdated = true;\r\n      }\r\n  }\r\n\r\n  onSelectEvalSuccess(e) {\r\n      if (e.target.value === 'yes') {\r\n          this.phase3.evalSuccess = true;\r\n          this.showEvalChange = true;\r\n          this.phase3.evalFailure = undefined;\r\n      } else {\r\n          this.phase3.evalSuccess = false;\r\n          this.showEvalChange = true;\r\n          this.phase3.ccrConfirmation = false;\r\n      }\r\n  }\r\n\r\n  onSelectConfirm(e) {\r\n      if (e.target.value === 'Confirm') {\r\n          this.phase3.ccrConfirmation = true;\r\n          const submitButton = document.getElementById('submit');\r\n          submitButton.classList.remove('disabled');\r\n          this.disableSubmitButton = true;\r\n      } else {\r\n          this.phase3.ccrConfirmation = false;\r\n          const submitButton = document.getElementById('submit');\r\n          submitButton.classList.remove('disabled');\r\n          this.disableSubmitButton = true;\r\n      }\r\n  }\r\n    public onCancel() {\r\n        swal({\r\n            title: 'Are you sure?',\r\n            text: \"You will lose all progress on this form\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Confirm',\r\n            cancelButtonText: 'Cancel',\r\n            confirmButtonColor: '#5bc0de',\r\n            cancelButtonColor: '#d9534f' ,\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.value) {\r\n\r\n            } else if (\r\n                result.dismiss === swal.DismissReason.cancel\r\n            ) {\r\n                swal({\r\n                    title: 'Cancelled',\r\n                    text: 'Your may continue to make changes',\r\n                    type: 'error',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n  onSubmit() {\r\n      swal({\r\n          title: 'Are you sure?',\r\n          text: 'You won\\'t be able make changes to your submission',\r\n          type: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Submit',\r\n          cancelButtonText: 'Cancel',\r\n          confirmButtonColor: '#5bc0de',\r\n          cancelButtonColor: '#d9534f' ,\r\n          reverseButtons: true\r\n      }).then((result) => { if (result.value) {\r\n          this.phase3Service.submitPhase3(this.phase3).subscribe( (data: Data) => {\r\n              if (data.success) {\r\n               console.log('we have post');\r\n                  if (this.phase3.additionalDocs) {\r\n                      this.populateForm();\r\n                      this.phase3Service.upload(this.formData).subscribe((data1: Data) => {\r\n                          if (data1.success) {\r\n                              this.phase3.documentIds = data.generatedName;\r\n                              console.log(this.phase3.documentIds);\r\n                              swal({\r\n                                  title: 'Received',\r\n                                  text: 'Your files have been received',\r\n                                  type: 'success',\r\n                                  showConfirmButton: false,\r\n                                  timer: 1500\r\n                              });\r\n                          } else {\r\n                              swal({\r\n                                  title: 'Files not uploaded',\r\n                                  text: data.message,\r\n                                  type: 'error',\r\n                                  showConfirmButton: false,\r\n                                  timer: 1500\r\n                              });\r\n                          }\r\n                      });\r\n                  }\r\n                  swal({\r\n                      title: 'Received',\r\n                      text: 'CCR Phase 3 submitted',\r\n                      type: 'success',\r\n                      showConfirmButton: false,\r\n                      timer: 1500\r\n                  });\r\n                  this.router.navigate(['home']);\r\n              }\r\n          });\r\n\r\n      } else if (\r\n          result.dismiss === swal.DismissReason.cancel\r\n      ) {\r\n          swal({\r\n              title: 'Cancelled',\r\n              text: 'Your may continue to make changes',\r\n              type: 'error',\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n          });\r\n      }\r\n      });\r\n  }\r\n\r\n  evalReasonCheck() {\r\n      if (this.phase3.evalFailure !== undefined) {\r\n          const submitButton = document.getElementById('submit');\r\n          submitButton.classList.remove('disabled');\r\n          this.disableSubmitButton = true;\r\n      }\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.phsae2service.getPageData().subscribe((data: Data) => {\r\n          this.availablePriorities = data[0];\r\n          this.availableImpacts = data[1];\r\n          this.availablePeriods = data[2];\r\n          this.availableNatureOfChange = data[3];\r\n          this.availableEosSystems = data[4];\r\n\r\n      });\r\n      this.phase2.CCR_ID                            = this.phase3Service.phaseData[1][0].phase1_ID ;\r\n      this.phase2.TCB_CRF_ID                        = this.phase3Service.phaseData[1][0].tcb_crf_ID;\r\n      this.phase2.requestPriority                   = this.phase3Service.phaseData[1][0].requestPriority_ID;\r\n      this.phase2.predictedImpact                   = this.phase3Service.phaseData[1][0].impactRisks_ID;\r\n      this.phase2.changePeriod                      = this.phase3Service.phaseData[1][0].changePeriod_ID;\r\n      this.phase2.temporaryPeriodStartDate          = this.phase3Service.phaseData[1][0].temporaryStartDate;\r\n      this.phase2.temporaryPeriodNumberOfDays       = this.phase3Service.phaseData[1][0].temporaryNoOfDays;\r\n      this.phase2.temporaryPeriodEndDate            = this.phase3Service.phaseData[1][0].temporaryEndDate;\r\n      this.phase2.natureOfChange                    = this.phase3Service.phaseData[1][0].natureChange_ID;\r\n      this.phase2.eosSystem                         = this.phase3Service.phaseData[1][0].eos_ID;\r\n      this.phase2.configurationItems                = this.phase3Service.phaseData[1][0].configurationDescr;\r\n      if (this.phase3Service.phaseData[1][0].changeTypeHW === '0') {\r\n          this.phase2.change.hardware                   = false;\r\n      } else {\r\n          this.phase2.change.hardware                   = true ;\r\n      }\r\n      if (this.phase3Service.phaseData[1][0].changeTypeSW === '0') {\r\n          this.phase2.change.software                   = false;\r\n      } else {\r\n          this.phase2.change.software                   = true ;\r\n      }\r\n      if (this.phase3Service.phaseData[1][0].changeTypeSW === '0') {\r\n          this.phase2.change.firmware                   = false;\r\n      } else {\r\n          this.phase2.change.firmware                   = true ;\r\n      }\r\n      this.phase2.estimatedImpacts.operations       = this.phase3Service.phaseData[1][0].impactOnOperations;\r\n      this.phase2.estimatedImpacts.clients          = this.phase3Service.phaseData[1][0].impactOnClients;\r\n      this.phase2.estimatedImpacts.technical        = this.phase3Service.phaseData[1][0].impactOnTech;\r\n      this.phase2.problemReportRaised               = this.phase3Service.phaseData[1][0].reportRaisedContractor;\r\n      this.phase2.problemReportRef                  = this.phase3Service.phaseData[1][0].contractor_report_ref;\r\n      this.phase2.changeSuccessfullyTested          = this.phase3Service.phaseData[1][0].pre_testSucces ;\r\n      this.phase2.changeNotSuccessfullyTestedReason = this.phase3Service.phaseData[1][0].reasonUnsuccesTest;\r\n      this.phase2.specialistComment                 = this.phase3Service.phaseData[1][0].specialist_comment;\r\n      this.phase2.proposedImplementationDate        = this.phase3Service.phaseData[1][0].proposed_implementation_date;\r\n      this.phase3.CCR_ID                            = this.phase3Service.phaseData[1][0].ID;\r\n      this.disableSubmitButton = false;\r\n      const submitButton = document.getElementById('submit');\r\n      submitButton.classList.add('disabled');\r\n\r\n      this.Token = this.phase3Service.getCSRFToken().subscribe( (data: Data) => {\r\n          this.phase3.CSRF_token = data.tokenValue ;\r\n      });\r\n\r\n\r\n      this.localObj = this.phase3Service.getObj();\r\n      if (this.localObj !== null) {\r\n          this.disableSubmitButton = true;\r\n          submitButton.classList.remove('disabled');\r\n          document.getElementById('cancel').classList.add('invisible');\r\n      }\r\n  }\r\n\r\n    public fileOver(event) {\r\n    }\r\n\r\n    public fileLeave(event) {\r\n    }\r\n\r\n    public dropped(files: NgxFileDropEntry[]) {\r\n        // this.files = files;\r\n        this.files.push(files);\r\n        for (const droppedFile of files) {\r\n\r\n            // Is it a file?\r\n            if (droppedFile.fileEntry.isFile) {\r\n                const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n                fileEntry.file((file: File) => {\r\n                    this.filesForUpload.push(file);\r\n                });\r\n            } else {\r\n                // It was a directory (empty directories are added, otherwise only files)\r\n                const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\r\n            }\r\n        }\r\n    }\r\n\r\n    private populateForm() {\r\n      for (let i = 0; i < this.filesForUpload.length; i++) {\r\n          this.formData.append('file[]', this.filesForUpload[i], this.filesForUpload[i].name);\r\n      }\r\n    }\r\n\r\n}\r\n\r\n// Created by Blaine Viljoen 28023374\r\n","module.exports = \"\\n\\n\\nhtml, body{\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  font-size: 150%;\\n  vertical-align: baseline;\\n}\\n\\nbody {\\n  line-height: 1;\\n}\\n\\n/* Basic */\\n\\nbody {\\n  height: 100%;\\n}\\n\\nbody.is-loading * {\\n  transition: none !important;\\n  -webkit-animation: none !important;\\n  animation: none !important;\\n}\\n\\nbody, input, select, textarea {\\n  color: #6e6e6e;\\n  /*font-family: 'Source Sans Pro', sans-serif;*/\\n  font-size: 16pt;\\n  font-weight: 400;\\n  line-height: 1.75em;\\n  width: 100%;\\n}\\n\\n/* Form */\\n\\nlabel {\\n  /*display: block;*/\\n  color: #5b5b5b;\\n  font-size: 0.8em;\\n  font-weight: 700;\\n  letter-spacing: 0.125em;\\n  line-height: 1.75em;\\n  /*text-transform: uppercase;*/\\n  margin: 0 0 0.5em 0;\\n}\\n\\n.ng-valid[required].ng-touched, .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form), .ng-invalid:not(form).ng-touched {\\n  border-left: 5px solid #a94442; /* red */\\n}\\n\\n.registrationForm .form-group input.true{\\n  border-left: 5px solid #42A948;\\n}\\n\\n.registrationForm .form-group input.false{\\n  border-left: 5px solid #a94442;\\n}\\n\\n@media screen and (max-width: 1030px){\\n  .registrationForm {\\n    margin-right: 2% !important;\\n    margin-left: 2% !important;\\n  }\\n}\\n\\n/* 100% Image Width on Smaller Screens */\\n\\n@media only screen and (max-width: 700px) {\\n  .modal-content {\\n    width: 100%;\\n  }\\n}\\n\\n.registrationForm {\\n  display: flex;\\n  flex-direction: column;\\n  /*margin-right: 25%;*/\\n  /*margin-left:25%;*/\\n}\\n\\n.registrationForm > * {\\n  width: 100%;\\n}\\n\\n/* Main */\\n\\n#main {\\n  padding: 6em 0 5em 0;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n#main:before {\\n  background: rgba(224, 224, 224, 0.75);\\n  content: '';\\n  height: 100%;\\n  left: 50%;\\n  position: absolute;\\n  top: 0;\\n  width: 1px;\\n  z-index: -1;\\n}\\n\\n#main header.major,\\n#main footer.major {\\n  background: #ffffff;\\n}\\n\\n@media screen and (max-width: 1680px) {\\n\\n  /* Basic */\\n  body, input, select, textarea {\\n    font-size: 14pt;\\n  }\\n}\\n\\n/* Normal */\\n\\n@media screen and (max-width: 1280px) {\\n\\n  /* Basic */\\n  body, input, select, textarea {\\n    font-size: 13pt;\\n  }\\n}\\n\\n\\n\\n\\n\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\n<!-- Student number: 27455211-->\\n<div class=\\\"card mx-auto\\\" style=\\\"width: 60rem;\\\">\\n\\n    <h5 class=\\\"card-header info-color white-text text-center py-4\\\">\\n        <strong>Register</strong>\\n    </h5>\\n\\n<div class=\\\"card-body px-lg-5 pt-3\\\">\\n  <form class=\\\"registrationForm\\\" >\\n\\n    <div class=\\\"form-group\\\" style=\\\"color: #757575;\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label for=\\\"title\\\">Title</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <select\\n                        ngbPopover=\\\"Select a title by selecting an option from the drop down list\\\"\\n                        triggers=\\\"mouseenter:mouseleave\\\"\\n                        placement=\\\"bottom-right\\\"\\n                        popoverTitle=\\\"SELECT TITLE\\\"\\n                        class=\\\"px-3 rounded form-control\\\"\\n                        name=\\\"title\\\"\\n                        id=\\\"title\\\"\\n                        (change)=\\\"onSelectTitle($event)\\\"\\n                        [(ngModel)]=\\\"this.User.title\\\"\\n                >\\n                    <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\n                    <option *ngFor=\\\"let title of availableTitles\\\"  [value]=\\\"title[0]\\\" >{{title[1]}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label for=\\\"site\\\">Site</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <select\\n                        ngbPopover=\\\"Select a site by selecting an option from the drop down list\\\"\\n                        triggers=\\\"mouseenter:mouseleave\\\"\\n                        placement=\\\"bottom-right\\\"\\n                        popoverTitle=\\\"SELECT SITE\\\"\\n                        class=\\\"px-3 rounded form-control\\\"\\n                        [(ngModel)]=\\\"this.User.site\\\"\\n                        name=\\\"site\\\"\\n                        id=\\\"site\\\"\\n                        (change)=\\\"onSelectTitle($event)\\\"\\n                >\\n                    <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\n                    <option *ngFor=\\\"let site of availableSites\\\" [value]=\\\"site[0]\\\">{{site[1]}}</option>\\n                </select>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\" >\\n      <label for=\\\"name\\\">Name</label>\\n      <input\\n              ngbPopover=\\\"Please enter your first name\\\"\\n              triggers=\\\"mouseenter:mouseleave\\\"\\n              placement=\\\"bottom-right\\\"\\n              popoverTitle=\\\"INPUT FIRST NAME\\\"\\n              required class=\\\"form-control\\\" [(ngModel)]=\\\"User.name\\\"\\n              type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"surname\\\">Surname</label>\\n      <input\\n              ngbPopover=\\\"Please enter your surname\\\"\\n              triggers=\\\"mouseenter:mouseleave\\\"\\n              placement=\\\"bottom-right\\\"\\n              popoverTitle=\\\"INPUT SURNAME\\\"\\n              required class=\\\"form-control\\\" [(ngModel)]=\\\"User.surname\\\"\\n              type=\\\"text\\\" name=\\\"surname\\\" id=\\\"surname\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"employeeID\\\">Employee ID</label>\\n      <input\\n              ngbPopover=\\\"Please enter your employee ID\\\"\\n              triggers=\\\"mouseenter:mouseleave\\\"\\n              placement=\\\"bottom-right\\\"\\n              popoverTitle=\\\"INPUT EMPLOYEE ID\\\"\\n              class=\\\"form-control\\\" (input)=\\\"validateEmpId(User.employeeId)\\\"\\n              [ngClass]=\\\"{'true': this.showEmpId, 'false':!this.showEmpId}\\\"\\n              [(ngModel)]=\\\"User.employeeId\\\"\\n              type=\\\"number\\\" name='EmployeeId' id=\\\"employeeID\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Contact Number</label>\\n      <label *ngIf=\\\"this.showPhone == false\\\" style=\\\"color: red\\\">Invalid South African Number</label>\\n      <label *ngIf=\\\"this.showPhone == true\\\" style=\\\"color: green\\\">Valid South African Number </label>\\n      <input\\n              ngbPopover=\\\"Please enter your phone number\\\"\\n              triggers=\\\"mouseenter:mouseleave\\\"\\n              placement=\\\"bottom-right\\\"\\n              popoverTitle=\\\"INPUT PHONE NUMBER\\\"\\n              (input)=\\\"validatePhoneNumber(this.User.contactNumber)\\\"\\n              class=\\\"form-control\\\" [ngClass]=\\\"{'true': this.showPhone, 'false': !this.showPhone}\\\"\\n              [(ngModel)]=\\\"this.User.contactNumber\\\"\\n              type=\\\"text\\\"\\n              name=\\\"contactNum\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <label *ngIf=\\\"this.showEmail == false\\\" style=\\\"color: red\\\">Invalid</label>\\n      <label *ngIf=\\\"this.showEmail == true\\\" style=\\\"color: green\\\">Valid\\n      </label>\\n      <input\\n              ngbPopover=\\\"Please enter the username of your email before the @\\\"\\n              triggers=\\\"mouseenter:mouseleave\\\"\\n              placement=\\\"bottom-right\\\"\\n              popoverTitle=\\\"INPUT USERNAME\\\"\\n              (input)=\\\"validateEmail(User.email)\\\" class=\\\"form-control\\\"\\n             [ngClass]=\\\"{'true': this.showEmail, 'false': !this.showEmail}\\\"\\n             id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]= User.email type=\\\"email\\\"\\n             required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input ngbPopover=\\\"Password must be at least 8 characters in length containing  1 Uppercase, 1 Lowercase and 1 special character\\\"\\n             triggers=\\\"mouseenter:mouseleave\\\"\\n             placement=\\\"bottom-right\\\"\\n             popoverTitle=\\\"INPUT PASSWORD\\\"\\n             (input)=\\\"validatePassword(password)\\\"\\n             [ngClass]=\\\"{'true': this.showPassword, 'false': !this.showPassword}\\\"\\n             class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" required>\\n      <password-strength-meter [password]=\\\"password\\\"\\n                               class=\\\"form-control\\\" id=\\\"passwordStrengthMeter\\\" name=\\\"passwordStrengthMeter\\\" >\\n      </password-strength-meter>\\n      <label for=\\\"passwordCheck\\\">Confirm Password</label>\\n      <input\\n              ngbPopover=\\\"Re-Enter your password\\\"\\n              triggers=\\\"mouseenter:mouseleave\\\"\\n              placement=\\\"bottom-right\\\"\\n              popoverTitle=\\\"INPUT PASSWORD AGAIN\\\"\\n              (input)=\\\"confirmPassword(passwordCheck)\\\"\\n             [ngClass]=\\\"{'true': this.showPasswordCheck, 'false': !this.showPasswordCheck}\\\"\\n             class=\\\"form-control\\\" id=\\\"passwordCheck\\\" name=\\\"passwordCheck\\\" [(ngModel)]=\\\"passwordCheck\\\" type=\\\"password\\\">\\n\\n    </div>\\n<!--    <div class=\\\"form-group\\\">-->\\n<!--      <label for=\\\"permissionLevel\\\">Permission Level</label>-->\\n<!--      <select title=\\\"Select your relevant Permission level\\\" required  (change)=\\\"onSelectPermission($event.target.value)\\\"-->\\n<!--              name=\\\"permissionLevel\\\" id=\\\"permissionLevel\\\">-->\\n<!--        <option *ngFor=\\\"let permission of availablePermissions\\\">{{permission}}</option>-->\\n<!--      </select>-->\\n<!--    </div>-->\\n<!--    <div class=\\\"form-group\\\">-->\\n<!--      <label for=\\\"region\\\">Region</label>-->\\n<!--      <select title=\\\"Select your relevant region\\\" (change)=\\\"onSelectRegion($event.target.value)\\\" name=\\\"region\\\" id=\\\"region\\\">-->\\n<!--        <option *ngFor=\\\"let region of availableRegions\\\">{{region}}</option>-->\\n<!--      </select>-->\\n<!--    </div>-->\\n\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label>Submit</label>-->\\n      <!--<textarea rows=\\\"4\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email.description\\\"-->\\n                <!--type=\\\"text\\\" name=\\\"enquiry\\\"></textarea>-->\\n    <!--</div>-->\\n\\n    <br>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col\\\"></div>\\n              <div class=\\\"col\\\">\\n                  <button\\n                          type=\\\"submit\\\"\\n                          value=\\\"Register\\\"\\n                          class=\\\"btn btn-outline-danger btn-rounded w-100  my-4  waves-effect z-depth-0\\\"\\n                          (click)=\\\"onCancel()\\\"\\n                  >Cancel</button>\\n              </div>\\n              <div class=\\\"col\\\"></div>\\n              <div class=\\\"col\\\">\\n                  <button\\n                          type=\\\"submit\\\"\\n                          value=\\\"Register\\\"\\n                          id=\\\"submit\\\"\\n                          class=\\\"btn btn-outline-info btn-rounded w-100 my-4  waves-effect z-depth-0 disabled\\\"\\n                          [disabled]=\\\"!this.showRegisterButton\\\"\\n                          (click)=\\\"onRegister()\\\"\\n                  >Register</button>\\n              </div>\\n\\n              <div class=\\\"col\\\"></div>\\n          </div>\\n  </form>\\n</div>\\n</div>\\n\"","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Component, OnInit } from '@angular/core';\nimport {Data, Router} from '@angular/router'; // Router import\nimport {User} from '../../models/User'; // interface import\nimport swal from 'sweetalert2'; // Sweet Alerts import\nimport {RegistrationService} from '../../services/registration.service';\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  // Boolean values for input validation\n  private Token = null ;\n  showEmail: Boolean;\n  showPassword: Boolean;\n  showPasswordCheck: Boolean;\n  showRegisterButton: Boolean;\n  showPhone: Boolean;\n  showEmpId: Boolean;\n\n  // Password variables to validate password integrity\n  password: string;\n  passwordCheck: string;\n\n  // Login object created from interface\n  User: User = {\n    title: undefined,\n    surname: undefined,\n    name: undefined,\n    employeeId: undefined ,\n    email: undefined,\n    contactNumber: undefined,\n    site: undefined,\n    password: undefined ,\n  };\n\n  availableTitles: String [] = ['Mr' , 'Ms' , 'Regional manager'];\n  availablePermissions: String [] = ['Specialist', 'Manager' , 'Employee']; // to be delegated to database\n  availableRegions: String [] = ['Northern', 'Southern', 'Both']; // to be delegated to database\n  availableSites: String [] = ['Site1' , 'Site2', 'Site3']; // to be delegated to database\n  constructor( private router: Router , private registration: RegistrationService) { }\n\n  onSelectTitle($event) {\n    if (!(this.User.title === undefined) &&\n        !(this.User.site === undefined) &&\n        !(this.User.email === undefined) &&\n        !(this.User.employeeId === undefined) &&\n        !(this.User.contactNumber === undefined) &&\n        !(this.User.name === undefined) &&\n        !(this.User.surname === undefined) &&\n        !(this.password === undefined)\n    ) {\n      this.showRegisterButton = true;\n    }\n  }\n  onSelectSite($event) {\n    if (!(this.User.title === undefined) &&\n        !(this.User.site === undefined) &&\n        !(this.User.email === undefined) &&\n        !(this.User.employeeId === undefined) &&\n        !(this.User.contactNumber === undefined) &&\n        !(this.User.name === undefined) &&\n        !(this.User.surname === undefined) &&\n        !(this.password === undefined)\n    ) {\n      this.showRegisterButton = true;\n    }\n  }\n  // Validates email input\n  validateEmail(email: string) {\n  // const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const re = /[!@#$%^&*(),.?\"'~`:;{}|<>_+=[ ]/g;\n    if (re.test(String(email).toLowerCase()) === true) {\n    this.showEmail = false;\n  } else {\n    this.showEmail = true;\n  }\n  }\n\n\n  // Validates password on input\n  validatePassword(value: string) {\n    const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.@#\\$%\\^&\\*])(?=.{8,})/;\n    if (re.test(String(value)) === true) {\n      this.showPassword = true;\n    } else {\n      this.showPassword = false;\n    }\n  }\n  // Validates phone number on input\n  validatePhoneNumber(phone: string) {\n    const re = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    if (re.test(phone)) {\n      this.showPhone = true;\n    } else {\n      this.showPhone = false;\n    }\n  }\n  // Confirms the password is correctly chosen\n  confirmPassword(value: string) {\nif (this.password === value) {\n    const registerButton = document.getElementById('submit');\n    registerButton.classList.remove('disabled');\n  this.showPasswordCheck = true;\n  if (!(this.User.title === undefined) &&\n      !(this.User.site === undefined) &&\n      !(this.User.email === undefined) &&\n      !(this.User.employeeId === undefined) &&\n      !(this.User.contactNumber === undefined) &&\n      !(this.User.name === undefined) &&\n      !(this.User.surname === undefined) &&\n      !(this.password === undefined) &&\n      (this.showEmail === true) &&\n      (this.showEmpId === true) &&\n      (this.showPassword === true) &&\n      (this.showPhone === true)\n  ) {\n    this.showRegisterButton = true;\n  }\n} else {\n  this.showPasswordCheck = false;\n  this.showRegisterButton = false;\n}\n  }\n  // Validates that employee ID is of 4 character length\n  validateEmpId(employeeId: number) {\n    if (employeeId.toString().length === 4 ) {\n      this.showEmpId = true;\n    } else {\n      this.showEmpId = false;\n    }\n  }\n  onCancel() {\n    this.router.navigate(['login']);\n  }\n  // Called on register button click this is where the data is stored in the database and the password is hashed and stored in the login object\n  onRegister() {\n    if (this.showRegisterButton === true) {\n      // const hash = crypto.MD5(this.passwordCheck);\n      this.User.password = this.passwordCheck;\n      console.log(this.User);\n      this.registration.registerUser(this.User , this.Token).subscribe((data: Data) => {\n        if (data.success) {\n          swal('Success!', data.message, 'success');\n          this.router.navigate(['login']);\n        } else {\n          this.registration.getCSRFToken().subscribe( (data1: Data) => {\n            this.Token = data1.tokenValue ;\n          });\n          swal('Failure', data.message, 'error');\n        }\n      });\n    } else {\n      swal('Failure', 'Please complete the registration form', 'error');\n    }\n  }\n  ngOnInit() {\n     this.registration.getCSRFToken().subscribe( (data: Data) => {\n       this.Token = data.tokenValue ;\n     });\n    this.registration.getPageData().subscribe((data: Data) => {\n      this.availableSites = data[0];\n      this.availableTitles = data[1];\n\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  rfcsignoff works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rfcsignoff',\n  templateUrl: './rfcsignoff.component.html',\n  styleUrls: ['./rfcsignoff.component.css']\n})\nexport class RFCsignoffComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// Created by Blaine Viljoen\r\nimport { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class MyRfcsService{\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCSRFToken() {\r\n        return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\r\n    }\r\n\r\n    getPageData(userIDInput) {\r\n        const obj = {\r\n            dataSelection: 'myRfcs',\r\n            userID: userIDInput\r\n        };\r\n        return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\r\n    }\r\n\r\n    getFiles(){\r\n        const obj = {\r\n            fileSelection: 'images'\r\n        };\r\n        return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/retrieveFiles.php', obj, httpOptions);\r\n    }\r\n}\r\n// Created by Blaine Viljoen\r\n","// Created by Blaine Viljoen\r\nimport { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AdminDashboardService{\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCSRFToken() {\r\n        return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\r\n    }\r\n\r\n    getSpecialistData() {\r\n        const obj = {\r\n            dataSelection: 'specialist'\r\n        };\r\n        return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\r\n    }\r\n\r\n    getPageData() {\r\n        const obj = {\r\n            dataSelection: 'allCCR'\r\n        };\r\n        return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php', obj, httpOptions);\r\n    }\r\n\r\n    setNewSpecialist(id, specID) {\r\n        const obj = {\r\n            updateSelection: 'specialist',\r\n            ID: id,\r\n            specialist: specID\r\n        };\r\n        return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/updateData.php', obj, httpOptions);\r\n    }\r\n}\r\n// Created by Blaine Viljoen\r\n","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  isSidebarPinned = false;\n  isSidebarToggeled = false;\n\n  constructor() { }\n\n  toggleSidebar() {\n    this.isSidebarToggeled = ! this.isSidebarToggeled;\n  }\n\n  toggleSidebarPin() {\n    this.isSidebarPinned = ! this.isSidebarPinned;\n  }\n\n  getSidebarStat() {\n    return {\n      isSidebarPinned: this.isSidebarPinned,\n      isSidebarToggeled: this.isSidebarToggeled\n    };\n  }\n}\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map  } from 'rxjs/operators';\r\nimport {CookieService} from 'ngx-cookie-service';\r\n\r\n@Injectable()\r\nexport class CcrHttpInterceptor implements HttpInterceptor {\r\n    constructor( private cookieService: CookieService) {}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const Authorization = this.cookieService.get('jwt');\r\n        if (Authorization) {\r\n            req = req.clone({ headers: req.headers.set('Authorization', Authorization) });\r\n        }\r\n\r\n        req = req.clone({ headers: req.headers.set('Accept', 'application/json') });\r\n\r\n        return next.handle(req).pipe(\r\n            map((event: HttpEvent<any>) => {\r\n                 // req.headers.append('Authorization', 'Bearer ' + Authorization);\r\n                if (event instanceof HttpResponse) {\r\n                }\r\n                return event;\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'}),\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentCcrsService {\n\n  constructor(private http: HttpClient) {\n  }\n  getCSRFToken() {\n    return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\n  }\n  getMyCCRs() {\n    const obj = {\n      dataSelection: 'currentRfcs'\n    };\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\n  }\n}\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport {Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' }),\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OathService {\r\n  private loggedInStatus = false;\r\n  constructor(private http: HttpClient ) { }\r\n\r\n  get isLoggedIn() {\r\nreturn this.loggedInStatus;\r\n  }\r\n\r\n  setLoggedIn(value: boolean ) {\r\n    this.loggedInStatus = value;\r\n  }\r\n\r\n  getUserDetails(username , password , CSRF_token) {\r\n    const obj = {\r\n      username : username ,\r\n      password: password ,\r\n      CSRF_token: CSRF_token\r\n    };\r\n    return this.http.post( 'http://localhost/ATNSCCR_PHP/backend/api2/login.php', obj , httpOptions); ;\r\n  }\r\n\r\n  getCSRFToken() {\r\n    return  this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\r\n  }\r\n\r\n\r\n}\r\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {RFC} from '../models/RFC';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Phase1Service {\r\n\r\n  private obj = null;\r\n  private siteID = 0;\r\n  constructor(private http: HttpClient ) {\r\n  }\r\n\r\n  submitRequest(phase1: RFC ) {\r\n\r\n     return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/initiateRequest.php', phase1 , httpOptions);\r\n  }\r\n\r\n  updateRequest(phase1: RFC, ccrID) {\r\n    const obj = {phase1: phase1, updateSelection: 'phase1', ID: ccrID};\r\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/updateData.php', obj, httpOptions);\r\n  }\r\n\r\n  getPageData() {\r\n    const obj = {\r\n      dataSelection: 'initiateCCR'\r\n    };\r\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\r\n\r\n  }\r\n  getCSRFToken() {\r\n    return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\r\n  }\r\n\r\n  setobj(obj, siteID) {\r\n    this.obj = obj;\r\n    this.siteID = siteID;\r\n  }\r\n\r\n  getobj() {\r\n    return this.obj;\r\n  }\r\n\r\n  getSite() {\r\n    return this.siteID;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {CCRPhase2} from '../models/CCR-Phase2';\r\nimport {RFC} from '../models/RFC';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'}),\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Phase2Service {\r\n\r\n  private obj = null;\r\n  private phase1 = null;\r\n  private user = null;\r\n\r\n  constructor(private http: HttpClient ) { }\r\n\r\n  getCSRFToken() {\r\n    return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\r\n  }\r\n  getPageData() {\r\n    const obj = {\r\n      dataSelection: 'phase2'\r\n    };\r\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\r\n  }\r\n\r\n  getEOSTCBNumber(eos_ID) {\r\n    const obj = {\r\n      dataSelection: 'eosTCB',\r\n      eos_ID: eos_ID\r\n    };\r\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\r\n  }\r\n  upload(formData: FormData) {\r\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/files.php' , formData);\r\n  }\r\n\r\n  submitPhase2(phase2: CCRPhase2 ) {\r\n    console.log(phase2);\r\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/specialistConfiguration.php' , phase2 , httpOptions);\r\n  }\r\n\r\n  updatePhase2(phase2: CCRPhase2, ccrID) {\r\n    const obj = {phase2: phase2, updateSelection: 'phase2', ID: ccrID};\r\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/updateData.php', obj, httpOptions);\r\n  }\r\n\r\n  setObj(obj, phase1, user) {\r\n    this.obj = obj;\r\n    this.phase1 = phase1;\r\n    this.user = user;\r\n  }\r\n\r\n  getObj() {\r\n    return this.obj;\r\n  }\r\n\r\n  getPhase1() {\r\n    return this.phase1;\r\n  }\r\n\r\n  getUser() {\r\n    return this.user;\r\n  }\r\n  getUserByID(user_ID) {\r\n    const obj = {\r\n      dataSelection: 'user' ,\r\n      user_ID: user_ID\r\n    };\r\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {CCRPhase3} from '../models/CCR-Phase3';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json'}),\r\n};\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class Phase3Service {\r\n\r\n    private obj = null;\r\n    public phaseData = null;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCSRFToken() {\r\n        return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\r\n    }\r\n\r\n\r\n    upload(formData: FormData) {\r\n        return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/files.php' , formData  );\r\n    }\r\n\r\n    submitPhase3(phase3: CCRPhase3 ) {\r\n        return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/specialistImplementation.php' , phase3 , httpOptions);\r\n    }\r\n\r\n    setObj(obj) {\r\n        this.obj = obj;\r\n    }\r\n\r\n    getObj() {\r\n        return this.obj;\r\n    }\r\n    setphases(phaseData) {\r\n        this.phaseData = phaseData ;\r\n        console.log(this.phaseData);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {User} from '../models/User';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  registerUser(user: User , token) {\n    const obj = {\n      title: user.title,\n      surname: user.surname,\n      name: user.name,\n      employee_ID: user.employeeId ,\n      username : user.email,\n      contactNum: user.contactNumber,\n      site: user.site,\n      password: user.password,\n      CSRF_token : token\n    };\n\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/register.php', obj, httpOptions);\n  }\n  getCSRFToken() {\n    return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\n  }\n  getPageData() {\n    const obj = {\n      dataSelection: 'registration'\n    };\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\n  }\n}\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport decode from 'jwt-decode';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteAuthorisationService {\r\n\r\n  constructor( private cookieService: CookieService) {}\r\n\r\n  isAuthorized(allowedPermission: string): boolean {\r\n    // check if the list of allowed roles is empty, if empty, authorize the user to access the page\r\n    if (allowedPermission == null || allowedPermission.length === 0) {\r\n      return true;\r\n    }\r\n    // get token from cookie or state management\r\n    const token = this.cookieService.get('jwt');\r\n    // decode token to read the payload details\r\n    const decodeToken = decode(token);\r\n    // check if it was decoded successfully, if not the token is not valid, deny access\r\n    if (!decodeToken) {\r\n      console.log('Invalid token');\r\n      return false;\r\n    }\r\n    // check if the user roles is in the list of allowed roles, return true if allowed and false if not allowed\r\n    return decodeToken.data.permissions.includes(allowedPermission);\r\n  }\r\n}\r\n","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' }),\n};\ninterface isLoggedIn {\n  status: boolean;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private  http: HttpClient) { }\n\n  isLoggedIn(): Observable<isLoggedIn> {\n\n    return this.http.post<isLoggedIn>('http://localhost/ATNSCCR_PHP/backend/api2/isloggedin.php', httpOptions );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}