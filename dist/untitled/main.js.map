{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/route.guard.ts","webpack:///./src/app/models/app-routing.module.ts","webpack:///./src/app/pages/current-rfcs/current-rfcs.component.css","webpack:///./src/app/pages/current-rfcs/current-rfcs.component.html","webpack:///./src/app/pages/current-rfcs/current-rfcs.component.ts","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/login/login.component.css","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/my-rfcs/my-rfcs.component.html","webpack:///./src/app/pages/my-rfcs/my-rfcs.component.scss","webpack:///./src/app/pages/my-rfcs/my-rfcs.component.ts","webpack:///./src/app/pages/phase1/phase1.component.css","webpack:///./src/app/pages/phase1/phase1.component.html","webpack:///./src/app/pages/phase1/phase1.component.ts","webpack:///./src/app/pages/phase2/phase2.component.css","webpack:///./src/app/pages/phase2/phase2.component.html","webpack:///./src/app/pages/phase2/phase2.component.ts","webpack:///./src/app/pages/phase3/phase3.component.css","webpack:///./src/app/pages/phase3/phase3.component.html","webpack:///./src/app/pages/phase3/phase3.component.ts","webpack:///./src/app/pages/registration/registration.component.css","webpack:///./src/app/pages/registration/registration.component.html","webpack:///./src/app/pages/registration/registration.component.ts","webpack:///./src/app/pages/rfcsignoff/rfcsignoff.component.css","webpack:///./src/app/pages/rfcsignoff/rfcsignoff.component.html","webpack:///./src/app/pages/rfcsignoff/rfcsignoff.component.ts","webpack:///./src/app/services/app.service.ts","webpack:///./src/app/services/ccr-http-interceptor.ts","webpack:///./src/app/services/currentRfcs.service.ts","webpack:///./src/app/services/oath.service.ts","webpack:///./src/app/services/phase1.service.ts","webpack:///./src/app/services/phase2.service.ts","webpack:///./src/app/services/phase3.service.ts","webpack:///./src/app/services/registration.service.ts","webpack:///./src/app/services/route-authorisation.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper default-theme\\\" >\\n  <main>\\n    <div class=\\\"pages container-fluid pt-4 pr-4 \\\">\\n      <router-outlet></router-outlet>\\n      <hr>\\n    </div>\\n  </main>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ATNSrfc';\n  constructor() {}\n}\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// imports for bootstrap forms\r\nimport { HttpClientModule , HTTP_INTERCEPTORS  } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PasswordStrengthMeterModule } from 'angular-password-strength-meter';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\r\n// ngx imports\r\nimport { BsDatepickerModule } from 'ngx-bootstrap';\r\nimport { NgxFileDropModule } from 'ngx-file-drop';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { SelectDropDownModule } from 'ngx-select-dropdown';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\n// Application components\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegistrationComponent } from './pages/registration/registration.component';\r\nimport { MyRFCSComponent } from './pages/my-rfcs/my-rfcs.component';\r\nimport { CurrentRFCSComponent } from './pages/current-rfcs/current-rfcs.component';\r\nimport { Phase1Component } from './pages/phase1/phase1.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { RFCsignoffComponent } from './pages/rfcsignoff/rfcsignoff.component';\r\nimport { Phase2Component } from './pages/phase2/phase2.component';\r\nimport { Phase3Component } from './pages/phase3/phase3.component';\r\n// Routing guards, module and auth service\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { RouteGuard } from './guards/route.guard';\r\nimport { AppRoutingModule } from './models/app-routing.module';\r\nimport { RouteAuthorisationService } from './services/route-authorisation.service';\r\nimport { CcrHttpInterceptor } from './services/ccr-http-interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegistrationComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    SidebarComponent,\r\n    MyRFCSComponent,\r\n    Phase1Component,\r\n    HomeComponent,\r\n    CurrentRFCSComponent,\r\n    RFCsignoffComponent,\r\n    Phase2Component,\r\n    Phase3Component,\r\n\r\n  ],\r\n\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        SweetAlert2Module.forRoot(),\r\n        PasswordStrengthMeterModule,\r\n        CollapseModule.forRoot(),\r\n        AppRoutingModule,\r\n        CommonModule,\r\n        BsDatepickerModule.forRoot(),\r\n        NgxFileDropModule,\r\n        NgbPopoverModule,\r\n        SelectDropDownModule,\r\n    ],\r\n  providers: [AuthGuard , CookieService , RouteAuthorisationService , RouteGuard,\r\n      { provide: HTTP_INTERCEPTORS, useClass: CcrHttpInterceptor, multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule {\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\n<!-- Student number: 27455211-->\\n<nav class=\\\"navbar navbar-expand-md fixed-top navbar-dark bg-dark flex-fill\\\" >\\n  <!-- sidebar toggler -->\\n  <!-- <button class=\\\"sidebar-toggler ml-4\\\" type=\\\"button\\\">\\n    <i class=\\\"fa fa-navicon\\\"></i>\\n  </button> -->\\n  <div class=\\\"sidebar-toggler ml-4\\\">\\n    <a class=\\\"btn nav-link\\\" (click)=\\\"toggleSidebar()\\\"><i class=\\\"fa fa-navicon\\\"></i></a>\\n  </div>\\n  <!-- header -->\\n  <div class=\\\"navbar-header pl-2 pr-2 text-center\\\">\\n    <a class=\\\"navbar-brand m-0 text-uppercase w-100\\\" href=\\\"#\\\">\\n      <!-- <i class=\\\"fa fa-flash mr-1\\\"></i> -->\\n      <span class=\\\"ml-1\\\">ATNS CCR System</span>\\n    </a>\\n  </div>\\n  <!-- left box -->\\n  <ul class=\\\"navbar-nav flex-fill mt-1 align-items-center left-nav\\\">\\n    <li class=\\\"nav-item navicon\\\">\\n      <a class=\\\"btn nav-link\\\" (click)=\\\"toggleSidebarPin()\\\"><i class=\\\"fa fa-navicon\\\"></i></a>\\n    </li>\\n<!--    <li class=\\\"nav-item flex-fill\\\">-->\\n<!--      <input class=\\\"form-control navbar-search\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">-->\\n<!--    </li>-->\\n  </ul>\\n  <!-- right menu toggler -->\\n<!--  <div class=\\\"nav-toggler-right mr-4 d-md-none\\\">-->\\n<!--    <button class=\\\"\\\" type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseBasic\\\">-->\\n<!--      &lt;!&ndash; <span class=\\\"navbar-toggler-icon\\\"></span> &ndash;&gt;-->\\n<!--      <img src=\\\"../../../assets/images/user.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">-->\\n<!--    </button>-->\\n<!--    <span class=\\\"nav-alert bg-danger\\\"></span>-->\\n<!--  </div>-->\\n  <!-- right menu -->\\n  <div class=\\\"collapse navbar-collapse right-nav\\\" id=\\\"collapseBasic\\\" [collapse]=\\\"isCollapsed\\\">\\n    <ul class=\\\"navbar-nav \\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn nav-link\\\">\\n          <i class=\\\"fa fa-bell-o\\\"></i>\\n          <span class=\\\"link-text\\\">Alerts</span>\\n          <!-- <span class=\\\"badge badge-pill ba dge-danger\\\">3</span> -->\\n          <span class=\\\"nav-alert bg-danger\\\"></span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn nav-link\\\">\\n          <i class=\\\"fa fa-envelope-o\\\"></i>\\n          <span class=\\\"link-text\\\">Messages</span>\\n          <!-- <span class=\\\"badge badge-pill badge-success\\\">5</span> -->\\n          <span class=\\\"nav-alert bg-success\\\"></span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn nav-link\\\">\\n          <i class=\\\"fa fa-user-o\\\"></i>\\n          <span class=\\\"link-text\\\">Profile</span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn nav-link\\\">\\n          <i class=\\\"fa fa-gears\\\"></i>\\n          <span class=\\\"link-text\\\">Setting</span>\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n\\n\\n</nav>\\n\"","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { AppService } from './../../services/app.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  constructor(private appService: AppService) { }\n  isCollapsed = true;\n  ngOnInit() {\n  }\n\n  toggleSidebarPin() {\n    this.appService.toggleSidebarPin();\n  }\n  toggleSidebar() {\n    this.appService.toggleSidebar();\n  }\n}\n\n","module.exports = \"\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\r\\n<!-- Student number: 27455211-->\\r\\n<aside class=\\\"sidebar shadow\\\">\\r\\n  <div class=\\\"sidebar-profile d-flex flex-column justify-content-center pt-5 pb-3\\\">\\r\\n<!--    <div class=\\\"picture-wrapper mb-3\\\">-->\\r\\n<!--      <div class=\\\"logo-container m-auto\\\">-->\\r\\n<!--        <img src=\\\"../../../assets/images/atns_logo.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">-->\\r\\n<!--      </div>-->\\r\\n<!--    </div>-->\\r\\n    <div class=\\\"profile-details text-center pb-4\\\">\\r\\n      <p class=\\\"mb-0 text-uppercase name\\\">{{this.username}}</p>\\r\\n      <small class=\\\"text-uppercase role\\\">{{this.roles}}</small>\\r\\n    </div>\\r\\n  </div>\\r\\n  <nav class=\\\"sidebar-menu pt-3 pb-3\\\">\\r\\n    <ul>\\r\\n      <li class=\\\"active\\\">\\r\\n        <a  routerLink=\\\"/home/createRFC\\\" routerLinkActive=\\\"active\\\">\\r\\n          <i class=\\\"fa fa-pencil\\\"></i>\\r\\n          <span>Initiate CCR</span>\\r\\n          <span class=\\\"badge badge-danger rounded-0 ml-auto text-light\\\">New</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"active\\\">\\r\\n        <a  routerLink=\\\"/home/myRFCS\\\" routerLinkActive=\\\"active\\\" >\\r\\n          <i class=\\\"fa fa-archive\\\"></i>\\r\\n          <span>My CCR'S</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li>\\r\\n        <a href=\\\"#\\\" routerLink=\\\"/home/phase2\\\">\\r\\n          <i class=\\\"fa fa-table\\\"></i>\\r\\n          <span>Tables</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li>\\r\\n        <a href=\\\"#\\\" routerLink=\\\"/home/phase3\\\">\\r\\n          <i class=\\\"fa fa-align-center\\\"></i>\\r\\n          <span>Phase3</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li>\\r\\n        <!--<a href=\\\"#\\\" routerLink=\\\"/maps\\\">-->\\r\\n          <!--<i class=\\\"fa fa-globe\\\"></i>-->\\r\\n          <!--<span>Maps</span>-->\\r\\n        <!--</a>-->\\r\\n      <!--</li>-->\\r\\n      <!--<li>-->\\r\\n        <!--<a href=\\\"#\\\" routerLink=\\\"/notifications\\\">-->\\r\\n          <!--<i class=\\\"fa fa-bell-o\\\"></i>-->\\r\\n          <!--<span>Notifications</span>-->\\r\\n        <!--</a>-->\\r\\n      <!--</li>-->\\r\\n    </ul>\\r\\n  </nav>\\r\\n  <nav class=\\\"sidebar-menu pt-3 pb-3\\\">\\r\\n    <ul>\\r\\n      <li class=\\\"active\\\">\\r\\n        <a  routerLink=\\\"/home/currentrfcs\\\" routerLinkActive=\\\"active\\\">\\r\\n          <i class=\\\"fa fa-eye\\\"></i>\\r\\n          <span>CCR's Dashboard</span>\\r\\n          <!--<span class=\\\"badge badge-danger rounded-0 ml-auto text-light\\\">New</span>-->\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"active\\\">\\r\\n        <a  routerLink=\\\"/home/rfcsignoff\\\" routerLinkActive=\\\"active\\\">\\r\\n          <i class=\\\"fa fa-leaf\\\"></i>\\r\\n          <span>CCR Sign Off</span>\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n</aside>\\r\\n\"","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport decode from 'jwt-decode';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  private username ;\r\n  private roles = '' ;\r\n  constructor(private cookieService: CookieService) { }\r\n\r\n  ngOnInit() {\r\n    const jwt  = this.cookieService.get('jwt');\r\n    const decodedToken = decode(jwt);\r\n    this.username = decodedToken.data.username;\r\n    if (decodedToken.data.roles.length === 0 ) {\r\n      this.roles = decodedToken.data.roles;\r\n    } else {\r\n      for (let i = 0 ; i < decodedToken.data.roles.length; i++) {\r\n         if (i === decodedToken.data.roles.length - 1 ) {\r\n           this.roles += decodedToken.data.roles[i] ;\r\n        } else {\r\n           this.roles += decodedToken.data.roles[i] + '/' ;\r\n         }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { OathService } from '../services/oath.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { map } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n  constructor(private oath: OathService , private router: Router , private user: UserService ) {\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.oath.isLoggedIn) {\r\n      return true;\r\n\r\n    }\r\n    return this.user.isLoggedIn().pipe( map(res => {\r\n      if (res.status) {\r\n        this.oath.setLoggedIn(true);\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['login']);\r\n        return false;\r\n      }\r\n    }));\r\n  }\r\n}\r\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n  CanActivateChild} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {RouteAuthorisationService} from '../services/route-authorisation.service';\r\nimport swal from 'sweetalert2';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteGuard implements CanActivate , CanActivateChild {\r\n\r\n  constructor(\r\n      private routeAuthorisationService: RouteAuthorisationService,\r\n  ) {}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const allowedRoles = next.data.allowedRoles;\r\n    const isAuthorized = this.routeAuthorisationService.isAuthorized(allowedRoles);\r\n\r\n    if (!isAuthorized) {\r\n      swal('Unauthorised', 'Please contact your administrator', 'error');\r\n    }\r\n    return isAuthorized;\r\n  }\r\n  canActivateChild(\r\n      childRoute: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const allowedPermission = childRoute.data.allowedPermission;\r\n    const isAuthorized = this.routeAuthorisationService.isAuthorized(allowedPermission);\r\n    if (!isAuthorized) {\r\n      // if not authorized, show access denied message\r\n      swal('Unauthorised', 'Please contact your administrator', 'error');\r\n    }\r\n    return isAuthorized;\r\n  }\r\n}\r\n\r\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegistrationComponent } from '../pages/registration/registration.component';\r\nimport { LoginComponent } from '../pages/login/login.component';\r\nimport { MyRFCSComponent } from '../pages/my-rfcs/my-rfcs.component';\r\nimport { Phase1Component } from '../pages/phase1/phase1.component';\r\nimport { HomeComponent } from '../pages/home/home.component';\r\nimport { CurrentRFCSComponent } from '../pages/current-rfcs/current-rfcs.component';\r\nimport { RFCsignoffComponent } from '../pages/rfcsignoff/rfcsignoff.component';\r\nimport { Phase2Component } from '../pages/phase2/phase2.component';\r\nimport { RouteGuard } from '../guards/route.guard';\r\nimport { AuthGuard } from '../guards/auth.guard';\r\nimport { Phase3Component } from '../pages/phase3/phase3.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login',        component: LoginComponent },\r\n  { path: 'register', component: RegistrationComponent },\r\n  { path: 'phase1' ,      component: Phase2Component},\r\n  { path: 'phase3' ,      component: Phase3Component},\r\n  { path: 'home' ,        component: HomeComponent,\r\n    canActivate: [AuthGuard] ,\r\n    canActivateChild: [RouteGuard],\r\n    runGuardsAndResolvers: 'always',\r\n    children: [\r\n      { path: 'createRFC' ,   component: Phase1Component ,      data: { allowedPermission: '1' } , runGuardsAndResolvers: 'always' },\r\n      { path: 'myRFCS' ,      component: MyRFCSComponent ,      data: { allowedPermission: '2' }, runGuardsAndResolvers: 'always'},\r\n      { path: 'rfcsignoff' ,  component: RFCsignoffComponent ,  data: { allowedPermission: '4' }, runGuardsAndResolvers: 'always'},\r\n      { path: 'currentrfcs' , component: CurrentRFCSComponent , data: { allowedPermission: '3' }, runGuardsAndResolvers: 'always'},\r\n      { path: 'phase2' ,      component: Phase2Component ,      data: { allowedPermission: '4' }, runGuardsAndResolvers: 'always'},\r\n      { path: 'phase3' ,      component: Phase3Component ,      data: { allowedPermission: '5' }, runGuardsAndResolvers: 'always'}\r\n      ]},\r\n  { path: '**',           component: LoginComponent },\r\n  {path: 'phase3' , component: Phase3Component},\r\n  {path: 'CurrentRFCsComponent', component: CurrentRFCSComponent},\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes , { onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n","module.exports = \"\"","module.exports = \"<!--Created by Blaine Viljoen(28023374)-->\\r\\n\\r\\n<form>\\r\\n    <div *ngFor=\\\"let rfc of rfcs; index as i\\\">\\r\\n        <div class=\\\"shadow card bg-light mx-auto\\\" (click)=\\\"onClick(i)\\\" style=\\\"cursor: pointer;\\\">\\r\\n            <div class=\\\"form group\\\">\\r\\n                <h2 class=\\\"px-3 pt-1 text-primary\\\">CCR ID: {{rfc[0]}}</h2><br>\\r\\n                <h3 class=\\\"px-3 text-secondary\\\">Request: {{rfc[1]}}</h3>\\r\\n                <h3 class=\\\"px-3 text-secondary\\\">Reason: {{rfc[2]}}</h3>\\r\\n            </div>\\r\\n        </div>\\r\\n        <br>\\r\\n    </div>\\r\\n\\r\\n    <h3 id=\\\"test\\\" class=\\\"pt-3 px-3 text-primary\\\"></h3>\\r\\n</form>\\r\\n\\r\\n<!--Created by Blaine Viljoen(28023374)-->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {CurrentRfcsService} from '../../services/currentRfcs.service';\r\nimport {Data} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-current-rfcs',\r\n  templateUrl: './current-rfcs.component.html',\r\n  styleUrls: ['./current-rfcs.component.css']\r\n})\r\nexport class CurrentRFCSComponent implements OnInit {\r\n\r\n  Token = null;\r\n\r\n  rfcs = [\r\n    {id: 1, request: 'something', reason: 'Cause I said so ...'},\r\n    {id: 2, request: 'something else', reason: 'Same as the last one ...'},\r\n    {id: 3, request: 'one last thing', reason: 'Just do it ...'}\r\n  ];\r\n\r\n  onClick(index) {\r\n    document.getElementById('test').innerHTML = 'You selected the card with id: ' + this.rfcs[index][0];\r\n  }\r\n\r\n  constructor(private currentRfcsService: CurrentRfcsService) { }\r\n\r\n  ngOnInit() {\r\n     this.currentRfcsService.getCSRFToken().subscribe( (data: Data) => {\r\n         this.Token = data.tokenValue ;\r\n     });\r\n     this.currentRfcsService.getPageData().subscribe((data: Data) => {\r\n        this.rfcs = data[0];\r\n        console.log(this.rfcs);\r\n     });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\n<!-- Student number: 27455211-->\\n\\n<div class=\\\"wrapper default-theme\\\" [ngClass]=\\\"getClasses()\\\">\\n  <!--  <app-login></app-login>-->\\n  <app-navbar></app-navbar>\\n  <main>\\n    <app-sidebar></app-sidebar>\\n    <div class=\\\"pages container-fluid pb-4 pl-4 pr-4 \\\">\\n      <router-outlet></router-outlet>\\n      <hr>\\n    </div>\\n    <div class=\\\"overlay\\\" (click)=\\\"toggleSidebar()\\\"></div>\\n  </main>\\n</div>\\n\\n\"","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\n\r\nimport {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {AppService} from '../../services/app.service';\r\nimport {Router, NavigationEnd, RouterEvent} from '@angular/router';\r\nimport {Subject} from 'rxjs';\r\nimport {filter, takeUntil} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit , OnDestroy {\r\n\r\n  public destroyed = new Subject<any>();\r\n  constructor(private appService: AppService , private router: Router) {\r\n  }\r\n\r\n  getClasses() {\r\n    const classes = {\r\n      'pinned-sidebar': this.appService.getSidebarStat().isSidebarPinned,\r\n      'toggeled-sidebar': this.appService.getSidebarStat().isSidebarToggeled\r\n    };\r\n    return classes;\r\n  }\r\n  toggleSidebar() {\r\n    this.appService.toggleSidebar();\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.router.events.pipe(\r\n        filter((event: RouterEvent) => event instanceof NavigationEnd),\r\n        takeUntil(this.destroyed)\r\n    ).subscribe(() => {\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\n<!-- Student number: 27455211-->\\n<div class=\\\"card mx-auto\\\" style=\\\"width: 45rem;\\\">\\n\\n  <h5 class=\\\"card-header info-color white-text text-center py-4\\\">\\n    <strong>Sign in</strong>\\n  </h5>\\n\\n  <div class=\\\"card-body px-lg-5 pt-0\\\">\\n    <form class=\\\"md-form\\\" style=\\\"color: #757575;\\\">\\n      <label for=\\\"username\\\">User Name</label>\\n      <input type=\\\"email\\\" id=\\\"username\\\"  name=\\\"username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user\\\" (input)=\\\"setUsername(user)\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"pass\\\"  (input)=\\\"setPassword(pass)\\\">\\n      <div class=\\\"d-flex align-items-center justify-content-between\\\">\\n        <div class=\\\"form-check\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"materialLoginFormRemember\\\" >\\n          <label class=\\\"form-check-label\\\" for=\\\"materialLoginFormRemember\\\">Remember me</label>\\n        </div>\\n        <div>\\n          <a href=\\\"\\\">Forgot password?</a>\\n        </div>\\n      </div>\\n\\n      <button class=\\\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\\\" type=\\\"submit\\\"  (click)=\\\"onLogin($event)\\\">Sign in</button>\\n\\n      <div class=\\\"text-center\\\">\\n        <p>Not a member?\\n          <a href=\\\"#\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\n        </p>\\n\\n      </div>\\n      <input type=\\\"hidden\\\"  value=\\\"{{this.Token}}\\\">\\n    </form>\\n  </div>\\n</div>\\n\"","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {OAuth} from '../../models/OAuth';\r\nimport swal from 'sweetalert2'; // Sweet Alerts import\r\nimport {OathService} from '../../services/oath.service';\r\nimport {Data, Router } from '@angular/router';\r\nimport {CookieService} from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private OAuthService: OathService ,\r\n              private router: Router ,  private cookieService: CookieService) { }\r\n  user: String = '';\r\n  pass: String = '';\r\n  OAuth: OAuth = {\r\n    username: undefined,\r\n    password: undefined\r\n  };\r\n  Token = null ;\r\n\r\n  setUsername(user) {\r\n    this.user = user;\r\n  }\r\n  setPassword(pass) {\r\n    this.pass = pass;\r\n  }\r\n  onLogin(event) {\r\n    const target = event.target;\r\n      this.OAuth.username = this.user;\r\n      this.OAuth.password = this.pass ;\r\n\r\n      this.OAuthService.getUserDetails(this.OAuth.username, this.OAuth.password , this.Token ).subscribe((data: Data) => {\r\n        if (data.success) {\r\n          this.OAuthService.setLoggedIn(true);\r\n          this.cookieService.set( 'jwt', data.jwt );\r\n\r\n          this.router.navigate(['home']  );\r\n          // swal('Logged In' , data.message , 'success' );\r\n          swal({\r\n            type: 'success',\r\n            title: 'Logged In',\r\n            text: data.message ,\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n        } else {\r\n          this.OAuthService.getCSRFToken().subscribe( ( data1: Data) => {\r\n            this.Token = data1.tokenValue ;\r\n          });\r\n          swal('Failure', data.message , 'error');\r\n        }\r\n      });\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.OAuthService.getCSRFToken().subscribe( (data: Data) => {\r\n      this.Token = data.tokenValue ;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<form>\\n  <div class=\\\"card bg-light\\\">\\n    hello im a card\\n  </div>\\n</form>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-rfcs',\n  templateUrl: './my-rfcs.component.html',\n  styleUrls: ['./my-rfcs.component.scss']\n})\nexport class MyRFCSComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\r\\n<!-- Student number: 27455211-->\\r\\n  <form class=\\\"card mx-auto secondary-color\\\" type=\\\"GET\\\">\\r\\n    <div class=\\\"form-group px-3 pt-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\"> <label for= \\\"site\\\">Select your site</label></div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <select ngbPopover=\\\"Select from the drop down list The site you want to make your request within\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom\\\" popoverTitle=\\\"SELECT SITE\\\"\\r\\n              class=\\\"rounded w-100 form-control\\\"\\r\\n              name=\\\"site\\\"\\r\\n              id=\\\"site\\\"\\r\\n              (change)=\\\"onSelectSite($event)\\\" >\\r\\n            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\r\\n            <option *ngFor=\\\"let site of usersSites\\\"  [value]=\\\"site[0]\\\" >{{site[1]}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group px-3 pt-3\\\">\\r\\n      <label for= \\\"requestedChange\\\">Change Request</label>\\r\\n      <textarea rows=\\\"8\\\" class=\\\"form-control rounded\\\"\\r\\n                type=\\\"text\\\"\\r\\n                name=\\\"requestedChange\\\"\\r\\n                id=\\\"requestedChange\\\"\\r\\n                (input)=\\\"requestedChange()\\\"\\r\\n                [(ngModel)]=\\\"RFC.requestedChange\\\">\\r\\n      </textarea>\\r\\n    </div>\\r\\n    <div class=\\\"form-group px-3\\\">\\r\\n      <label for=\\\"description\\\">Description</label>\\r\\n      <textarea rows=\\\"8\\\" class=\\\"form-control rounded\\\"\\r\\n                type=\\\"text\\\"\\r\\n                name=\\\"description\\\"\\r\\n                id=\\\"description\\\"\\r\\n                (input)=\\\"description()\\\"\\r\\n                [(ngModel)]=\\\"RFC.description\\\"\\r\\n      ></textarea>\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"row px-3\\\">\\r\\n      <div class=\\\"col\\\"></div>\\r\\n      <div class=\\\"col\\\">\\r\\n        <button\\r\\n                type=\\\"cancel\\\"\\r\\n                id=\\\"cancel\\\"\\r\\n                class=\\\"btn btn-outline-danger btn-rounded w-100 mx-auto   my-4 waves-effect z-depth-0\\\" (click)=\\\"onCancel()\\\"\\r\\n        >Cancel</button>\\r\\n      </div>\\r\\n      <div class=\\\"col\\\"></div>\\r\\n      <div class=\\\"col\\\">\\r\\n        <button\\r\\n                type=\\\"submit\\\"\\r\\n                id=\\\"submit\\\"\\r\\n                class=\\\"btn btn-outline-info btn-rounded w-100 mx-auto my-4 waves-effect z-depth-0 disabled\\\" [disabled]=\\\"!this.enableSubmitButton\\\" (click)=\\\"onSubmit()\\\"\\r\\n        >Submit</button>\\r\\n      </div>\\r\\n      <div class=\\\"col\\\"></div>\\r\\n    </div>\\r\\n  </form>\\r\\n\"","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { RFC } from '../../models/RFC';\nimport {Phase1Service} from '../../services/phase1.service';\nimport {Data, Router} from '@angular/router';\nimport swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-create-rfcs',\n  templateUrl: './phase1.component.html',\n  styleUrls: ['./phase1.component.css']\n})\nexport class Phase1Component implements OnInit {\n  usersSites ;\n  enableSubmitButton = false;\n  private Token ;\n  private selectedSite;\n  constructor(private phase1Service: Phase1Service ,  private router: Router) { }\n  RFC: RFC  = {\n    dateRequested: undefined,\n    requestedChange: undefined,\n    description: undefined\n  };\n  // User: User = {title: undefined,\n  //   site: undefined,\n  //   name: undefined,\n  //   surname: undefined,\n  //   employeeId: undefined,\n  //   contactNumber: undefined,\n  //   email: undefined,\n  //   password: undefined\n  // };\n  onSelectSite($event) {\n    this.selectedSite = $event.target.value;\n  }\n  requestedChange() {\n\n  }\n  description() {\n      const submitButton = document.getElementById('submit');\n      if (this.RFC.requestedChange !== undefined && this.RFC.description !== undefined && this.selectedSite !== undefined) {\n        submitButton.classList.remove('disabled');\n        this.enableSubmitButton = true;\n      }\n  }\n  onCancel() {\n\n    swal({\n      title: 'Are you sure?',\n      text: 'You will lose this data',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n      confirmButtonColor: '#5bc0de',\n      cancelButtonColor: '#d9534f' ,\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n        this.router.navigate(['home/myRFCS']);\n      } else if (\n          result.dismiss === swal.DismissReason.cancel\n      ) {\n        swal({\n          title: 'Cancelled',\n          text: 'Your may continue to make changes',\n          type: 'error',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n  onSubmit() {\n\n    swal({\n      title: 'Are you sure?',\n      text: \"You won't be able make changes to your submission\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Submit',\n      cancelButtonText: 'Cancel',\n      confirmButtonColor: '#5bc0de',\n      cancelButtonColor: '#d9534f' ,\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n        this.phase1Service.submitRequest( this.RFC , this.Token , this.selectedSite).subscribe( (data: Data) => {\n          if (data.success) {\n            this.router.navigate(['home']);\n            swal('Success' , data.message , 'success' );\n          } else {\n            swal('Failure' , data.message , 'error' );\n            if (data.message === 'Session expired') {\n              this.router.navigate(['login']);\n            }\n          }\n        });\n      } else if (\n          /* Read more about handling dismissals below */\n          result.dismiss === swal.DismissReason.cancel\n      ) {\n        swal({\n          title: 'Cancelled',\n          text: 'Your may continue to make changes',\n          type: 'error',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.phase1Service.getCSRFToken().subscribe( (data: Data) => {\n      this.Token = data.tokenValue ;\n    });\n    this.phase1Service.getPageData().subscribe((data: Data) => {\n      this.usersSites = data ;\n    });\n\n  }\n\n}\n","module.exports = \"import\\r\\n.special {\\r\\n    font-weight: bold !important;\\r\\n    color: #fff !important;\\r\\n    background: #bc0000 !important;\\r\\n    text-transform: uppercase;\\r\\n}\\r\\n\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\n<!-- Student number: 27455211-->\\n<form>\\n    <div class=\\\"card secondary-color\\\">\\n        <h3 class=\\\"px-3 text-primary\\\">Request for Change</h3>\\n        <div>\\n            <label class=\\\"px-3 d-inline-block\\\">Name of Initiator: </label>\\n            <p class=\\\" px-3 d-inline-block\\\"></p>\\n            <label class=\\\"px-3 d-inline-block\\\">Date Requested: </label>\\n            <p class=\\\"px-3 d-inline-block\\\"></p>\\n        </div>\\n        <div>\\n            <label class=\\\"px-3 d-inline-block\\\">Department:</label>\\n            <p class=\\\"px-3 d-inline-block\\\"></p>\\n        </div>\\n        <label class=\\\"px-3 \\\">Request: </label>\\n        <p class=\\\"px-3\\\">{{this.RFC.requestedChange}}</p>\\n        <label class=\\\"px-3\\\">Reason: </label>\\n        <p class=\\\"px-3\\\">{{this.RFC.description}}</p>\\n    </div>\\n    <div class=\\\" shadow card bg-light mx-auto\\\">\\n        <div class=\\\"form-group\\\">\\n            <h3 class=\\\"px-3 text-primary\\\"> CCR specialist phase 1</h3>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm\\\">\\n                    <label class=\\\"px-3\\\" for=\\\"priority\\\">Request Priority</label>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <select ngbPopover=\\\"Select from the drop down list whether the change request is an EMERGENCY or NON-EMERGENCY (NORMAL).\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"CHANGE REQUEST PRIORITY\\\"\\n                            class=\\\"rounded w-100 form-control\\\"\\n                            name=\\\"priority\\\"\\n                            id=\\\"priority\\\"\\n                            (change)=\\\"onSelectPriority($event)\\\" >\\n                        <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\n                        <option *ngFor=\\\"let priority of availablePriorities\\\"  [value]=\\\"priority[0]\\\" >{{priority[1]}}</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <div *ngIf=\\\"this.displayPredictedRisks\\\">\\n                        <label class=\\\"px-3\\\"  for=\\\"predictedImpact\\\"> Predicted Risk/s </label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <div *ngIf=\\\"this.displayPredictedRisks\\\">\\n                        <ngx-select-dropdown\\n                                ngbPopover=\\\"Select the appropriate option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"PREDICTED RISK\\\"\\n                                id=\\\"predictedImpact\\\"\\n                                name=\\\"predictedImpact\\\"\\n                                (change)=\\\"onSelectImpact($event)\\\"\\n                                [multiple]=\\\"true\\\"\\n                                [(ngModel)]=\\\"this.phase1.predictedImpact\\\"\\n                                [options]=\\\"availableImpacts\\\">\\n                        </ngx-select-dropdown>\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm \\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayChangePeriod\\\">\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-sm\\\">\\n                    <div *ngIf=\\\"this.displayChangePeriod\\\">\\n                        <label class=\\\"px-3\\\" for=\\\"changePeriod\\\" >Change Period</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <div *ngIf=\\\"this.displayChangePeriod\\\">\\n                        <select ngbPopover=\\\"Specify whether the requested change will be permanent or just temporary by selecting an option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"CHANGE PERIOD\\\"\\n                                class=\\\"rounded w-100 form-control\\\"\\n                                name=\\\"changePeriod\\\"\\n                                id=\\\"changePeriod\\\"\\n                                (change)=\\\"onSelectChangePeriod($event)\\\">\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\n                            <option *ngFor=\\\"let period of availablePeriods\\\"  [value]=\\\"period[0]\\\" >{{period[1]}}</option>\\n                        </select>\\n                     </div>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <div  *ngIf=\\\"this.displaySelectTemporaryAmountOfDays\\\">\\n                        <label class=\\\"px-3\\\" for=\\\"changePeriod\\\" >Temporary period number of days</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <div  *ngIf=\\\"displaySelectTemporaryAmountOfDays\\\">\\n                        <select ngbPopover=\\\"Select the appropriate option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"PREDICTED RISK\\\"\\n                                class=\\\"rounded w-100 form-control\\\"\\n                                name=\\\"temporaryNoDays\\\"\\n                                id=\\\"temporaryNoDays\\\"\\n                                (change)=\\\"onSelectNumberOfTemporaryDays($event)\\\" >\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select no. of days</option>\\n                            <option  *ngFor=\\\"let day of availableNumberOfTemporaryDays\\\" value=\\\"{{day}}\\\">{{day}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm\\\"></div>\\n            </div>\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"displayTemporaryDateSelection\\\">\\n                <div class=\\\"col-sm\\\">\\n                    <label class=\\\"px-3\\\" for=\\\"temporaryStartPeriod\\\" >Temporary period start date:</label>\\n                </div>\\n                <div class=\\\"col-sm \\\">\\n                    <input class=\\\"rounded w-100 form-control\\\"\\n                           type=\\\"text\\\"\\n                           id=\\\"temporaryStartPeriod\\\"\\n                           name=\\\"temporaryStartPeriod\\\"\\n                           bsDatepicker\\n                           [bsConfig]=\\\"datepickerConfig\\\"\\n                           [(ngModel)]=\\\"this.phase1.temporaryPeriodStartDate\\\"\\n                           (ngModelChange)=\\\"onSelectTemporaryStartDate($event)\\\"\\n                           >\\n                </div>\\n                <div class=\\\"col-sm \\\"> <label class=\\\"px-3\\\" for=\\\"temporaryEndPeriod\\\" >Temporary period end date:</label></div>\\n                <div class=\\\"col-sm \\\"><input  class=\\\"rounded w-100 form-control\\\"\\n                                             type=\\\"text\\\"\\n                                             id=\\\"temporaryEndPeriod\\\"\\n                                             name=\\\"temporaryEndPeriod\\\"\\n                                             bsDatepicker\\n                                             [bsConfig]=\\\"datepickerConfig\\\"\\n                                             [(ngModel)]=\\\"this.phase1.temporaryPeriodEndDate\\\"\\n                                             disabled\\n                                             readonly>\\n                </div>\\n                <div class=\\\"col-sm \\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayNatureOfChange\\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"this.displayNatureOfChange\\\">\\n                <div class=\\\"col-sm\\\">\\n                    <div *ngIf=\\\"this.displayNatureOfChange\\\">\\n                        <label class=\\\"px-3\\\" for=\\\"natureOfChange\\\">Nature of the change</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <div *ngIf=\\\"this.displayNatureOfChange\\\">\\n                        <select popoverTitle=\\\"SELECT NATURE OF CHANGE\\\" ngbPopover=\\\"Select an option from the drop down list. National = Change affects both Northern and Southern regions. Regional = Either Northern or Southern is affected, but not both. Local = any ATCC or TCU or RT\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                                class=\\\"rounded w-100 form-control\\\"\\n                                name=\\\"natureOfChange\\\"\\n                                id=\\\"natureOfChange\\\"\\n                                (change)=\\\"onSelectNatureOfChange($event)\\\"\\n                                [(ngModel)]=\\\"this.phase1.natureOfChange\\\">\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\n                            <option *ngFor=\\\"let change of availableNatureOfChange\\\"  [value]=\\\"change[0]\\\" >{{change[1]}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <div *ngIf=\\\"this.displayEOSystem\\\">\\n                        <label class=\\\"px-3\\\"  for=\\\"eosSystem\\\">EOS system</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <div *ngIf=\\\"this.displayEOSystem\\\">\\n                        <select popoverTitle=\\\"SELECT EOS SYSTEM\\\" ngbPopover=\\\"Please select from the drop down list the Essential Operational System (EOS) to which the Trusted Computing Base (TCB) change will be applied.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                                class=\\\"w-100 rounded form-control\\\"\\n                                name=\\\"eosSystem\\\"\\n                                id=\\\"eosSystem\\\"\\n                                (change)=\\\"onSelectEosSystem($event)\\\" >\\n                            <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\n                            <option *ngFor=\\\"let eos of availableEosSystems\\\"  [value]=\\\"eos[0]\\\" >{{eos[1]}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm \\\"></div>\\n            </div>\\n        </div>\\n<!--</div>-->\\n<!--    <div class=\\\"card\\\">-->\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayTCB_CRF_ID\\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"this.displayTCB_CRF_ID\\\">\\n                <div class=\\\"col-sm\\\">\\n                    <label class=\\\"px-3\\\" for=\\\"tcbID\\\">TCB-CRF ID:</label>\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <input popoverTitle=\\\"CHANGE REQUEST IDENTIFICATION\\\" ngbPopover=\\\"The TCB-CRF ID is an unique number relative to an EOS system issued by the TCB-CRF Administrator for every change request submitted for approval and implementation.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                           class=\\\"rounded form-control\\\"\\n                           id=\\\"tcbID\\\"\\n                           name=\\\"tcbID\\\"\\n                           type=\\\"text\\\"\\n                           [(ngModel)]=\\\"this.phase1.TCB_CRF_ID\\\"  >\\n                </div>\\n                <div class=\\\"col-sm\\\"></div>\\n                <div class=\\\"col-sm\\\"></div>\\n                <div class=\\\"col-sm\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayConfigurationItems\\\">\\n            <div *ngIf=\\\"this.displayConfigurationItems\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm\\\">\\n                        <label class=\\\"px-3\\\" for=\\\"configurationItems\\\">Configuration Items: </label>\\n                    </div>\\n                    <div class=\\\"col\\\"></div>\\n                </div>\\n                <div class=\\\"px-3\\\">\\n                    <input  popoverTitle=\\\"ENTER ALL CONFIGURATION ITEMS\\\" ngbPopover=\\\"TECH: Enter any sub system or system component that will be subject to the change e.g. EXTRA HDD, SW VERS., RADAR FEED, DATASET- ANY CHANGE TO THE TCB NEEDS TO BE APPROVED. OPS: Enter short description of the request.  Maximum 250 characters allowed\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                            maxlength=\\\"250\\\"\\n                            class=\\\"rounded w-75 form-control\\\"\\n                            id=\\\"configurationItems\\\"\\n                            name=\\\"configurationItems\\\"\\n                            type=\\\"text\\\"\\n                            (input)=\\\"this.displayChangeType = true\\\"\\n                            [(ngModel)]=\\\"this.phase1.configurationItems\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div *ngIf=\\\"this.displayChangeType\\\">\\n                        <label class=\\\"px-3\\\">Change Type: </label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\"\\n                     popoverTitle=\\\"CHANGE TYPE\\\" ngbPopover=\\\"Select the type of change. Hardware (HW), Software (SW) or Firmware (FW). One or more of these options must be ticked if affected by the change.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                >\\n                    <div *ngIf=\\\"this.displayChangeType\\\">\\n                        <label class=\\\"checkbox-inline px-3\\\">\\n                            <input type=\\\"checkbox\\\"\\n                                   value=\\\"HW\\\"\\n                                   (click)=\\\"onSelectChangeTypeHW($event)\\\" >\\n                            Hardware\\n                        </label>\\n                        <label class=\\\"checkbox-inline px-3\\\">\\n                            <input type=\\\"checkbox\\\"\\n                                   value=\\\"SW\\\"\\n                                   (click)=\\\"onSelectChangeTypeSW($event)\\\">\\n                            Software\\n                        </label>\\n                        <label class=\\\"checkbox-inline px-3\\\">\\n                            <input type=\\\"checkbox\\\"\\n                                   value=\\\"FW\\\"\\n                                   (click)=\\\"onSelectChangeTypeFW($event)\\\">\\n                            Firmware\\n                        </label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div *ngIf=\\\"this.displayAdditionalAttachedDocuments\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <label class=\\\"px-3 \\\">Additional attached Documents: </label>\\n                    </div>\\n                    <div class=\\\"col\\\"\\n                     popoverTitle=\\\"ADDITIONAL DOCUMENTS ATTACHED\\\" ngbPopover=\\\"Tick the box next to the appropriate answer whether additional documents are attached for Phase-1. Normally there should be documents attached explaining why the change is requested and what pre-testing and evaluation has been done. \\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                    >\\n                        <Label class=\\\"radio-inline px-3\\\">\\n                            <input type=\\\"radio\\\"\\n                                   name=\\\"additionalDocs\\\"\\n                                   value=\\\"yes\\\"\\n                                   (click)=\\\"onSelectAdditionalDocuments($event)\\\">\\n                            Yes\\n                        </Label>\\n                        <Label class=\\\"radio-inline px-3\\\">\\n                            <input type=\\\"radio\\\"\\n                                   name=\\\"additionalDocs\\\"\\n                                   value=\\\"no\\\"\\n                                   (click)=\\\"onSelectAdditionalDocuments($event)\\\" >\\n                            No\\n                        </Label>\\n                    </div>\\n                    <div class=\\\"col\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.phase1.additionalDocuments === true\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <label class=\\\"px-3\\\" for=\\\"numberOfPages\\\">Number of Pages (Documents): </label>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <input class=\\\"px-3 form-control rounded\\\"\\n                           type=\\\"number\\\"\\n                           name=\\\"numberOfPages\\\"\\n                           id=\\\"numberOfPages\\\"\\n                           [(ngModel)]=\\\"this.phase1.numberOfPages\\\">\\n                </div>\\n                <div class=\\\"col\\\"></div>\\n            </div>\\n            <div class=\\\"px-3\\\">\\n                <ngx-file-drop multiple dropZoneLabel=\\\"Drop files here\\\" (onFileDrop)=\\\"dropped($event)\\\"\\n                               (onFileOver)=\\\"fileOver($event)\\\" (onFileLeave)=\\\"fileLeave($event)\\\">\\n                    <ng-template  ngx-file-drop-content-tmp let-openFileSelector=\\\"openFileSelector\\\">\\n                        Please drag and drop your additional files here\\n                        <button type=\\\"button\\\" (click)=\\\"openFileSelector()\\\">Browse Files</button>\\n                    </ng-template>\\n                </ngx-file-drop>\\n                <div class=\\\"upload-table px-3\\\">\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                        </tr>\\n                        </thead>\\n                        <tbody class=\\\"upload-name-style\\\">\\n                        <tr *ngFor=\\\"let item of files\\\">\\n                            <td><strong>{{ item[0].relativePath }}</strong></td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayEstimatedImpact\\\">\\n            <label class=\\\"px-3\\\">Estimated Impact: </label>\\n            <div class=\\\"px-3\\\">\\n                <div *ngIf=\\\"this.displayEstimatedImpactOps\\\">\\n                    <label for=\\\"operationsImpact\\\" class=\\\"\\\">Operations: </label>\\n                    <br>\\n                    <input popoverTitle=\\\"IMPACT=FUNCTIONAL/PROCEDURAL/etc\\\" ngbPopover=\\\"Operations: e.g. NORM mode will be down, Redundency lost, No new FPLs, Operator Handbooks\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                           class=\\\"w-75 rounded form-control\\\"\\n                           type=\\\"text\\\"\\n                           id=\\\"operationsImpact\\\"\\n                           name=\\\"operationsImpact\\\"\\n                           (input)=\\\"estimatedImpact($event)\\\"\\n                           [(ngModel)]=\\\"this.phase1.estimatedImpacts.operations\\\">\\n                </div>\\n                <div *ngIf=\\\"this.displayEstimatedImpactClients\\\">\\n                    <label for=\\\"clientsImpact\\\" class=\\\"\\\">Clients: </label>\\n                    <br>\\n                    <input popoverTitle=\\\"IMPACT=FUNCTIONAL/PROCEDURAL/etc\\\" ngbPopover=\\\"Clients: External and Internal - loss of service such as slot information, procedural changes, etc.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                           class=\\\" w-75 rounded form-control\\\"\\n                           type=\\\"text\\\"\\n                           id=\\\"clientsImpact\\\"\\n                           name=\\\"clientsImpact\\\"\\n                           (input)=\\\"estimatedImpact($event)\\\"\\n                           [(ngModel)]=\\\"this.phase1.estimatedImpacts.clients\\\">\\n                </div>\\n                <div *ngIf=\\\"this.displayEstimatedImpactTech\\\">\\n                    <label for=\\\"technicalImpact\\\" class=\\\"\\\">Technical: </label>\\n                    <br>\\n                    <input popoverTitle=\\\"IMPACT=FUNCTIONAL/PROCEDURAL/etc\\\" ngbPopover=\\\"Technical: Node Down, LAN switch down, Documents\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                           class=\\\" w-75 rounded form-control\\\"\\n                           type=\\\"text\\\"\\n                           id=\\\"technicalImpact\\\"\\n                           name=\\\"technicalImpact\\\"\\n                           (input)=\\\"estimatedImpact($event)\\\"\\n                           [(ngModel)]=\\\"this.phase1.estimatedImpacts.technical\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayProblemReportRaised\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <label class=\\\"px-3\\\">Problem Report raised with Contractor?</label>\\n                </div>\\n                <div class=\\\"col\\\"\\n                     popoverTitle=\\\"PROBLEM REPORT RAISED?\\\" ngbPopover=\\\"Specify yes or no whether a problem request or report has been raised with the contractor by selecting the appropriate check box with a left-mouse-button click.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                >\\n                    <Label class=\\\"radio-inline px-3\\\">\\n                        <input type=\\\"radio\\\"\\n                               name=\\\"reportRaised\\\"\\n                               value=\\\"yes\\\"\\n                               (click)=\\\"onSelectReportRaised($event)\\\">\\n                        Yes\\n                    </Label>\\n                    <Label class=\\\"radio-inline px-3\\\">\\n                        <input type=\\\"radio\\\"\\n                               name=\\\"reportRaised\\\"\\n                               value=\\\"no\\\"\\n                               (click)=\\\"onSelectReportRaised($event)\\\" >\\n                        No\\n                    </Label>\\n                </div>\\n                <div class=\\\"col\\\"></div>\\n            </div>\\n            <div *ngIf=\\\"this.phase1.problemReportRaised\\\" >\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <label for=\\\"problemReportRef\\\" class=\\\"px-3\\\">Problem Report Reference Number: </label>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <input popoverTitle=\\\"PROBLEM REPORT REFERENCE\\\" ngbPopover=\\\"Enter the problem report reference number here. The problem report refers to a report that was sent to the contractor to improve a functionality or solve a problem on the system. Can be a PR, ECR, PCR, CR, etc.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                               class=\\\"w-100 rounded form-control\\\"\\n                               type=\\\"text\\\"\\n                               name=\\\"problemReportRef\\\"\\n                               id=\\\"problemReportRef\\\"\\n                               (input)=\\\"onInputProblemReportRef()\\\"\\n                               [(ngModel)]=\\\"this.phase1.problemReportRef\\\">\\n                    </div>\\n                    <div class=\\\"col\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayChangePreTested\\\">\\n            <div *ngIf=\\\"this.displayChangePreTested\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <label class=\\\"px-3\\\">Change successfully pre-tested ?</label>\\n                    </div>\\n                    <div class=\\\"col\\\"\\n                         popoverTitle=\\\"CHANGE SUCCESSFULLY PRE-TESTED ?\\\" ngbPopover=\\\"Specify whether pre-tests or validations concerning the change were successful by selecting a check box accordingly with the left-mouse button.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                    >\\n                        <Label class=\\\"radio-inline px-3\\\">\\n                            <input type=\\\"radio\\\"\\n                                   name=\\\"preTested\\\"\\n                                   value=\\\"yes\\\"\\n                                   (click)=\\\"onSelectPreTested($event)\\\">\\n                            Yes\\n                        </Label>\\n                        <Label class=\\\"radio-inline px-3\\\">\\n                            <input type=\\\"radio\\\"\\n                                   name=\\\"preTested\\\"\\n                                   value=\\\"no\\\"\\n                                   (click)=\\\"onSelectPreTested($event)\\\" >\\n                            No\\n                        </Label>\\n                        <Label class=\\\"radio-inline px-3\\\">\\n                            <input type=\\\"radio\\\"\\n                                   name=\\\"preTested\\\"\\n                                   value=\\\"na\\\"\\n                                   (click)=\\\"onSelectPreTested($event)\\\" >\\n                            N/A\\n                        </Label>\\n                    </div>\\n                    <div class=\\\"col\\\"></div>\\n                </div>\\n                <div class=\\\"px-3\\\" *ngIf=\\\"this.displayChangeNotSuccessfullyTestedReason\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <label for=\\\"changeNotSuccessfullyTestedReason\\\" class=\\\"\\\">Reason for unsuccessful test: </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <input popoverTitle=\\\"Reason for unsuccessful testing\\\" ngbPopover=\\\"If the tests were unsuccessful please provide the reason here\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\"\\n                                   class=\\\"w-75 rounded form-control\\\"\\n                                   type=\\\"text\\\"\\n                                   id=\\\"changeNotSuccessfullyTestedReason\\\"\\n                                   name=\\\"changeNotSuccessfullyTestedReason\\\"\\n                                   (input)=\\\"onUnsuccessfulTestReason()\\\"\\n                                   [(ngModel)]=\\\"this.phase1.changeNotSuccessfullyTestedReason\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n<!--        <div class=\\\"form-group\\\">-->\\n<!--            <div class=\\\"row\\\">-->\\n<!--                <div class=\\\"col\\\">-->\\n<!--                    <label class=\\\"px-3\\\">Request submitted to all concerned parties ?</label>-->\\n<!--                </div>-->\\n<!--                <div class=\\\"col\\\">-->\\n<!--                    <Label class=\\\"radio-inline px-3\\\"><input type=\\\"radio\\\" name=\\\"submittedToAll\\\" value=\\\"yes\\\"  (click)=\\\"onSelectSubmittedToAllConcerned($event)\\\">Yes</Label>-->\\n<!--                    <Label class=\\\"radio-inline px-3\\\"><input type=\\\"radio\\\" name=\\\"submittedToAll\\\" value=\\\"no\\\"   (click)=\\\"onSelectSubmittedToAllConcerned($event)\\\" >No</Label>-->\\n<!--                </div>-->\\n<!--                <div class=\\\"col\\\"></div>-->\\n<!--            </div>-->\\n\\n<!--            <div  class=\\\"px-3\\\" *ngIf=\\\"!this.phase2.submittedToAllParties\\\">-->\\n<!--                <div class=\\\"row\\\">-->\\n<!--                    <div class=\\\"col\\\">-->\\n<!--                        <label class=\\\"\\\">Reason why not submitted to all concerned parties?</label>-->\\n<!--                    </div>-->\\n<!--                </div>-->\\n<!--                <div class=\\\"row\\\">-->\\n<!--                    <div class=\\\"col\\\">-->\\n<!--                        <input class=\\\" w-75 rounded form-control\\\" type=\\\"text\\\" name=\\\"requestNotSubmittedToAllParties\\\" [(ngModel)]=\\\"this.phase2.notSubmittedToAllPartiesReason\\\">-->\\n<!--                    </div>-->\\n<!--                </div>-->\\n<!--            </div>-->\\n<!--        </div>-->\\n\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displaySpecialistComments\\\">\\n            <div class=\\\"px-3\\\" >\\n                <div class=\\\"row\\\" *ngIf=\\\"this.displaySpecialistComments\\\">\\n                    <div class=\\\"col\\\">\\n                        <label for=\\\"specialistComments\\\" >Specialist comments</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\" *ngIf=\\\"this.displaySpecialistComments\\\">\\n                    <div class=\\\"col\\\">\\n                        <input\\n                                class=\\\"px-3 w-75 rounded form-control\\\"\\n                                type=\\\"text\\\"\\n                                name=\\\"specialistComments\\\"\\n                                id=\\\"specialistComments\\\"\\n                                (input)=\\\"onInputSpecialistComment()\\\"\\n                                [(ngModel)]=\\\"this.phase1.specialistComment\\\">\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\"  *ngIf=\\\"this.displaySpecialistComments && !this.displaySelectTemporaryAmountOfDays\\\" >\\n            <div class=\\\"py-3\\\">\\n                <div class=\\\"row\\\" >\\n                    <div class=\\\"col\\\">\\n                        <label class=\\\"px-3\\\" for=\\\"proposedDate\\\">Proposed Implementation Date: </label>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <input class=\\\" px-3 rounded w-75 form-control\\\"\\n                               type=\\\"text\\\"\\n                               id=\\\"proposedDate\\\"\\n                               name=\\\"proposedDate\\\"\\n                               [bsConfig]=\\\"datepickerConfig\\\"\\n                               (click)=\\\"onSelectProposedImplementationDate()\\\"\\n                               [(ngModel)]=\\\"this.phase1.proposedImplementationDate\\\"  bsDatepicker>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.displayRecommendOrOppose || this.emergencySelected\\\">\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col\\\">\\n                    <label class=\\\"px-3\\\" for=\\\"recommend/oppose\\\">Recommend Or Oppose change:</label>\\n                </div>\\n                <div class=\\\"col\\\">\\n\\n                    <select class=\\\"px-3 rounded w-75 form-control\\\"\\n                            id=\\\"recommend/oppose\\\"\\n                            name=\\\"recommend/oppose\\\"\\n                            (change)=\\\"onSelectRecommendOrOppose($event)\\\" >\\n                        <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\n                        <option  value=\\\"Recommend\\\" >Recommend</option>\\n                        <option value=\\\"Oppose\\\">Oppose</option>\\n                        <<option value=\\\"re-test\\\">Re-Test</option>\\n                    </select>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div  class=\\\"row px-3\\\">\\n                <div class=\\\"col\\\"></div>\\n                <div class=\\\"col\\\">\\n                    <button class=\\\"btn btn-outline-danger btn-rounded w-100  my-4 waves-effect z-depth-0\\\"\\n                            (click)=\\\"onSubmit()\\\"> Cancel\\n                    </button>\\n                </div>\\n                <div class=\\\"col\\\"></div>\\n                <div class=\\\"col\\\" >\\n                    <button [disabled]=\\\"!this.activateSubmitButton\\\"\\n                            class=\\\"btn btn-outline-info btn-rounded w-100 my-4  waves-effect z-depth-0 disabled\\\"\\n                            id=\\\"submit\\\"\\n                            (click)=\\\"onSubmit()\\\"> Submit\\n                    </button>\\n                </div>\\n                <div class=\\\"col\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\"","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Component, OnInit } from '@angular/core';\nimport {CCRPhase1} from '../../models/CCR-Phase1';\nimport {RFC} from '../../models/RFC';\nimport { NgxFileDropEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from 'ngx-file-drop';\nimport {BsDatepickerConfig} from 'ngx-bootstrap/datepicker';\nimport swal from 'sweetalert2';\nimport {Data} from '@angular/router';\nimport {Phase2Service} from '../../services/phase2.service';\n\n\n@Component({\n    selector: 'app-phase1',\n    templateUrl: './phase2.component.html',\n    styleUrls: ['./phase2.component.css']\n})\nexport class Phase2Component implements OnInit {\n\n    datepickerConfig: Partial<BsDatepickerConfig> ;\n    startDate: Date;\n    endDate: Date;\n    startDateString: string;\n    endDateString: string;\n    dateRangePicker: Date;\n    public files: NgxFileDropEntry[] [] = []  ;\n    private Token ;\n\n    availableNumberOfTemporaryDays: String [] = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16',\n        '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'];\n    availablePriorities: String [] = ['EMERGENCY', 'Urgent', 'Safety', 'Improvement', 'Other'];\n    availablePeriods: String [] = ['Permanent', 'Temporary', 'Trial'];\n    availableImpacts: String [] = ['CLIENTS', 'OPERATIONS', 'TECHNICAL'];\n    availableNatureOfChange: String [] = ['National', 'Local', 'Regional'];\n    availableEosSystems: String [] = ['AFTN', 'AMHS', 'ANAIS', 'A-SMGCS', 'ATIS', 'AWOS', 'CAD', 'CAMU', 'DAID', 'DATIS', 'DIESEL BACKUP',\n        'DITTEL', 'DME', 'FRS', 'FWD RELAY', 'ILS', 'IVSAT', 'MLAT', 'NDB', 'OTN', 'OTN', 'RADAR', 'SATELLITE', 'SMR', 'SQUIB', 'TERNS',\n        'TITAN', 'TOPSKY', 'UPS', 'VCCS', 'VHF', 'VOR', 'VPN'];\n\n    // Form display boolean values\n    emergencySelected: boolean;\n    displayPredictedRisks: boolean;\n    displayChangePeriod: boolean;\n    displayNatureOfChange: boolean;\n    displayEOSystem: boolean;\n    displayTCB_CRF_ID: boolean;\n    displayConfigurationItems: boolean;\n    displayChangeType: boolean;\n    displaySelectTemporaryAmountOfDays: boolean ;\n    displayTemporaryDateSelection: boolean;\n    displayAdditionalAttachedDocuments: boolean ;\n    displayEstimatedImpact: boolean ;\n    displayEstimatedImpactOps: boolean;\n    displayEstimatedImpactClients: boolean;\n    displayEstimatedImpactTech: boolean;\n    displayProblemReportRaised: boolean ;\n    displayChangePreTested: boolean ;\n    displayChangeNotSuccessfullyTestedReason: boolean ;\n    displaySpecialistComments: boolean ;\n    displayProposedImplementationDate: boolean ;\n    displayRecommendOrOppose: boolean ;\n    activateSubmitButton: boolean ;\n\n    RFC: RFC = {\n        dateRequested: undefined,\n        requestedChange: undefined,\n        description: undefined\n    };\n    phase1: CCRPhase1 = {\n        TCB_CRF_ID: undefined,\n        requestPriority: undefined,\n        predictedImpact: [],\n        changePeriod: undefined,\n        temporaryPeriodStartDate: undefined,\n        temporaryPeriodNumberOfDays: undefined,\n        temporaryPeriodEndDate: undefined ,\n        natureOfChange: undefined,\n        eosSystem: undefined,\n        configurationItems: undefined,\n        change: {\n            hardware: false,\n            software: false,\n            firmware: false\n        },\n        additionalDocuments: false,\n        numberOfPages: undefined,\n        estimatedImpacts: {\n            operations: undefined,\n            clients: undefined,\n            technical: undefined\n        },\n        problemReportRaised: false,\n        problemReportRef: undefined,\n        changeSuccessfullyTested: undefined,\n        changeNotSuccessfullyTestedReason: undefined,\n        specialistComment: undefined,\n        proposedImplementationDate: undefined,\n        recommend_oppose: undefined\n    };\n\n    constructor(private phase2: Phase2Service ) {\n        const minDate = new Date();\n\n        this.datepickerConfig = Object.assign({},\n            {containerClass: 'theme-dark-blue' },\n            { dateInputFormat: 'YYYY-MM-DD' } ,\n            { showWeekNumbers: false },\n            { minDate: minDate });\n\n    }\n\n\n    onSelectPriority($event) {\n        const prioritySelect = document.getElementById('priority');\n        if ($event.target.value === '1') {\n            prioritySelect.classList.add('text-danger');\n            this.emergencySelected = true;\n            this.displaySpecialistComments = true ;\n            this.displayPredictedRisks = false;\n            this.displayPredictedRisks = false;\n            this.displayChangePeriod = false;\n            this.displayNatureOfChange = false;\n            this.displayEOSystem = false;\n            this.displayTCB_CRF_ID = false;\n            this.displayConfigurationItems = false;\n            this.displayChangeType = false;\n            this.displayTemporaryDateSelection = false;\n            this.displayAdditionalAttachedDocuments = false ;\n            this.displayEstimatedImpact = false ;\n            this.displayEstimatedImpactOps = false;\n            this.displayEstimatedImpactClients = false;\n            this.displayEstimatedImpactTech = false;\n            this.displayProblemReportRaised = false ;\n            this.displayChangePreTested = false ;\n            this.displayChangeNotSuccessfullyTestedReason = false ;\n            this.displayProposedImplementationDate = false ;\n        } else if (prioritySelect.classList.contains('text-danger') && $event.target.value !== 'Emergency') {\n            this.displayPredictedRisks = true;\n            this.displaySpecialistComments = false ;\n            this.emergencySelected = false;\n            prioritySelect.classList.remove('text-danger');\n        } else {\n            this.displayPredictedRisks = true;\n            this.displaySpecialistComments = false ;\n            this.emergencySelected = false;\n        }\n        this.phase1.requestPriority = $event.target.value;\n    }\n\n    onSelectChangePeriod($event) {\n        switch ($event.target.value) {\n            case '1' :\n                this.displayNatureOfChange = true;\n                this.displaySelectTemporaryAmountOfDays = false ;\n                break;\n            case '2' :\n                this.displaySelectTemporaryAmountOfDays = true ;\n                this.displayNatureOfChange = false;\n                break;\n            case '3':\n\n                this.displayNatureOfChange = false;\n                this.displaySelectTemporaryAmountOfDays = true ;\n                break;\n        }\n        this.phase1.changePeriod = $event.target.value;\n    }\n    onSelectNumberOfTemporaryDays($event) {\n        this.phase1.temporaryPeriodNumberOfDays = $event.target.value ;\n        this.displayTemporaryDateSelection = true ;\n    }\n    onSelectTemporaryStartDate($event) {\n        const maxDate = new Date() ;\n        maxDate.setDate($event.getDate() + parseInt('' + this.phase1.temporaryPeriodNumberOfDays, 10));\n        this.phase1.temporaryPeriodEndDate = maxDate;\n        this.displayNatureOfChange = true ;\n\n    }\n    onSelectImpact($event) {\n        if (this.phase1.predictedImpact !== []) {\n            this.displayChangePeriod = true;\n            if (this.phase1.predictedImpact.includes('CLIENTS')) {\n                this.displayEstimatedImpactClients = true;\n            } else {\n                this.displayEstimatedImpactClients = false;\n            }\n            if (this.phase1.predictedImpact.includes('TECHNICAL')) {\n                this.displayEstimatedImpactTech = true;\n            } else {\n                this.displayEstimatedImpactTech = false;\n            }\n            if (this.phase1.predictedImpact.includes('OPERATIONS')) {\n                this.displayEstimatedImpactOps = true;\n            } else {\n                this.displayEstimatedImpactOps = false;\n            }\n        } else {\n            this.displayChangePeriod = false;\n        }\n\n\n    }\n    onSelectNatureOfChange($event) {\n\n        if (this.phase1.natureOfChange !== undefined ) {\n            this.displayEOSystem = true ;\n        } else {\n            this.displayEOSystem = false ;\n        }\n    }\n\n    onSelectEosSystem($event) {\n        this.phase1.eosSystem = $event.target.value;\n        this.phase1.TCB_CRF_ID = $event.target.value + '0001'; // database reference to eos tcb number + 1\n        this.displayTCB_CRF_ID = true ;\n        this.displayConfigurationItems = true;\n    }\n\n    onSelectChangeTypeHW(e) {\n\n        if (e.target.checked) {\n            this.phase1.change.hardware = true;\n        } else {\n            this.phase1.change.hardware = false ;\n        }\n        if (this.phase1.change.firmware || this.phase1.change.software || this.phase1.change.hardware ) {\n            this.displayAdditionalAttachedDocuments = true ;\n        } else { this.displayAdditionalAttachedDocuments = false ; }\n    }\n\n    onSelectChangeTypeSW(e) {\n        if (e.target.checked) {\n            this.phase1.change.software = true;\n        } else {\n            this.phase1.change.software = false ;\n        }\n        if (this.phase1.change.firmware || this.phase1.change.software || this.phase1.change.hardware ) {\n            this.displayAdditionalAttachedDocuments = true ;\n        } else { this.displayAdditionalAttachedDocuments = false ; }\n    }\n\n    onSelectChangeTypeFW(e) {\n        if (e.target.checked) {\n            this.phase1.change.firmware = true;\n        } else {\n            this.phase1.change.firmware = false ;\n        }\n        if (this.phase1.change.firmware || this.phase1.change.software || this.phase1.change.hardware ) {\n            this.displayAdditionalAttachedDocuments = true ;\n        } else { this.displayAdditionalAttachedDocuments = false ; }\n    }\n    onSelectAdditionalDocuments(e) {\n        if (e.target.value === 'yes') {\n            this.phase1.additionalDocuments = true;\n            this.displayEstimatedImpact = false ;\n        } else if (e.target.value === 'no') {\n            this.files = [];\n            this.phase1.additionalDocuments = false;\n            this.phase1.numberOfPages = undefined ;\n            this.displayEstimatedImpact = true ;\n        }\n    }\n    public dropped(files: NgxFileDropEntry[]) {\n        this.displayEstimatedImpact = true;\n        // this.files = files;\n        this.files.push(files);\n        for (const droppedFile of files) {\n\n            // Is it a file?\n            if (droppedFile.fileEntry.isFile) {\n                const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n                fileEntry.file((file: File) => {\n\n                    // Here you can access the real file\n                    console.log(droppedFile.relativePath, file);\n\n                    /**\n                     // You could upload it like this:\n                     const formData = new FormData()\n                     formData.append('logo', file, relativePath)\n\n                     // Headers\n                     const headers = new HttpHeaders({\n            'security-token': 'mytoken'\n          })\n\n                     this.http.post('https://mybackend.com/api/upload/sanitize-and-save-logo', formData, { headers: headers, responseType: 'blob' })\n                     .subscribe(data => {\n            // Sanitized logo returned from backend\n          })\n                     **/\n\n                });\n            } else {\n                // It was a directory (empty directories are added, otherwise only files)\n                const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n                console.log(droppedFile.relativePath, fileEntry);\n            }\n        }\n    }\n\n    public fileOver(event) {\n        console.log(event);\n    }\n\n    public fileLeave(event) {\n        console.log(event);\n    }\n    estimatedImpact($event) {\n        if ( this.phase1.estimatedImpacts.technical !== undefined   ||\n            this.phase1.estimatedImpacts.clients !== undefined   ||\n            this.phase1.estimatedImpacts.operations !== undefined  ) {\n             this.displayProblemReportRaised = true ;\n        } else {\n            this.displayProblemReportRaised = false ; }\n    }\n    onSelectReportRaised(e) {\n        if (e.target.value === 'yes') {\n            this.displayChangePreTested = false ;\n            this.phase1.problemReportRaised = true;\n        } else if (e.target.value === 'no') {\n            this.displayChangePreTested = true ;\n            this.phase1.problemReportRef = undefined;\n            this.phase1.problemReportRaised = false;\n        }\n    }\n    onInputProblemReportRef() {\n        this.displayChangePreTested = true;\n    }\n\n    onSelectPreTested(e) {\n        if (e.target.value === 'yes') {\n            this.phase1.changeSuccessfullyTested = 'yes';\n            this.displayChangeNotSuccessfullyTestedReason = false ;\n            this.displaySpecialistComments = true ;\n            this.phase1.changeNotSuccessfullyTestedReason = undefined ;\n            if (this.displaySelectTemporaryAmountOfDays) {\n                this.displayRecommendOrOppose = true ;\n            }\n        } else if (e.target.value === 'no') {\n            this.phase1.changeNotSuccessfullyTestedReason = undefined;\n            this.phase1.changeSuccessfullyTested = 'no';\n            this.displayChangeNotSuccessfullyTestedReason = true ;\n            this.displaySpecialistComments = false ;\n            this.displayRecommendOrOppose = false ;\n        } else if (e.target.value === 'na') {\n            this.phase1.changeSuccessfullyTested = 'na';\n            this.displayChangeNotSuccessfullyTestedReason = false ;\n            this.displaySpecialistComments = true ;\n            this.phase1.changeNotSuccessfullyTestedReason = undefined ;\n            if (this.displaySelectTemporaryAmountOfDays) {\n                this.displayRecommendOrOppose = true ;\n            }\n        }\n    }\n    onUnsuccessfulTestReason() {\n        this.displaySpecialistComments = true ;\n        if (this.displaySelectTemporaryAmountOfDays) {\n            this.displayRecommendOrOppose = true ;\n        }\n    }\n\n    onInputSpecialistComment() {\n        this.displayProposedImplementationDate = true ;\n    }\n\n    onSelectProposedImplementationDate() {\n        this.displayRecommendOrOppose = true ;\n    }\n    onSelectRecommendOrOppose($event) {\n        this.phase1.recommend_oppose = $event.target.value;\n        const submitButton = document.getElementById('submit');\n        submitButton.classList.remove('disabled');\n        this.activateSubmitButton = true;\n    }\n    // onSelectSubmittedToAllConcerned (e) {\n    //     if (e.target.value === 'yes') {\n    //         this.phase2.submittedToAllParties = true;\n    //     } else if (e.target.value === 'no') {\n    //         this.phase2.notSubmittedToAllPartiesReason = undefined;\n    //         this.phase2.submittedToAllParties = false;\n    //     }\n    // }\n\n    onSubmit() {\n\n        swal({\n            title: 'Are you sure?',\n            text: \"You won't be able make changes to your submission\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Submit',\n            cancelButtonText: 'Cancel',\n            confirmButtonColor: '#5bc0de',\n            cancelButtonColor: '#d9534f' ,\n            reverseButtons: true\n        }).then((result) => {\n            if (result.value) {\n                // perform post with service\n                this.phase2.submitPhase2(this.phase1 , this.Token).subscribe((data: Data) => {\n                    if (data.success) {\n\n                    }\n                    });\n                console.log(JSON.stringify(this.phase1));\n            } else if (\n                result.dismiss === swal.DismissReason.cancel\n            ) {\n                swal({\n                    title: 'Cancelled',\n                    text: 'Your may continue to make changes',\n                    type: 'error',\n                    showConfirmButton: false,\n                    timer: 1500\n                });\n            }\n        });\n    }\n\n\n\n    ngOnInit() {\n        this.phase2.getCSRFToken().subscribe( (data: Data) => {\n            this.Token = data.tokenValue ;\n        });\n        this.phase2.getPageData().subscribe((data: Data) => {\n            this.availablePriorities     = data[0];\n            this.availableImpacts        = data[1];\n            this.availablePeriods        = data[2];\n            this.availableNatureOfChange = data[3];\n            this.availableEosSystems     = data[4];\n\n        });\n        this.RFC.requestedChange = 'We need new laptops for engineering';\n        this.RFC.description = 'The reason for this is some blah blah software that can only run on blah blah nonsens give me new ones. Newones forever been asldfnadsnfgjSDBNVL;Sndv;ljNF;Lhnl;gvnW;LFHoefhoUIHEFOJKnefHWEV         ERFG   wef  ew fwef    wef     wegf    wef     ';\n        this.phase1.TCB_CRF_ID = 'Undefined' ;\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<!--Created by Blaine Viljoen(28023374)-->\\r\\n\\r\\n<form>\\r\\n    <div class=\\\"shadow card bg-light mx-auto\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <h3 class=\\\"pt-3 px-3 text-primary\\\">CCR Phase 3: Sign Off</h3>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\">Implementation successful?</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"Select 'Yes' or 'No' whether the change was successfully implemented or not. By left-mouse-button clicking on the appropriate check box the selection is made.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom-left\\\" popoverTitle=\\\"CHANGE REQUEST SUCCESSFUL IMPLEMENTATION\\\"\\r\\n                        class=\\\"col\\\">\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"implementationSuccess\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectImplementationSuccessful($event)\\\"\\r\\n                        >\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"implementationSuccess\\\"\\r\\n                               value=\\\"no\\\"\\r\\n                               (click)=\\\"onSelectImplementationSuccessful($event)\\\"\\r\\n                        >\\r\\n                        No\\r\\n                    </Label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-3 px-3\\\">\\r\\n                <div class=\\\"col\\\" *ngIf=\\\"!this.phase3.implementationSuccessful&&this.showImpChange\\\">\\r\\n                    <ngx-select-dropdown ngbPopover=\\\"Select from the drop down list whether the change request has either been Aborted or Regressed.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom-left\\\" popoverTitle=\\\"CHANGE REQUEST ABORT/REGRESS\\\" id=\\\"abortRegress\\\" name=\\\"abortRegress\\\"\\r\\n                        (change)=\\\"onSelectAbortRegress($event)\\\"\\r\\n                        [multiple]=\\\"false\\\"\\r\\n                        [(ngModel)]=\\\"this.phase3.abortRegressReason\\\"\\r\\n                        [options]=\\\"abortOrRegress\\\"\\r\\n                    >\\r\\n                    </ngx-select-dropdown>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.abort||this.phase3.regress\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3 pt-2\\\" for=\\\"abortRegressReason\\\">Reason:</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"Please provide any relevant information as to why this change request was aborted/regressed.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom-left\\\" popoverTitle=\\\"CHANGE REQUEST ABORT/REGRESS REASON\\\"\\r\\n                        class=\\\"col-sm\\\">\\r\\n                    <input type=\\\"text\\\" id=\\\"abortRegressReason\\\" name=\\\"abortRegressReason\\\" class=\\\"px-3 rounded form-control\\\" [(ngModel)]=\\\"this.phase3.impSuccessReason\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.regress\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\">Already Regressed?</label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"alreadyRegressed\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectAlreadyRegressed($event)\\\"\\r\\n                        >\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"alreadyRegressed\\\"\\r\\n                               value=\\\"no\\\"\\r\\n                               (click)=\\\"onSelectAlreadyRegressed($event)\\\"\\r\\n                        >\\r\\n                        No\\r\\n                    </Label>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"!this.phase3.alreadyRegressed && this.showSched\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label class=\\\"px-3\\\" for=\\\"schedRegressDate\\\">Scheduled Regression Date: </label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"If for some reason a regression was required after the change was implemented but could not take place for whatever reason, it will be required to schedule a regression as soon as possible. Please select a date for the regression of the change request.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom-left\\\" popoverTitle=\\\"CHANGE REQUEST REGRESSION DATE\\\"\\r\\n                        class=\\\"col\\\" >\\r\\n                    <input class=\\\"px-3 rounded w-75 form-control\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           id=\\\"schedRegressDate\\\"\\r\\n                           name=\\\"schedRegressDate\\\"\\r\\n                           [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                           [(ngModel)]=\\\"this.phase3.schedRegressionDate\\\"  bsDatepicker>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3 pr-3\\\" *ngIf=\\\"this.phase3.implementationSuccessful&&this.showImpChange\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\" for=\\\"tcbEvalPeriod\\\" >Temporary period start date:</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"This field refers to an evaluation period required to validate the success of the change over a longer period of time. The TCBCP administrator must enter a start date and end date  not exceeding 31 days in total.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom-left\\\" popoverTitle=\\\"CHANGE REQUEST TCB EVALUATION PERIOD\\\"\\r\\n                        class=\\\"col-sm\\\" >\\r\\n                    <input class=\\\"rounded w-100 form-control\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           id=\\\"tcbEvalPeriod\\\"\\r\\n                           name=\\\"tcbEvalPeriod\\\"\\r\\n                           bsDaterangepicker\\r\\n                           [bsConfig]=\\\"datepickerConfig\\\"\\r\\n                           [(ngModel)]=\\\"this.dateRangePicker\\\"\\r\\n                           (ngModelChange)=\\\"onSelectTCBEval($event)\\\"\\r\\n                    >\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.implementationSuccessful&&this.showImpChange\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\">Additional documents?</label>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"additionalDocs\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectAdditionalDocs($event)\\\"\\r\\n                        >\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"additionalDocs\\\"\\r\\n                               value=\\\"no\\\"\\r\\n                               (click)=\\\"onSelectAdditionalDocs($event)\\\"\\r\\n                        >\\r\\n                        No\\r\\n                    </Label>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.additionalDocs\\\">\\r\\n                <div class=\\\"px-3\\\" ngbPopover=\\\"Please drag and drop or select any relevant files that need to uploaded and linked with this respective change request\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom-left\\\" popoverTitle=\\\"CHANGE REQUEST ADDITIONAL DOCUMENTS\\\">\\r\\n                    <ngx-file-drop  multiple dropZoneLabel=\\\"Drop files here\\\" (onFileDrop)=\\\"dropped($event)\\\"\\r\\n                                   (onFileOver)=\\\"fileOver($event)\\\" (onFileLeave)=\\\"fileLeave($event)\\\">\\r\\n                        <ng-template  ngx-file-drop-content-tmp let-openFileSelector=\\\"openFileSelector\\\">\\r\\n                            Please drag and drop your additional files here\\r\\n                            <button type=\\\"button\\\" (click)=\\\"openFileSelector()\\\">Browse Files</button>\\r\\n                        </ng-template>\\r\\n                    </ngx-file-drop>\\r\\n                    <div class=\\\"upload-table px-3\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th>Name</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody class=\\\"upload-name-style\\\">\\r\\n                            <tr *ngFor=\\\"let item of files\\\">\\r\\n                                <td><strong>{{ item[0].relativePath }}</strong></td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.additionalDocs\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\">All Items Updated?</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"At the end of the update period select whether all update items were updated by selecting the 'Yes' check box with the left-mouse-button. It is important to adhere to the update period to achieve finalisation of the TCB-CRF.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom-left\\\" popoverTitle=\\\"CHANGE REQUEST UPDATED ITEMS\\\"\\r\\n                        class=\\\"col\\\">\\r\\n                    <Label class=\\\"checkbox-inline px-3\\\">\\r\\n                        <input type=\\\"checkbox\\\"\\r\\n                               name=\\\"itemsUpdated\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectItemsUpdated($event)\\\"\\r\\n                        >\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.itemsUpdated\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3\\\">Evaluation successful?</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"Please confirm whether or not the change request validation was successful by selecting the corresponding 'Yes' or 'No' options.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom-left\\\" popoverTitle=\\\"CHANGE REQUEST SUCCESSFUL EVALUATION\\\"\\r\\n                        class=\\\"col\\\">\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"evalSuccess\\\"\\r\\n                               value=\\\"yes\\\"\\r\\n                               (click)=\\\"onSelectEvalSuccess($event)\\\"\\r\\n                        >\\r\\n                        Yes\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"evalSuccess\\\"\\r\\n                               value=\\\"no\\\"\\r\\n                               (click)=\\\"onSelectEvalSuccess($event)\\\"\\r\\n                        >\\r\\n                        No\\r\\n                    </Label>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3\\\" *ngIf=\\\"this.phase3.evalSuccess\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label  class=\\\"px-3\\\">Confirm Close-out:</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"Please confirm or reject the current change request by selecting the corresponding 'Confirm' or 'Reject' options.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom-left\\\" popoverTitle=\\\"CHANGE REQUEST CONFIRMATION\\\"\\r\\n                        class=\\\"col\\\">\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"confirmChoice\\\"\\r\\n                               value=\\\"Confirm\\\"\\r\\n                               (click)=\\\"onSelectConfirm($event)\\\"\\r\\n                        >\\r\\n                        Confirm\\r\\n                    </Label>\\r\\n                    <Label class=\\\"radio-inline px-3\\\">\\r\\n                        <input type=\\\"radio\\\"\\r\\n                               name=\\\"confirmChoice\\\"\\r\\n                               value=\\\"Reject\\\"\\r\\n                               (click)=\\\"onSelectConfirm($event)\\\"\\r\\n                        >\\r\\n                        Reject\\r\\n                    </Label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div  class=\\\"row px-3\\\">\\r\\n                    <div class=\\\"col\\\"></div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <button class=\\\"btn btn-outline-danger btn-rounded w-100  my-4 waves-effect z-depth-0\\\"\\r\\n                                (click)=\\\"onSubmit()\\\"> Cancel\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"></div>\\r\\n                    <div class=\\\"col\\\" >\\r\\n                        <button\\r\\n                                class=\\\"btn btn-outline-info btn-rounded w-100 my-4  waves-effect z-depth-0 disabled\\\"\\r\\n                                id=\\\"submit\\\"\\r\\n                                (click)=\\\"onSubmit()\\\"> Submit\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row pt-3 pr-3\\\" *ngIf=\\\"!this.phase3.evalSuccess&&this.showEvalChange\\\">\\r\\n                <div class=\\\"col-sm\\\">\\r\\n                    <label class=\\\"px-3 pt-2\\\" for=\\\"evalFail\\\">Reason:</label>\\r\\n                </div>\\r\\n                <div ngbPopover=\\\"Please provide any relevant information as to why the evaluation of the change request was not successful.\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"bottom-left\\\" popoverTitle=\\\"CHANGE REQUEST EVALUATION FAILURE REASON\\\"\\r\\n                        class=\\\"col-sm\\\">\\r\\n                    <input  type=\\\"text\\\" id=\\\"evalFail\\\" name=\\\"evalFail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"this.phase3.evalFailure\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"this.activateSubmitButton\\\">\\r\\n            <div  class=\\\"row px-3\\\">\\r\\n                <div class=\\\"col\\\"></div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <button class=\\\"btn btn-outline-danger btn-rounded w-100  my-4 waves-effect z-depth-0\\\"\\r\\n                            (click)=\\\"onSubmit()\\\"> Cancel\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n                <div class=\\\"col\\\" >\\r\\n                    <button class=\\\"btn btn-outline-info btn-rounded w-100 my-4  waves-effect z-depth-0\\\"\\r\\n                            id=\\\"submit\\\"\\r\\n                            (click)=\\\"onSubmit()\\\"> Submit\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<!--Created by Blaine Viljoen(28023374)-->\\r\\n\"","// Created by Blaine Viljoen 28023374\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {BsDatepickerConfig} from 'ngx-bootstrap';\r\nimport {CCRPhase3} from '../../models/CCR-Phase3';\r\nimport {FileSystemDirectoryEntry, FileSystemFileEntry, NgxFileDropEntry} from 'ngx-file-drop';\r\nimport {Data, Router} from '@angular/router';\r\nimport {OAuth} from '../../models/OAuth';\r\nimport {OathService} from '../../services/oath.service';\r\nimport {Phase3Service} from '../../services/phase3.service';\r\n\r\n@Component({\r\n  selector: 'app-phase3',\r\n  templateUrl: './phase3.component.html',\r\n  styleUrls: ['./phase3.component.css']\r\n})\r\nexport class Phase3Component implements OnInit {\r\n\r\n  datepickerConfig: Partial<BsDatepickerConfig> ;\r\n  dateRangePicker: Date;\r\n  displayImpSuccess: boolean;\r\n  showImpChange: boolean;\r\n  showEvalChange: boolean;\r\n  showSched: boolean;\r\n  activateSubmitButton: boolean ;\r\n  public files: NgxFileDropEntry[] [] = []  ;\r\n\r\n  abortOrRegress: String[] = ['Abort', 'Regress'];\r\n\r\n  phase3: CCRPhase3 = {\r\n    schedRegressionDate: undefined,\r\n    tcbEvalStart: undefined,\r\n    tcbEvalEnd: undefined,\r\n    implementorName: undefined,\r\n    implementationSuccessful: true,\r\n    abort: false,\r\n    regress: false,\r\n    abortRegressReason: undefined,\r\n    impSuccessReason: undefined,\r\n    alreadyRegressed: true,\r\n    additionalDocs: false,\r\n    itemsUpdated: false,\r\n    evalSuccess: false,\r\n    ccrConfirmation: false,\r\n    evalFailure: undefined\r\n  };\r\n\r\n    user: String = '';\r\n    Token = null ;\r\n\r\n  constructor(private Phase3Service: Phase3Service ,\r\n              private router: Router) {\r\n    this.datepickerConfig = Object.assign({},\r\n        {containerClass: 'theme-dark-blue'},\r\n        { dateInputFormat: 'YYYY-MM-DD'} ,\r\n        {showWeekNumbers: false},\r\n        {minDate: new Date()});\r\n  }\r\n  onSelectTCBEval($event) {\r\n      const startDate = $event[0];\r\n      const endDate = $event[1];\r\n      console.log(startDate);\r\n      console.log(endDate);\r\n      this.phase3.tcbEvalStart = startDate;\r\n      this.phase3.tcbEvalEnd = endDate;\r\n  }\r\n\r\n  onSelectAbortRegress($event) {\r\n    if (this.phase3.abortRegressReason !== undefined) {\r\n      if (this.phase3.abortRegressReason.includes('Abort')) {\r\n        this.phase3.abort = true;\r\n        this.phase3.regress = false;\r\n        this.activateSubmitButton = true;\r\n        this.phase3.abortRegressReason = undefined;\r\n        this.phase3.alreadyRegressed = false;\r\n        this.phase3.schedRegressionDate = undefined;\r\n      } else if (this.phase3.abortRegressReason.includes('Regress')) {\r\n        this.phase3.abort = false;\r\n        this.phase3.regress = true;\r\n        this.activateSubmitButton = false;\r\n        this.phase3.abortRegressReason = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  onSelectImplementationSuccessful(e) {\r\n    if (e.target.value === 'yes') {\r\n      this.phase3.implementationSuccessful = true;\r\n      this.displayImpSuccess = false;\r\n      this.phase3.abort = false;\r\n      this.phase3.regress = false;\r\n      this.showImpChange = true;\r\n      this.phase3.schedRegressionDate = undefined;\r\n      this.phase3.abort = false;\r\n      this.phase3.regress = false;\r\n      this.phase3.abortRegressReason = undefined;\r\n      this.phase3.impSuccessReason = undefined;\r\n      this.phase3.alreadyRegressed = true;\r\n      this.activateSubmitButton = false;\r\n    } else {\r\n      this.phase3.implementationSuccessful = false;\r\n      this.displayImpSuccess = true;\r\n      this.showImpChange = true;\r\n      this.showEvalChange = false;\r\n      this.phase3.itemsUpdated = false;\r\n      this.phase3.additionalDocs = false;\r\n      this.phase3.tcbEvalStart = undefined;\r\n      this.phase3.tcbEvalEnd = undefined;\r\n      this.phase3.additionalDocs = false;\r\n      this.phase3.itemsUpdated = false;\r\n      this.phase3.evalSuccess = false;\r\n      this.phase3.ccrConfirmation = false;\r\n      this.phase3.evalFailure = undefined;\r\n      this.showEvalChange = false;\r\n      this.activateSubmitButton = false;\r\n    }\r\n  }\r\n  \r\n  onSelectAdditionalDocs(e) {\r\n      if (e.target.value === 'yes') {\r\n          this.phase3.additionalDocs = true;\r\n      } else {\r\n          this.phase3.additionalDocs = false;\r\n          this.phase3.itemsUpdated = true;\r\n      }\r\n  }\r\n\r\n  onSelectAlreadyRegressed(e) {\r\n      if (e.target.value === 'yes') {\r\n          this.phase3.alreadyRegressed = true;\r\n          this.activateSubmitButton = true;\r\n          this.showSched = false;\r\n      } else {\r\n          this.phase3.alreadyRegressed = false;\r\n          this.activateSubmitButton = true;\r\n          this.showSched = true;\r\n      }\r\n\r\n  }\r\n\r\n  onSelectItemsUpdated(e) {\r\n      if (e.target.value === 'yes') {\r\n          this.phase3.itemsUpdated = true;\r\n      }\r\n  }\r\n\r\n  onSelectEvalSuccess(e) {\r\n      if (e.target.value === 'yes') {\r\n          this.phase3.evalSuccess = true;\r\n          this.showEvalChange = true;\r\n          this.phase3.evalFailure = undefined;\r\n          this.activateSubmitButton = false;\r\n      } else {\r\n          this.phase3.evalSuccess = false;\r\n          this.showEvalChange = true;\r\n          this.phase3.ccrConfirmation = false;\r\n          this.activateSubmitButton = true;\r\n      }\r\n  }\r\n\r\n  onSelectConfirm(e) {\r\n      if (e.target.value === 'Confirm') {\r\n          this.phase3.ccrConfirmation = true;\r\n          this.activateSubmitButton = true;\r\n      } else {\r\n          this.phase3.ccrConfirmation = false;\r\n          this.activateSubmitButton = true;\r\n      }\r\n  }\r\n  onSubmit() {\r\n        console.log(JSON.stringify(this.phase3));\r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n      this.Token = this.Phase3Service.getCSRFToken().subscribe( (data: Data) => {\r\n          this.Token = data.tokenValue ;\r\n      });\r\n  }\r\n\r\n    public fileOver(event) {\r\n        console.log(event);\r\n    }\r\n\r\n    public fileLeave(event) {\r\n        console.log(event);\r\n    }\r\n\r\n    public dropped(files: NgxFileDropEntry[]) {\r\n        // this.displayEstimatedImpact = true;\r\n        // this.files = files;\r\n        this.files.push(files);\r\n        for (const droppedFile of files) {\r\n\r\n            // Is it a file?\r\n            if (droppedFile.fileEntry.isFile) {\r\n                const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n                fileEntry.file((file: File) => {\r\n\r\n                    // Here you can access the real file\r\n                    console.log(droppedFile.relativePath, file);\r\n\r\n                    /**\r\n                     // You could upload it like this:\r\n                     const formData = new FormData()\r\n                     formData.append('logo', file, relativePath)\r\n\r\n                     // Headers\r\n                     const headers = new HttpHeaders({\r\n            'security-token': 'mytoken'\r\n          })\r\n\r\n                     this.http.post('https://mybackend.com/api/upload/sanitize-and-save-logo', formData, { headers: headers, responseType: 'blob' })\r\n                     .subscribe(data => {\r\n            // Sanitized logo returned from backend\r\n          })\r\n                     **/\r\n\r\n                });\r\n            } else {\r\n                // It was a directory (empty directories are added, otherwise only files)\r\n                const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\r\n                console.log(droppedFile.relativePath, fileEntry);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// Created by Blaine Viljoen 28023374\r\n","module.exports = \"\\n\\n\\nhtml, body{\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  font-size: 150%;\\n  vertical-align: baseline;\\n}\\n\\nbody {\\n  line-height: 1;\\n}\\n\\n/* Basic */\\n\\nbody {\\n  height: 100%;\\n}\\n\\nbody.is-loading * {\\n  transition: none !important;\\n  -webkit-animation: none !important;\\n  animation: none !important;\\n}\\n\\nbody, input, select, textarea {\\n  color: #6e6e6e;\\n  /*font-family: 'Source Sans Pro', sans-serif;*/\\n  font-size: 16pt;\\n  font-weight: 400;\\n  line-height: 1.75em;\\n  width: 100%;\\n}\\n\\n/* Form */\\n\\nlabel {\\n  /*display: block;*/\\n  color: #5b5b5b;\\n  font-size: 0.8em;\\n  font-weight: 700;\\n  letter-spacing: 0.125em;\\n  line-height: 1.75em;\\n  /*text-transform: uppercase;*/\\n  margin: 0 0 0.5em 0;\\n}\\n\\n.ng-valid[required].ng-touched, .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form), .ng-invalid:not(form).ng-touched {\\n  border-left: 5px solid #a94442; /* red */\\n}\\n\\n.registrationForm .form-group input.true{\\n  border-left: 5px solid #42A948;\\n}\\n\\n.registrationForm .form-group input.false{\\n  border-left: 5px solid #a94442;\\n}\\n\\n@media screen and (max-width: 1030px){\\n  .registrationForm {\\n    margin-right: 2% !important;\\n    margin-left: 2% !important;\\n  }\\n}\\n\\n/* 100% Image Width on Smaller Screens */\\n\\n@media only screen and (max-width: 700px) {\\n  .modal-content {\\n    width: 100%;\\n  }\\n}\\n\\n.registrationForm {\\n  display: flex;\\n  flex-direction: column;\\n  /*margin-right: 25%;*/\\n  /*margin-left:25%;*/\\n}\\n\\n.registrationForm > * {\\n  width: 100%;\\n}\\n\\n/* Main */\\n\\n#main {\\n  padding: 6em 0 5em 0;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n#main:before {\\n  background: rgba(224, 224, 224, 0.75);\\n  content: '';\\n  height: 100%;\\n  left: 50%;\\n  position: absolute;\\n  top: 0;\\n  width: 1px;\\n  z-index: -1;\\n}\\n\\n#main header.major,\\n#main footer.major {\\n  background: #ffffff;\\n}\\n\\n@media screen and (max-width: 1680px) {\\n\\n  /* Basic */\\n  body, input, select, textarea {\\n    font-size: 14pt;\\n  }\\n}\\n\\n/* Normal */\\n\\n@media screen and (max-width: 1280px) {\\n\\n  /* Basic */\\n  body, input, select, textarea {\\n    font-size: 13pt;\\n  }\\n}\\n\\n\\n\\n\\n\"","module.exports = \"<!-- Created by : Liam Gordon McCabe-->\\n<!-- Student number: 27455211-->\\n<div class=\\\"card mx-auto\\\" style=\\\"width: 60rem;\\\">\\n\\n    <h5 class=\\\"card-header info-color white-text text-center py-4\\\">\\n        <strong>Register</strong>\\n    </h5>\\n\\n<div class=\\\"card-body px-lg-5 pt-3\\\">\\n  <form class=\\\"registrationForm\\\" >\\n\\n    <div class=\\\"form-group\\\" style=\\\"color: #757575;\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label for=\\\"title\\\">Title</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <select\\n                        ngbPopover=\\\"Select a title by selecting an option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"SELECT TITLE\\\"\\n                        class=\\\"px-3 rounded form-control\\\"\\n                        name=\\\"title\\\"\\n                        id=\\\"title\\\"\\n                        (change)=\\\"onSelectTitle($event)\\\"\\n                        [(ngModel)]=\\\"this.User.title\\\"\\n                >\\n                    <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\n                    <option *ngFor=\\\"let title of availableTitles\\\"  [value]=\\\"title[0]\\\" >{{title[1]}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label for=\\\"site\\\">Site</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <select\\n                        ngbPopover=\\\"Select a site by selecting an option from the drop down list\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"SELECT SITE\\\"\\n                        class=\\\"px-3 rounded form-control\\\"\\n                        [(ngModel)]=\\\"this.User.site\\\"\\n                        name=\\\"site\\\"\\n                        id=\\\"site\\\"\\n                        (change)=\\\"onSelectTitle($event)\\\"\\n                >\\n                    <option selected=\\\"selected\\\" disabled=\\\"disabled\\\">Select one</option>\\n                    <option *ngFor=\\\"let site of availableSites\\\" [value]=\\\"site[0]\\\">{{site[1]}}</option>\\n                </select>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\" >\\n      <label for=\\\"name\\\">Name</label>\\n      <input\\n              ngbPopover=\\\"Please enter your first name\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"INPUT FIRST NAME\\\"\\n              required class=\\\"form-control\\\" [(ngModel)]=\\\"User.name\\\"\\n              type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"surname\\\">Surname</label>\\n      <input\\n              ngbPopover=\\\"Please enter your surname\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"INPUT SURNAME\\\"\\n              required class=\\\"form-control\\\" [(ngModel)]=\\\"User.surname\\\"\\n              type=\\\"text\\\" name=\\\"surname\\\" id=\\\"surname\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"employeeID\\\">Employee ID</label>\\n      <input\\n              ngbPopover=\\\"Please enter your employee ID\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"INPUT EMPLOYEE ID\\\"\\n              class=\\\"form-control\\\" (input)=\\\"validateEmpId(User.employeeId)\\\"\\n              [ngClass]=\\\"{'true': this.showEmpId, 'false':!this.showEmpId}\\\"\\n              [(ngModel)]=\\\"User.employeeId\\\"\\n              type=\\\"number\\\" name='EmployeeId' id=\\\"employeeID\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Contact Number</label>\\n      <label *ngIf=\\\"this.showPhone == false\\\" style=\\\"color: red\\\">Invalid South African Number</label>\\n      <label *ngIf=\\\"this.showPhone == true\\\" style=\\\"color: green\\\">Valid South African Number </label>\\n      <input\\n              ngbPopover=\\\"Please enter your phone number\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"INPUT PHONE NUMBER\\\"\\n              (input)=\\\"validatePhoneNumber(this.User.contactNumber)\\\"\\n              class=\\\"form-control\\\" [ngClass]=\\\"{'true': this.showPhone, 'false': !this.showPhone}\\\"\\n              [(ngModel)]=\\\"this.User.contactNumber\\\"\\n              type=\\\"text\\\"\\n              name=\\\"contactNum\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <label *ngIf=\\\"this.showEmail == false\\\" style=\\\"color: red\\\">Invalid</label>\\n      <label *ngIf=\\\"this.showEmail == true\\\" style=\\\"color: green\\\">Valid\\n      </label>\\n      <input\\n              ngbPopover=\\\"Please enter the username of your email before the @\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"INPUT USERNAME\\\"\\n              (input)=\\\"validateEmail(User.email)\\\" class=\\\"form-control\\\"\\n             [ngClass]=\\\"{'true': this.showEmail, 'false': !this.showEmail}\\\"\\n             id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]= User.email type=\\\"email\\\"\\n             required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input\\n              ngbPopover=\\\"Password must be at least 8 characters in length containing  1 Uppercase, 1 Lowercase and 1 special character\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"INPUT PASSWORD\\\"\\n             (input)=\\\"validatePassword(password)\\\"\\n             [ngClass]=\\\"{'true': this.showPassword, 'false': !this.showPassword}\\\"\\n             class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" required>\\n      <password-strength-meter [password]=\\\"password\\\"\\n                               class=\\\"form-control\\\" id=\\\"passwordStrengthMeter\\\" name=\\\"passwordStrengthMeter\\\" >\\n      </password-strength-meter>\\n      <label for=\\\"passwordCheck\\\">Confirm Password</label>\\n      <input\\n              ngbPopover=\\\"Re-Enter your password\\\" triggers=\\\"mouseenter:mouseleave\\\" placement=\\\"right\\\" popoverTitle=\\\"INPUT PASSWORD AGAIN\\\"\\n              (input)=\\\"confirmPassword(passwordCheck)\\\"\\n             [ngClass]=\\\"{'true': this.showPasswordCheck, 'false': !this.showPasswordCheck}\\\"\\n             class=\\\"form-control\\\" id=\\\"passwordCheck\\\" name=\\\"passwordCheck\\\" [(ngModel)]=\\\"passwordCheck\\\" type=\\\"password\\\">\\n\\n    </div>\\n<!--    <div class=\\\"form-group\\\">-->\\n<!--      <label for=\\\"permissionLevel\\\">Permission Level</label>-->\\n<!--      <select title=\\\"Select your relevant Permission level\\\" required  (change)=\\\"onSelectPermission($event.target.value)\\\"-->\\n<!--              name=\\\"permissionLevel\\\" id=\\\"permissionLevel\\\">-->\\n<!--        <option *ngFor=\\\"let permission of availablePermissions\\\">{{permission}}</option>-->\\n<!--      </select>-->\\n<!--    </div>-->\\n<!--    <div class=\\\"form-group\\\">-->\\n<!--      <label for=\\\"region\\\">Region</label>-->\\n<!--      <select title=\\\"Select your relevant region\\\" (change)=\\\"onSelectRegion($event.target.value)\\\" name=\\\"region\\\" id=\\\"region\\\">-->\\n<!--        <option *ngFor=\\\"let region of availableRegions\\\">{{region}}</option>-->\\n<!--      </select>-->\\n<!--    </div>-->\\n\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label>Submit</label>-->\\n      <!--<textarea rows=\\\"4\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email.description\\\"-->\\n                <!--type=\\\"text\\\" name=\\\"enquiry\\\"></textarea>-->\\n    <!--</div>-->\\n\\n    <br>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col\\\"></div>\\n              <div class=\\\"col\\\">\\n                  <button\\n                          type=\\\"submit\\\"\\n                          value=\\\"Register\\\"\\n                          class=\\\"btn btn-outline-danger btn-rounded w-100  my-4  waves-effect z-depth-0\\\"\\n                          (click)=\\\"onCancel()\\\"\\n                  >Cancel</button>\\n              </div>\\n              <div class=\\\"col\\\"></div>\\n              <div class=\\\"col\\\">\\n                  <button\\n                          type=\\\"submit\\\"\\n                          value=\\\"Register\\\"\\n                          id=\\\"submit\\\"\\n                          class=\\\"btn btn-outline-info btn-rounded w-100 my-4  waves-effect z-depth-0 disabled\\\"\\n                          [disabled]=\\\"!this.showRegisterButton\\\"\\n                          (click)=\\\"onRegister()\\\"\\n                  >Register</button>\\n              </div>\\n\\n              <div class=\\\"col\\\"></div>\\n          </div>\\n  </form>\\n</div>\\n</div>\\n\"","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Component, OnInit } from '@angular/core';\nimport {Data, Router} from '@angular/router'; // Router import\nimport {User} from '../../models/User'; // interface import\nimport swal from 'sweetalert2'; // Sweet Alerts import\nimport {RegistrationService} from '../../services/registration.service';\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  // Boolean values for input validation\n  private Token = null ;\n  showEmail: Boolean;\n  showPassword: Boolean;\n  showPasswordCheck: Boolean;\n  showRegisterButton: Boolean;\n  showPhone: Boolean;\n  showEmpId: Boolean;\n\n  // Password variables to validate password integrity\n  password: string;\n  passwordCheck: string;\n\n  // Login object created from interface\n  User: User = {\n    title: undefined,\n    surname: undefined,\n    name: undefined,\n    employeeId: undefined ,\n    email: undefined,\n    contactNumber: undefined,\n    site: undefined,\n    password: undefined ,\n  };\n\n  availableTitles: String [] = ['Mr' , 'Ms' , 'Regional manager'];\n  availablePermissions: String [] = ['Specialist', 'Manager' , 'Employee']; // to be delegated to database\n  availableRegions: String [] = ['Northern', 'Southern', 'Both']; // to be delegated to database\n  availableSites: String [] = ['Site1' , 'Site2', 'Site3']; // to be delegated to database\n  constructor( private router: Router , private registration: RegistrationService) { }\n\n  onSelectTitle($event) {\n    if (!(this.User.title === undefined) &&\n        !(this.User.site === undefined) &&\n        !(this.User.email === undefined) &&\n        !(this.User.employeeId === undefined) &&\n        !(this.User.contactNumber === undefined) &&\n        !(this.User.name === undefined) &&\n        !(this.User.surname === undefined) &&\n        !(this.password === undefined)\n    ) {\n      this.showRegisterButton = true;\n    }\n  }\n  onSelectSite($event) {\n    if (!(this.User.title === undefined) &&\n        !(this.User.site === undefined) &&\n        !(this.User.email === undefined) &&\n        !(this.User.employeeId === undefined) &&\n        !(this.User.contactNumber === undefined) &&\n        !(this.User.name === undefined) &&\n        !(this.User.surname === undefined) &&\n        !(this.password === undefined)\n    ) {\n      this.showRegisterButton = true;\n    }\n  }\n  // Validates email input\n  validateEmail(email: string) {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (re.test(String(email).toLowerCase()) === true) {\n    this.showEmail = false;\n  } else {\n    this.showEmail = true;\n  }\n  }\n\n\n  // Validates password on input\n  validatePassword(value: string) {\n    const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.@#\\$%\\^&\\*])(?=.{8,})/;\n    if (re.test(String(value)) === true) {\n      this.showPassword = true;\n    } else {\n      this.showPassword = false;\n    }\n  }\n  // Validates phone number on input\n  validatePhoneNumber(phone: string) {\n    const re = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    if (re.test(phone)) {\n      this.showPhone = true;\n    } else {\n      this.showPhone = false;\n    }\n  }\n  // Confirms the password is correctly chosen\n  confirmPassword(value: string) {\nif (this.password === value) {\n    const registerButton = document.getElementById('submit');\n    registerButton.classList.remove('disabled');\n  this.showPasswordCheck = true;\n  if (!(this.User.title === undefined) &&\n      !(this.User.site === undefined) &&\n      !(this.User.email === undefined) &&\n      !(this.User.employeeId === undefined) &&\n      !(this.User.contactNumber === undefined) &&\n      !(this.User.name === undefined) &&\n      !(this.User.surname === undefined) &&\n      !(this.password === undefined)\n  ) {\n    this.showRegisterButton = true;\n  }\n} else {\n  this.showPasswordCheck = false;\n  this.showRegisterButton = false;\n}\n  }\n  // Validates that employee ID is of 4 character length\n  validateEmpId(employeeId: number) {\n    if (employeeId.toString().length === 4 ) {\n      this.showEmpId = true;\n    } else {\n      this.showEmpId = false;\n    }\n  }\n  onCancel() {\n    this.router.navigate(['login']);\n  }\n  // Called on register button click this is where the data is stored in the database and the password is hashed and stored in the login object\n  onRegister() {\n    if (this.showRegisterButton === true) {\n      // const hash = crypto.MD5(this.passwordCheck);\n      this.User.password = this.passwordCheck;\n      console.log(this.User);\n      this.registration.registerUser(this.User , this.Token).subscribe((data: Data) => {\n        if (data.success) {\n          swal('Success!', data.message, 'success');\n          this.router.navigate(['login']);\n        } else {\n          this.registration.getCSRFToken().subscribe( (data1: Data) => {\n            this.Token = data1.tokenValue ;\n          });\n          swal('Failure', data.message, 'error');\n        }\n      });\n    } else {\n      swal('Failure', 'Please complete the registration form', 'error');\n    }\n  }\n  ngOnInit() {\n     this.registration.getCSRFToken().subscribe( (data: Data) => {\n       this.Token = data.tokenValue ;\n     });\n    this.registration.getPageData().subscribe((data: Data) => {\n      this.availableSites = data[0];\n      this.availableTitles = data[1];\n\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  rfcsignoff works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rfcsignoff',\n  templateUrl: './rfcsignoff.component.html',\n  styleUrls: ['./rfcsignoff.component.css']\n})\nexport class RFCsignoffComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  isSidebarPinned = false;\n  isSidebarToggeled = false;\n\n  constructor() { }\n\n  toggleSidebar() {\n    this.isSidebarToggeled = ! this.isSidebarToggeled;\n  }\n\n  toggleSidebarPin() {\n    this.isSidebarPinned = ! this.isSidebarPinned;\n  }\n\n  getSidebarStat() {\n    return {\n      isSidebarPinned: this.isSidebarPinned,\n      isSidebarToggeled: this.isSidebarToggeled\n    };\n  }\n}\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map  } from 'rxjs/operators';\r\nimport {CookieService} from 'ngx-cookie-service';\r\n\r\n@Injectable()\r\nexport class CcrHttpInterceptor implements HttpInterceptor {\r\n    constructor( private cookieService: CookieService) {}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const Authorization = this.cookieService.get('jwt');\r\n        if (Authorization) {\r\n            req = req.clone({ headers: req.headers.set('Authorization', Authorization) });\r\n        }\r\n\r\n        if (!req.headers.has('Content-Type')) {\r\n            req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });\r\n        }\r\n\r\n        req = req.clone({ headers: req.headers.set('Accept', 'application/json') });\r\n\r\n        return next.handle(req).pipe(\r\n            map((event: HttpEvent<any>) => {\r\n                 // req.headers.append('Authorization', 'Bearer ' + Authorization);\r\n                if (event instanceof HttpResponse) {\r\n                }\r\n                return event;\r\n            }));\r\n    }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CurrentRfcsService{\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCSRFToken() {\r\n        return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\r\n    }\r\n\r\n    getPageData() {\r\n        const obj = {\r\n            dataSelection: 'currentRfcs'\r\n        };\r\n        return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\r\n    }\r\n}\r\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport {Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' }),\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OathService {\r\n  private loggedInStatus = false;\r\n  constructor(private http: HttpClient ) { }\r\n\r\n  get isLoggedIn() {\r\nreturn this.loggedInStatus;\r\n  }\r\n\r\n  setLoggedIn(value: boolean ) {\r\n    this.loggedInStatus = value;\r\n  }\r\n\r\n  getUserDetails(username , password , CSRF_token) {\r\n    const obj = {\r\n      username : username ,\r\n      password: password ,\r\n      CSRF_token: CSRF_token\r\n    };\r\n    return this.http.post( 'http://localhost/ATNSCCR_PHP/backend/api2/login.php', obj , httpOptions); ;\r\n  }\r\n\r\n  getCSRFToken() {\r\n    return  this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\r\n  }\r\n\r\n\r\n}\r\n","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {RFC} from '../models/RFC';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class Phase1Service {\n\n  constructor(private http: HttpClient ) {\n  }\n\n  submitRequest(phase1: RFC , token , selectedSite) {\n    const obj = {\n      date: phase1.dateRequested ,\n      change: phase1.requestedChange ,\n      description: phase1.description,\n      site_ID: selectedSite,\n      CSRF_token: token\n    };\n     return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/initiateRequest.php', obj , httpOptions);\n  }\n  getPageData() {\n    const obj = {\n      dataSelection: 'initiateCCR'\n    };\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\n\n  }\n  getCSRFToken() {\n    return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {CCRPhase1} from '../models/CCR-Phase1';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class Phase2Service {\n\n  constructor(private http: HttpClient ) { }\n\n  getCSRFToken() {\n    return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\n  }\n  getPageData() {\n    const obj = {\n      dataSelection: 'phase2'\n    };\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\n  }\n  submitPhase2( phase2: CCRPhase1 , token) {\n    const obj = {\n      TCB_CRF_ID: phase2.TCB_CRF_ID,\n      requestPriority: phase2.requestPriority,\n      predictedImpact: phase2.predictedImpact,\n      changePeriod: phase2.changePeriod,\n      temporaryPeriodStartDate: undefined,\n      temporaryPeriodNumberOfDays: undefined,\n      temporaryPeriodEndDate: undefined ,\n      natureOfChange: undefined,\n      eosSystem: undefined,\n      configurationItems: undefined,\n      change: {\n        hardware: false,\n        software: false,\n        firmware: false\n      },\n      additionalDocuments: false,\n      numberOfPages: undefined,\n      estimatedImpacts: {\n        operations: undefined,\n        clients: undefined,\n        technical: undefined\n      },\n      problemReportRaised: false,\n      problemReportRef: undefined,\n      changeSuccessfullyTested: undefined,\n      changeNotSuccessfullyTestedReason: undefined,\n      specialistComment: undefined,\n      proposedImplementationDate: undefined,\n      recommend_oppose: undefined,\n      token: token\n    };\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/phase2submit.php' , obj , httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n};\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class Phase3Service{\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCSRFToken() {\r\n        return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {User} from '../models/User';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  registerUser(user: User , token) {\n    const obj = {\n      title: user.title,\n      surname: user.surname,\n      name: user.name,\n      employee_ID: user.employeeId ,\n      username : user.email,\n      contactNum: user.contactNumber,\n      site: user.site,\n      password: user.password,\n      CSRF_token : token\n    };\n\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/register.php', obj, httpOptions);\n  }\n  getCSRFToken() {\n    return this.http.get('http://localhost/ATNSCCR_PHP/backend/api2/token.php'  , httpOptions );\n  }\n  getPageData() {\n    const obj = {\n      dataSelection: 'registration'\n    };\n    return this.http.post('http://localhost/ATNSCCR_PHP/backend/api2/pageData.php' , obj , httpOptions);\n  }\n}\n","/* Created by : Liam Gordon McCabe\r\n*  Student number: 27455211\r\n*/\r\nimport { Injectable } from '@angular/core';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport decode from 'jwt-decode';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteAuthorisationService {\r\n\r\n  constructor( private cookieService: CookieService) {}\r\n\r\n  isAuthorized(allowedPermission: string): boolean {\r\n    // check if the list of allowed roles is empty, if empty, authorize the user to access the page\r\n    if (allowedPermission == null || allowedPermission.length === 0) {\r\n      return true;\r\n    }\r\n    // get token from cookie or state management\r\n    const token = this.cookieService.get('jwt');\r\n    // decode token to read the payload details\r\n    const decodeToken = decode(token);\r\n    // check if it was decoded successfully, if not the token is not valid, deny access\r\n    if (!decodeToken) {\r\n      console.log('Invalid token');\r\n      return false;\r\n    }\r\n    // check if the user roles is in the list of allowed roles, return true if allowed and false if not allowed\r\n    return decodeToken.data.permissions.includes(allowedPermission);\r\n  }\r\n}\r\n","/* Created by : Liam Gordon McCabe\n*  Student number: 27455211\n*/\nimport { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' }),\n};\ninterface isLoggedIn {\n  status: boolean;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private  http: HttpClient) { }\n\n  isLoggedIn(): Observable<isLoggedIn> {\n\n    return this.http.post<isLoggedIn>('http://localhost/ATNSCCR_PHP/backend/api2/isloggedin.php', httpOptions );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}